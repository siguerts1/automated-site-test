[
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205156020",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205156020/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/205156020/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.1",
    "id": 205156020,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4MOm60",
    "tag_name": "v2.18.1",
    "target_commitish": "r2.18",
    "name": "TensorFlow 2.18.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2025-03-07T22:33:29Z",
    "published_at": "2025-03-11T23:49:16Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.1",
    "body": "# Release 2.18.1\r\n\r\n### Security\r\n* Updates curl to `8.11.0` to handle [CVE-2024-2004](https://github.com/advisories/GHSA-97xx-95pm-5qv6), [CVE-2024-2379](https://github.com/advisories/GHSA-wr4c-gwg7-p734), [CVE-2024-2398](https://github.com/advisories/GHSA-mq8w-c2j9-rqxc), [CVE-2024-2466](https://github.com/advisories/GHSA-9xr6-qf7m-2jv5), [CVE-2024-6197](https://github.com/advisories/GHSA-x3h8-3mf2-v794), [CVE-2024-7264](https://github.com/advisories/GHSA-97c4-2w4v-c7r8), [CVE-2024-8096](https://github.com/advisories/GHSA-gv3v-x3f3-7fxm) and [CVE-2024-9681](https://github.com/advisories/GHSA-g337-g667-mjvw).\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Loosen `ml_dtypes` upperbound to `< 1.0.0` to reduce conflicts when installed with other ML ecosystem components.  \r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * Interpreter:\r\n      * `tf.lite.Interpreter` gives warning of future deletion and a redirection notice to its new location at `ai_edge_litert.interpreter`. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n* Tensorflow-tpu for this patch is skipped due to some sparsecore related bugs. We suggest to upgrade to 2.19.0 instead.",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205156020/reactions",
      "total_count": 12,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 2,
      "rocket": 3,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205165244",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205165244/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/205165244/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.19.0",
    "id": 205165244,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4MOpK8",
    "tag_name": "v2.19.0",
    "target_commitish": "r2.19",
    "name": "TensorFlow 2.19.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2025-03-05T22:02:00Z",
    "published_at": "2025-03-12T00:56:36Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.19.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.19.0",
    "body": "# Release 2.19.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `LiteRT`, a.k.a. `tf.lite`:\r\n    * C++ API:\r\n      * The public constants `tflite::Interpreter:kTensorsReservedCapacity` and `tflite::Interpreter:kTensorsCapacityHeadroom` are now const references, rather than `constexpr` compile-time constants. (This is to enable better API compatibility for TFLite in Play services while preserving the implementation flexibility to change the values of these constants in the future.)\r\n    * Python API:\r\n      * `tf.lite.Interpreter` gives deprecation warning redirecting to its new location at `ai_edge_litert.interpreter`, as the API `tf.lite.Interpreter` will be deleted in TF 2.20. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*  `tf.lite`\r\n    * `tfl.Cast` op is now supporting `bfloat16` in runtime kernel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* We have stopped publishing `libtensorflow` packages but it can still be unpacked from the PyPI package.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alain Flaischer, Alex, Alexander Pivovarov, Alexander Shadchin, Alexis Praga, Amrinfathima-Mcw, Andrey Pikas, Andrey Portnoy, Ankur Singh, Ashiq Imran, Assoap, c8ef, charleshofer, Chase Riley Roberts, Chenhao Jiang, Chongyun Lee, Claudio Desouza, Corentin Godeau, Crefeda Rodrigues, Danny Burrow, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, Emmanuel Ferdman, fiberflow, flyingcat, Gary Yi-Hung Chen, Georg Stefan Schmid, Gerwout Van Der Veen, Harsha H S, Harshit Monish, Hugo Mano, i.Pear, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jc (Jonathan Chen), Jerry Ge, Jian Li, johndoknjas, Johnny, Jonathan Albrecht, Kaixi Hou, Kanvi Khanna, keerthanakadiri, Kevin Ji, Kiran Sai Ramineni, kwoncy2020, LakshmiKalaKadali, Lee, Jun Seok, Mahmoud Abuzaina, Matt Bahr, mayuyuace, Melissa Weber Mendon\u00e7a, misterBart, Mkarpushin-Enhancelab, Mmakevic-Amd, mraunak, nallave, Nayana Thorat, Nayana-Ibm, nick.camarena, Nicolas Castet, Om Thakkar, oyzh, Parsa Homayouni, Patrick Toulme, Pavel Emeliyanenko, Pavithra Eswaramoorthy, Pearu Peterson, pemeliya, Philipp Hack, Ravi Kumar Soni, redwrasse, Ruturaj Vaidya, Sallenkey-Wei, Sandeep Gupta, Sergey Kozub, Sevin Fide Varoglu, Shanbin Ke, Shaogang Wang, Shixin Zhang, Shraiysh, Shu Wang, Silvio Traversaro, snadampal, Sunita Nadampalli, Tai Ly, Tatwai Chong, tchatow, tdanyluk, Terry Sun, Tilak, Tj Xu, Trevor Morris, Twice, vfdev, Vladimir Silyaev, Weisser, Pascal, wokron, Won Jeon, Xuefei Jiang, Zentrik, Zoranjovanovic-Ns",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205165244/reactions",
      "total_count": 21,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 8,
      "confused": 0,
      "heart": 3,
      "rocket": 5,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/202111809",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/202111809/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/202111809/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.19.0-rc0",
    "id": 202111809,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4MC_tB",
    "tag_name": "v2.19.0-rc0",
    "target_commitish": "r2.19",
    "name": "TensorFlow 2.19.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2025-02-20T20:32:44Z",
    "published_at": "2025-02-24T19:00:56Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.19.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.19.0-rc0",
    "body": "# Release 2.19.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `LiteRT`, a.k.a. `tf.lite`:\r\n  * C++ API:\r\n    * The public constants `tflite::Interpreter:kTensorsReservedCapacity` and `tflite::Interpreter:kTensorsCapacityHeadroom` are now const references, rather than `constexpr` compile-time constants. (This is to enable better API compatibility for TFLite in Play services while preserving the implementation flexibility to change the values of these constants in the future.)\r\n    * Interpreter:\r\n      * `tf.lite.Interpreter` gives deprecation warning redirecting to its new location at `ai_edge_litert.interpreter`, as the API `tf.lite.Interpreter` will be deleted in TF 2.20. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*  `tf.lite`\r\n    * `tfl.Cast` op is now supporting `bfloat16` in runtime kernel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* We have stopped publishing `libtensorflow` packages but it can still be unpacked from the PyPI package.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alain Flaischer, Alex, Alexander Pivovarov, Alexander Shadchin, Alexis Praga, Amrinfathima-Mcw, Andrey Pikas, Andrey Portnoy, Ankur Singh, Ashiq Imran, Assoap, c8ef, charleshofer, Chase Riley Roberts, Chenhao Jiang, Chongyun Lee, Claudio Desouza, Corentin Godeau, Crefeda Rodrigues, Danny Burrow, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, Emmanuel Ferdman, fiberflow, flyingcat, Gary Yi-Hung Chen, Georg Stefan Schmid, Gerwout Van Der Veen, Harsha H S, Harshit Monish, Hugo Mano, i.Pear, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jc (Jonathan Chen), Jerry Ge, Jian Li, johndoknjas, Johnny, Jonathan Albrecht, Kaixi Hou, Kanvi Khanna, keerthanakadiri, Kevin Ji, Kiran Sai Ramineni, kwoncy2020, LakshmiKalaKadali, Lee, Jun Seok, Mahmoud Abuzaina, Matt Bahr, mayuyuace, Melissa Weber Mendon\u00e7a, misterBart, Mkarpushin-Enhancelab, Mmakevic-Amd, mraunak, nallave, Nayana Thorat, Nayana-Ibm, nick.camarena, Nicolas Castet, Om Thakkar, oyzh, Parsa Homayouni, Patrick Toulme, Pavel Emeliyanenko, Pavithra Eswaramoorthy, Pearu Peterson, pemeliya, Philipp Hack, Ravi Kumar Soni, redwrasse, Ruturaj Vaidya, Sallenkey-Wei, Sandeep Gupta, Sergey Kozub, Sevin Fide Varoglu, Shanbin Ke, Shaogang Wang, Shixin Zhang, Shraiysh, Shu Wang, Silvio Traversaro, snadampal, Sunita Nadampalli, Tai Ly, Tatwai Chong, tchatow, tdanyluk, Terry Sun, Tilak, Tj Xu, Trevor Morris, Twice, vfdev, Vladimir Silyaev, Weisser, Pascal, wokron, Won Jeon, Xuefei Jiang, Zentrik, Zoranjovanovic-Ns",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/202111809/reactions",
      "total_count": 17,
      "+1": 11,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 4,
      "rocket": 2,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181833222",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181833222/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/181833222/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0",
    "id": 181833222,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4K1o4G",
    "tag_name": "v2.18.0",
    "target_commitish": "r2.18",
    "name": "TensorFlow 2.18.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-10-21T23:10:20Z",
    "published_at": "2024-10-24T23:51:36Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0",
    "body": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n* SignatureRunner is now supported for models with no signatures.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181833222/reactions",
      "total_count": 87,
      "+1": 32,
      "-1": 0,
      "laugh": 0,
      "hooray": 19,
      "confused": 0,
      "heart": 15,
      "rocket": 14,
      "eyes": 7
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181828227",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181828227/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/181828227/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.1",
    "id": 181828227,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4K1nqD",
    "tag_name": "v2.17.1",
    "target_commitish": "r2.17",
    "name": "TensorFlow 2.17.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-10-15T18:13:05Z",
    "published_at": "2024-10-24T22:49:35Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.1",
    "body": "# Release 2.17.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Add necessary header files in the aar library. These are needed if developers build apps with header files unpacked from tflite aar files from maven.\r\n* Implement Name() for GCSWritableFile to fix the profiler trace viewer cache file generation.\r\n* Fix `cstring.h` missing file issue with the Libtensorflow archive.",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181828227/reactions",
      "total_count": 4,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/180289063",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/180289063/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/180289063/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc2",
    "id": 180289063,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Kvv4n",
    "tag_name": "v2.18.0-rc2",
    "target_commitish": "r2.18",
    "name": "TensorFlow 2.18.0-rc2",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-10-10T21:39:34Z",
    "published_at": "2024-10-16T18:23:00Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc2",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc2",
    "body": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50) for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/180289063/reactions",
      "total_count": 36,
      "+1": 13,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 12,
      "rocket": 7,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/178792855",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/178792855/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/178792855/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc1",
    "id": 178792855,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4KqCmX",
    "tag_name": "v2.18.0-rc1",
    "target_commitish": "r2.18",
    "name": "TensorFlow 2.18.0-rc1",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-10-03T20:49:39Z",
    "published_at": "2024-10-07T23:56:35Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc1",
    "body": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/178792855/reactions",
      "total_count": 51,
      "+1": 26,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 12,
      "rocket": 13,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/177654529",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/177654529/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/177654529/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc0",
    "id": 177654529,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4KlssB",
    "tag_name": "v2.18.0-rc0",
    "target_commitish": "r2.18",
    "name": "TensorFlow 2.18.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-09-26T22:11:03Z",
    "published_at": "2024-09-30T18:05:31Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc0",
    "body": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/177654529/reactions",
      "total_count": 56,
      "+1": 16,
      "-1": 0,
      "laugh": 6,
      "hooray": 6,
      "confused": 0,
      "heart": 16,
      "rocket": 7,
      "eyes": 5
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/165041338",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/165041338/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/165041338/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0",
    "id": 165041338,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4J1lS6",
    "tag_name": "v2.17.0",
    "target_commitish": "r2.17",
    "name": "TensorFlow 2.17.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-07-09T22:13:22Z",
    "published_at": "2024-07-11T16:28:57Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0",
    "body": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/165041338/reactions",
      "total_count": 106,
      "+1": 58,
      "-1": 0,
      "laugh": 3,
      "hooray": 5,
      "confused": 0,
      "heart": 19,
      "rocket": 13,
      "eyes": 8
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163442906",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163442906/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/163442906/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0-rc1",
    "id": 163442906,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4JvfDa",
    "tag_name": "v2.17.0-rc1",
    "target_commitish": "r2.17",
    "name": "TensorFlow 2.17.0-rc1",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-06-28T17:52:50Z",
    "published_at": "2024-07-02T04:17:28Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0-rc1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0-rc1",
    "body": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163442906/reactions",
      "total_count": 33,
      "+1": 21,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 9,
      "rocket": 3,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163045699",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163045699/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/163045699/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.2",
    "id": 163045699,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Jt-FD",
    "tag_name": "v2.16.2",
    "target_commitish": "r2.16",
    "name": "TensorFlow 2.16.2",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-06-25T15:45:39Z",
    "published_at": "2024-06-28T18:56:30Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.2",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.2",
    "body": "# Release 2.16.2\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  Fixed: Incorrect dependency metadata in TensorFlow Python packages causing installation failures with certain package managers such as Poetry.",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163045699/reactions",
      "total_count": 64,
      "+1": 16,
      "-1": 0,
      "laugh": 0,
      "hooray": 6,
      "confused": 0,
      "heart": 27,
      "rocket": 11,
      "eyes": 4
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/161128135",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/161128135/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/161128135/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0-rc0",
    "id": 161128135,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Jmp7H",
    "tag_name": "v2.17.0-rc0",
    "target_commitish": "r2.17",
    "name": "TensorFlow 2.17.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-06-12T16:54:11Z",
    "published_at": "2024-06-18T20:41:46Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0-rc0",
    "body": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/161128135/reactions",
      "total_count": 52,
      "+1": 25,
      "-1": 0,
      "laugh": 2,
      "hooray": 8,
      "confused": 0,
      "heart": 5,
      "rocket": 7,
      "eyes": 5
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145540492",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145540492/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/145540492/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.1",
    "id": 145540492,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4IrMWM",
    "tag_name": "v2.15.1",
    "target_commitish": "r2.15",
    "name": "TensorFlow 2.15.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-03-08T02:19:10Z",
    "published_at": "2024-03-08T19:09:29Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.1",
    "body": "# Release 2.15.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `ml_dtypes` runtime dependency is updated to `0.3.1` to fix package conflict issues",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145540492/reactions",
      "total_count": 61,
      "+1": 29,
      "-1": 0,
      "laugh": 0,
      "hooray": 9,
      "confused": 0,
      "heart": 9,
      "rocket": 10,
      "eyes": 4
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145321997",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145321997/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/145321997/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.1",
    "id": 145321997,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4IqXAN",
    "tag_name": "v2.16.1",
    "target_commitish": "r2.16",
    "name": "TensorFlow 2.16.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-03-06T00:30:15Z",
    "published_at": "2024-03-07T18:54:30Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.1",
    "body": "# Release 2.16.1\r\n\r\n## TensorFlow\r\n\r\n*   TensorFlow Windows Build:\r\n    *   Clang is now the default compiler to build TensorFlow CPU wheels on the Windows Platform starting with this release. The currently supported version is LLVM/clang 17. The official Wheels-published on PyPI will be based on Clang; however, users retain the option to build wheels using the MSVC compiler following the steps mentioned in https://www.tensorflow.org/install/source_windows as has been the case before\r\n *   TensorFlow 2.16 will be released as TF 2.16.1 (instead of 2.16.0). The patch release will be done as 2.16.2 during the next release cycle.\r\n\r\n### Breaking Changes\r\n\r\n*   `tf.summary.trace_on` now takes a `profiler_outdir` argument. This must be set if `profiler` arg is set to `True`.\r\n    *   `tf.summary.trace_export`'s `profiler_outdir` arg is now a no-op. Enabling the profiler now requires setting `profiler_outdir` in `trace_on`.\r\n\r\n*   `tf.estimator`\r\n    *   The tf.estimator API is removed.\r\n    *   To continue using tf.estimator, you will need to use TF 2.15 or an earlier version.\r\n\r\n*   Keras 3.0 will be the default Keras version. You may need to update your script to use Keras 3.0.\r\n\r\n*   Please refer to the new Keras documentation for Keras 3.0  (https://keras.io/keras_3).\r\n\r\n*   To continue using Keras 2.0, do the following.\r\n\r\n*   1.  Install `tf-keras` via `pip install tf-keras~=2.16`\r\n\r\n    1.  To switch `tf.keras` to use Keras 2 (`tf-keras`), set the environment variable `TF_USE_LEGACY_KERAS=1` directly or in your python program with `import os;os.environ[\"TF_USE_LEGACY_KERAS\"]=\"1\"`. Please note that this will set it for all packages in your Python runtime program\r\n\r\n    1.  Change the keras import: replace `import tensorflow.keras as keras` or `import keras` with `import tf_keras as keras`. Update any `tf.keras` references to `keras`.\r\n       \r\n* **Apple Silicon users:** If you previously installed TensorFlow using `pip install tensorflow-macos`, please update your installation method. Use `pip install tensorflow` from now on.\r\n* **Mac x86 users:** Mac x86 builds are being deprecated and will no longer be\r\n  released as a Pip package from TF 2.17 onwards. \r\n\r\n### Known Caveats\r\n\r\n*  Full aarch64 Linux and Arm64 macOS wheels are now published to the `tensorflow` pypi repository and no longer redirect to a separate package.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.12 has been added.\r\n*  [tensorflow-tpu](https://pypi.org/project/tensorflow-tpu/) package is now available for easier TPU based installs.\r\n*  TensorFlow pip packages are now built with CUDA 12.3 and cuDNN 8.9.7\r\n*  Added experimental support for float16 auto-mixed precision using the new\r\n   AMX-FP16 instruction set on X86 CPUs.\r\n\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.gather`.\r\n    * Added support for `stablehlo.add`.\r\n    * Added support for `stablehlo.multiply`.\r\n    * Added support for `stablehlo.maximum`.\r\n    * Added support for `stablehlo.minimum`.\r\n    * Added boolean parameter support for `tfl.gather_nd`.\r\n    * C API:\r\n        * New API functions:\r\n            * `tensorflow/lite/c/c_api_experimental.h`:\r\n                * `TfLiteInterpreterGetVariableTensorCount`\r\n                * `TfLiteInterpreterGetVariableTensor`\r\n                * `TfLiteInterpreterGetBufferHandle`\r\n                * `TfLiteInterpreterSetBufferHandle`\r\n            * `tensorflow/lite/c/c_api_opaque.h`:\r\n                * `TfLiteOpaqueTensorSetAllocationTypeToDynamic`\r\n        * API functions promoted from experimental to stable:\r\n            * `tensorflow/lite/c/c_api.h`:\r\n                * `TfLiteInterpreterOptionsEnableCancellation`\r\n                * `TfLiteInterpreterCancel`\r\n    * C++ API:\r\n        * New virtual methods in the `tflite::SimpleDelegateInterface` class in `tensorflow/lite/delegates/utils/simple_delegate.h`,\r\n          and likewise in the `tflite::SimpleOpaqueDelegateInterface` class in `tensorflow/lite/delegates/utils/simple_opaque_delegate.h`:\r\n            * `CopyFromBufferHandle`\r\n            * `CopyToBufferHandle`\r\n            * `FreeBufferHandle`\r\n\r\n* `tf.train.CheckpointOptions` and `tf.saved_model.SaveOptions`\r\n    * These now take in a new argument called `experimental_sharding_callback`. This is a callback function wrapper that will be executed to determine how tensors will be split into shards when the saver writes the checkpoint shards to disk. `tf.train.experimental.ShardByTaskPolicy` is the default sharding behavior, but `tf.train.experimental.MaxShardSizePolicy` can be used to shard the checkpoint with a maximum shard file size. Users with advanced use cases can also write their own custom `tf.train.experimental.ShardingCallback`s.\r\n\r\n* `tf.train.CheckpointOptions`\r\n    * Added `experimental_skip_slot_variables` (a boolean option) to skip restoring of optimizer slot variables in a checkpoint.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    * `SaveOptions` now takes a new argument called `experimental_debug_stripper`. When enabled, this strips the debug nodes from both the node defs and the function defs of the graph. Note that this currently only strips the `Assert` nodes from the graph and converts them into `NoOp`s instead.\r\n\r\n## Keras\r\n\r\n*  `keras.layers.experimental.DynamicEmbedding`\r\n    * Added `DynamicEmbedding` Keras layer\r\n    * Added 'UpdateEmbeddingCallback`\r\n    * `DynamicEmbedding` layer allows for the continuous updating of the vocabulary and embeddings during the training process. This layer maintains a hash table to track the most up-to-date vocabulary based on the inputs received by the layer and the eviction policy. When this layer is used with an `UpdateEmbeddingCallback`, which is a time-based callback, the vocabulary lookup tensor is updated at the time interval set in the `UpdateEmbeddingCallback` based on the most up-to-date vocabulary hash table maintained by the layer. If this layer is not used in conjunction with `UpdateEmbeddingCallback` the behavior of the layer would be same as `keras.layers.Embedding`.\r\n*  `keras.optimizers.Adam`\r\n    * Added the option to set adaptive epsilon to match implementations with Jax and PyTorch equivalents.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Akhil Goel, Alexander Grund, Alexander Pivovarov, Andrew Goodbody, Andrey Portnoy, Aneta Kaczy\u0144ska, AnetaKaczynska, ArkadebMisra, Ashiq Imran, Ayan Moitra, Ben Barsdell, Ben Creech, Benedikt Lorch, Bhavani Subramanian, Bianca Van Schaik, Chao, Chase Riley Roberts, Connor Flanagan, David Hall, David Svantesson, David Svantesson-Yeung, dependabot[bot], Dr. Christoph Mittendorf, Dragan Mladjenovic, ekuznetsov139, Eli Kobrin, Eugene Kuznetsov, Faijul Amin, Fr\u00e9d\u00e9ric Bastien, fsx950223, gaoyiyeah, Gauri1 Deshpande, Gautam, Giulio C.N, guozhong.zhuang, Harshit Monish, James Hilliard, Jane Liu, Jaroslav Sevcik, jeffhataws, Jerome Massot, Jerry Ge, jglaser, jmaksymc, Kaixi Hou, kamaljeeti, Kamil Magierski, Koan-Sin Tan, lingzhi98, looi, Mahmoud Abuzaina, Malik Shahzad Muzaffar, Meekail Zain, mraunak, Neil Girdhar, Olli Lupton, Om Thakkar, Paul Strawder, Pavel Emeliyanenko, Pearu Peterson, pemeliya, Philipp Hack, Pierluigi Urru, Pratik Joshi, radekzc, Rafik Saliev, Ragu, Rahul Batra, rahulbatra85, Raunak, redwrasse, Rodrigo Gomes, ronaghy, Sachin Muradi, Shanbin Ke, shawnwang18, Sheng Yang, Shivam Mishra, Shu Wang, Strawder, Paul, Surya, sushreebarsa, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, weihanmines, wenchenvincent, Wenjie Zheng, Who Who Who, Yasir Ashfaq, yasiribmcon, Yoshio Soma, Yuanqiang Liu, Yuriy Chernyshov",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145321997/reactions",
      "total_count": 72,
      "+1": 41,
      "-1": 0,
      "laugh": 3,
      "hooray": 12,
      "confused": 0,
      "heart": 5,
      "rocket": 7,
      "eyes": 4
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/143419237",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/143419237/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/143419237/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.0-rc0",
    "id": 143419237,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4IjGdl",
    "tag_name": "v2.16.0-rc0",
    "target_commitish": "r2.16",
    "name": "TensorFlow 2.16.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-02-26T22:50:07Z",
    "published_at": "2024-02-26T22:54:41Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.0-rc0",
    "body": "# Release 2.16.0\r\n\r\n## TensorFlow\r\n\r\n*   TensorFlow Windows Build:\r\n    *   Clang is now the default compiler to build TensorFlow CPU wheels on the Windows Platform starting with this release. The currently supported version is LLVM/clang 17. The official Wheels-published on PyPI will be based on Clang; however, users retain the option to build wheels using the MSVC compiler following the steps mentioned in https://www.tensorflow.org/install/source_windows as has been the case before\r\n\r\n### Breaking Changes\r\n\r\n*   `tf.summary.trace_on` now takes a `profiler_outdir` argument. This must be set if `profiler` arg is set to `True`.\r\n    *   `tf.summary.trace_export`'s `profiler_outdir` arg is now a no-op. Enabling the profiler now requires setting `profiler_outdir` in `trace_on`.\r\n\r\n*   `tf.estimator`\r\n    *   The tf.estimator API is removed.\r\n    *   To continue using tf.estimator, you will need to use TF 2.15 or an earlier version.\r\n\r\n*   Keras 3 will be the default Keras version. You may need to update your script to use Keras 3. Please refer to the new Keras documentation for Keras 3  (https://keras.io/keras_3). To continue using Keras 2, do the following:\r\n\r\n  1.  Install `tf-keras` via `pip install tf-keras~=2.16`\r\n  2.  To switch tf.keras to use Keras 2 (tf-keras), set the environment variable `TF_USE_LEGACY_KERAS=1` directly or in your Python program by doing `import os;os.environ[\"TF_USE_LEGACY_KERAS\"]=1`. Please note that this will set it for all packages in your Python runtime program.\r\n\r\n* **Apple Silicon users:** If you previously installed TensorFlow using `pip install tensorflow-macos`, please update your installation method. Use `pip install tensorflow` from now on. Starting with TF 2.17, the `tensorflow-macos` package will no longer receive updates.\r\n\r\n### Known Caveats\r\n\r\n*  Full aarch64 Linux and Arm64 macOS wheels are now published to the `tensorflow` pypi repository and no longer redirect to a separate package.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.12 has been added.\r\n*  [tensorflow-tpu](https://pypi.org/project/tensorflow-tpu/) package is now available for easier TPU based installs.\r\n*  TensorFlow pip packages are now built with CUDA 12.3 and cuDNN 8.9.7\r\n\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.gather`.\r\n    * Added support for `stablehlo.add`.\r\n    * Added support for `stablehlo.multiply`.\r\n    * Added support for `stablehlo.maximum`.\r\n    * Added support for `stablehlo.minimum`.\r\n    * Added boolean parameter support for `tfl.gather_nd`.\r\n\r\n* `tf.train.CheckpointOptions` and `tf.saved_model.SaveOptions`\r\n    * These now take in a new argument called `experimental_sharding_callback`. This is a callback function wrapper that will be executed to determine how tensors will be split into shards when the saver writes the checkpoint shards to disk. `tf.train.experimental.ShardByTaskPolicy` is the default sharding behavior, but `tf.train.experimental.MaxShardSizePolicy` can be used to shard the checkpoint with a maximum shard file size. Users with advanced use cases can also write their own custom `tf.train.experimental.ShardingCallback`s.\r\n\r\n* `tf.train.CheckpointOptions`\r\n    * Added `experimental_skip_slot_variables` (a boolean option) to skip restoring of optimizer slot variables in a checkpoint.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    * `SaveOptions` now takes a new argument called `experimental_debug_stripper`. When enabled, this strips the debug nodes from both the node defs and the function defs of the graph. Note that this currently only strips the `Assert` nodes from the graph and converts them into `NoOp`s instead.\r\n\r\n## Keras\r\n\r\n*  `keras.layers.experimental.DynamicEmbedding`\r\n    * Added `DynamicEmbedding` Keras layer\r\n    * Added 'UpdateEmbeddingCallback`\r\n    * `DynamicEmbedding` layer allows for the continuous updating of the vocabulary and embeddings during the training process. This layer maintains a hash table to track the most up-to-date vocabulary based on the inputs received by the layer and the eviction policy. When this layer is used with an `UpdateEmbeddingCallback`, which is a time-based callback, the vocabulary lookup tensor is updated at the time interval set in the `UpdateEmbeddingCallback` based on the most up-to-date vocabulary hash table maintained by the layer. If this layer is not used in conjunction with `UpdateEmbeddingCallback` the behavior of the layer would be same as `keras.layers.Embedding`.\r\n*  `keras.optimizers.Adam`\r\n    * Added the option to set adaptive epsilon to match implementations with Jax and PyTorch equivalents.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Akhil Goel, Alexander Grund, Alexander Pivovarov, Andrew Goodbody, Andrey Portnoy, Aneta Kaczy\u0144ska, AnetaKaczynska, ArkadebMisra, Ashiq Imran, Ayan Moitra, Ben Barsdell, Ben Creech, Benedikt Lorch, Bhavani Subramanian, Bianca Van Schaik, Chao, Chase Riley Roberts, Connor Flanagan, David Hall, David Svantesson, David Svantesson-Yeung, dependabot[bot], Dr. Christoph Mittendorf, Dragan Mladjenovic, ekuznetsov139, Eli Kobrin, Eugene Kuznetsov, Faijul Amin, Fr\u00e9d\u00e9ric Bastien, fsx950223, gaoyiyeah, Gauri1 Deshpande, Gautam, Giulio C.N, guozhong.zhuang, Harshit Monish, James Hilliard, Jane Liu, Jaroslav Sevcik, jeffhataws, Jerome Massot, Jerry Ge, jglaser, jmaksymc, Kaixi Hou, kamaljeeti, Kamil Magierski, Koan-Sin Tan, lingzhi98, looi, Mahmoud Abuzaina, Malik Shahzad Muzaffar, Meekail Zain, mraunak, Neil Girdhar, Olli Lupton, Om Thakkar, Paul Strawder, Pavel Emeliyanenko, Pearu Peterson, pemeliya, Philipp Hack, Pierluigi Urru, Pratik Joshi, radekzc, Rafik Saliev, Ragu, Rahul Batra, rahulbatra85, Raunak, redwrasse, Rodrigo Gomes, ronaghy, Sachin Muradi, Shanbin Ke, shawnwang18, Sheng Yang, Shivam Mishra, Shu Wang, Strawder, Paul, Surya, sushreebarsa, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, weihanmines, wenchenvincent, Wenjie Zheng, Who Who Who, Yasir Ashfaq, yasiribmcon, Yoshio Soma, Yuanqiang Liu, Yuriy Chernyshov",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/143419237/reactions",
      "total_count": 62,
      "+1": 20,
      "-1": 0,
      "laugh": 1,
      "hooray": 16,
      "confused": 0,
      "heart": 4,
      "rocket": 19,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129407950",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129407950/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/129407950/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0",
    "id": 129407950,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4HtpvO",
    "tag_name": "v2.15.0",
    "target_commitish": "r2.15",
    "name": "TensorFlow 2.15.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-11-10T21:16:52Z",
    "published_at": "2023-11-14T18:46:08Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0",
    "body": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n* `tf.estimator`\r\n    * The tf.estimator API removal is in progress and will be targeted for the 2.16 release. \r\n\r\n## Keras\r\n\r\n* This will be the final release before the launch of Keras 3.0, when Keras will become multi-backend. For the compatibility page and other info, please see: https://github.com/keras-team/keras-core\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129407950/reactions",
      "total_count": 90,
      "+1": 27,
      "-1": 0,
      "laugh": 2,
      "hooray": 10,
      "confused": 0,
      "heart": 29,
      "rocket": 14,
      "eyes": 8
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129410925",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129410925/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/129410925/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.1",
    "id": 129410925,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Htqdt",
    "tag_name": "v2.14.1",
    "target_commitish": "r2.14",
    "name": "TensorFlow 2.14.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-11-10T21:47:47Z",
    "published_at": "2023-11-14T18:42:20Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.1",
    "body": "# Release 2.14.1\r\n\r\n## Security\r\n\r\n*   Updates `curl` to `8.4.0` to handle [CVE-2023-38545](https://curl.se/docs/CVE-2023-38545.html) and [CVE-2023-38546](https://curl.se/docs/CVE-2023-38546.html).",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129410925/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 3,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/127918177",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/127918177/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/127918177/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0-rc1",
    "id": 127918177,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Hn-Bh",
    "tag_name": "v2.15.0-rc1",
    "target_commitish": "r2.15",
    "name": "TensorFlow 2.15.0-rc1",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-11-02T00:55:06Z",
    "published_at": "2023-11-03T18:09:42Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0-rc1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0-rc1",
    "body": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n* `tf.estimator`\r\n    * The tf.estimator API removal is in progress and will be targeted for the 2.16 release. \r\n\r\n## Keras\r\n\r\n* This will be the final release before the launch of Keras 3.0, when Keras will become multi-backend. For the compatibility page and other info, please see: https://github.com/keras-team/keras-core\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/127918177/reactions",
      "total_count": 30,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 11,
      "confused": 0,
      "heart": 1,
      "rocket": 13,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/126675812",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/126675812/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/126675812/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0-rc0",
    "id": 126675812,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4HjOtk",
    "tag_name": "v2.15.0-rc0",
    "target_commitish": "r2.15",
    "name": "TensorFlow 2.15.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-10-19T23:06:04Z",
    "published_at": "2023-10-25T23:15:20Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0-rc0",
    "body": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n## Keras\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/126675812/reactions",
      "total_count": 54,
      "+1": 28,
      "-1": 0,
      "laugh": 2,
      "hooray": 4,
      "confused": 0,
      "heart": 11,
      "rocket": 7,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122664462",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122664462/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/122664462/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0",
    "id": 122664462,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4HT7YO",
    "tag_name": "v2.14.0",
    "target_commitish": "r2.14",
    "name": "TensorFlow 2.14.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-09-21T17:17:23Z",
    "published_at": "2023-09-26T22:45:05Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0",
    "body": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*   Support for Python 3.8 has been removed starting with TF 2.14. The TensorFlow 2.13.1 patch release will still have Python 3.8 support.\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   The `tensorflow` pip package has a new, optional installation method for Linux that installs necessary Nvidia CUDA libraries through pip. As long as the Nvidia driver is already installed on the system, you may now run `pip install tensorflow[and-cuda]` to install TensorFlow's Nvidia CUDA library dependencies in the Python environment. Aside from the Nvidia driver, no other pre-existing Nvidia CUDA packages are necessary.\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharde input. Refer to this [blog post](https://blog.tensorflow.org/2023/08/distributed-fast-fourier-transform-in-tensorflow.html) for details.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to a recommended  substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97)\r\nfor an example.\r\n\r\n*  TensorFlow IO support is now available for Apple Silicon packages.\r\n\r\n*  Refactor CpuExecutable to propagate LLVM errors.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model.fit`,\r\n    `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122664462/reactions",
      "total_count": 86,
      "+1": 51,
      "-1": 0,
      "laugh": 4,
      "hooray": 1,
      "confused": 0,
      "heart": 12,
      "rocket": 10,
      "eyes": 8
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122659615",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122659615/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/122659615/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.1",
    "id": 122659615,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4HT6Mf",
    "tag_name": "v2.13.1",
    "target_commitish": "r2.13",
    "name": "TensorFlow 2.13.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-09-12T16:46:28Z",
    "published_at": "2023-09-26T20:34:00Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.1",
    "body": "# Release 2.13.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  Refactor CpuExecutable to propagate LLVM errors.",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122659615/reactions",
      "total_count": 14,
      "+1": 3,
      "-1": 0,
      "laugh": 2,
      "hooray": 5,
      "confused": 0,
      "heart": 0,
      "rocket": 4,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/119481677",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/119481677/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/119481677/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0-rc1",
    "id": 119481677,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4HHyVN",
    "tag_name": "v2.14.0-rc1",
    "target_commitish": "r2.14",
    "name": "TensorFlow 2.14.0-rc1",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-08-30T13:46:27Z",
    "published_at": "2023-08-31T21:42:28Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0-rc1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0-rc1",
    "body": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*   Support for Python 3.8 has been removed starting with TF 2.14. The TensorFlow 2.13.1 patch release will still have Python 3.8 support.\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n*   `tf.estimator`\r\n    * `tf.estimator` API will be removed in the next release. TF Estimator Python package will no longer be released.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   The `tensorflow` pip package has a new, optional installation method for Linux that installs necessary Nvidia CUDA libraries through pip. As long as the Nvidia driver is already installed on the system, you may now run `pip install tensorflow[and-cuda]` to install TensorFlow's Nvidia CUDA library dependencies in the Python environment. Aside from the Nvidia driver, no other pre-existing Nvidia CUDA packages are necessary.\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/ fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharded input.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to recommended substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97) for an example.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model fit`, `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, georgiie, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, Learning-To-Play, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Tensorflow Jenkins, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/119481677/reactions",
      "total_count": 37,
      "+1": 22,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 4,
      "rocket": 8,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/115833032",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/115833032/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/115833032/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0-rc0",
    "id": 115833032,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4G53jI",
    "tag_name": "v2.14.0-rc0",
    "target_commitish": "r2.14",
    "name": "TensorFlow 2.14.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-08-15T22:03:02Z",
    "published_at": "2023-08-17T18:09:07Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0-rc0",
    "body": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/ fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharded input.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to a recommended substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97) for an example.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model.fit`, `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, georgiie, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, Learning-To-Play, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Tensorflow Jenkins, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/115833032/reactions",
      "total_count": 49,
      "+1": 9,
      "-1": 0,
      "laugh": 0,
      "hooray": 12,
      "confused": 0,
      "heart": 16,
      "rocket": 6,
      "eyes": 6
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110531432",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110531432/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/110531432/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0",
    "id": 110531432,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4GlpNo",
    "tag_name": "v2.13.0",
    "target_commitish": "r2.13",
    "name": "TensorFlow 2.13.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-06-28T18:38:35Z",
    "published_at": "2023-07-05T17:32:13Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0",
    "body": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   Fixes correct values rank in UpperBound and LowerBound [CVE-2023-33976](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-33976)\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110531432/reactions",
      "total_count": 47,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 34,
      "confused": 0,
      "heart": 5,
      "rocket": 7,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110267713",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110267713/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/110267713/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.12.1",
    "id": 110267713,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4Gko1B",
    "tag_name": "v2.12.1",
    "target_commitish": "r2.12",
    "name": "TensorFlow 2.12.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-06-27T18:05:39Z",
    "published_at": "2023-07-05T19:49:02Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.12.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.12.1",
    "body": "# Release 2.12.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  The use of the ambe config to build and test aarch64 is not needed. The ambe config will be removed in the future. Making cpu_arm64_pip.sh and cpu_arm64_nonpip.sh more similar for easier future maintenance.",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110267713/reactions",
      "total_count": 51,
      "+1": 24,
      "-1": 0,
      "laugh": 2,
      "hooray": 5,
      "confused": 0,
      "heart": 14,
      "rocket": 5,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/109590943",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/109590943/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/109590943/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc2",
    "id": 109590943,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4GiDmf",
    "tag_name": "v2.13.0-rc2",
    "target_commitish": "r2.13",
    "name": "TensorFlow 2.13.0-rc2",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-06-16T19:39:23Z",
    "published_at": "2023-06-22T18:05:19Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc2",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc2",
    "body": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/109590943/reactions",
      "total_count": 44,
      "+1": 9,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 21,
      "rocket": 13,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/105406249",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/105406249/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/105406249/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc1",
    "id": 105406249,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4GSF8p",
    "tag_name": "v2.13.0-rc1",
    "target_commitish": "r2.13",
    "name": "TensorFlow 2.13.0-rc1",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-05-26T00:14:50Z",
    "published_at": "2023-05-30T17:38:45Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc1",
    "body": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/105406249/reactions",
      "total_count": 39,
      "+1": 28,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 10,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/102379125",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/102379125/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/102379125/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc0",
    "id": 102379125,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4GGi51",
    "tag_name": "v2.13.0-rc0",
    "target_commitish": "r2.13",
    "name": "TensorFlow 2.13.0-rc0",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-05-05T21:50:40Z",
    "published_at": "2023-05-09T19:47:35Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc0",
    "body": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Add 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Add int16x8 support for the built-in op `exp`\r\n    *   Add int16x8 support for the built-in op `mirror_pad`\r\n    *   Add int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Add 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Add 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Add 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Add 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Add int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Add 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Add reference implementation for 16-bit int unquantized `add`.\r\n    *   Add reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Add 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    *   `tf.data.Dataset.shuffle` now supports full shuffling. To specify that data should be fully shuffled, use `dataset = dataset.shuffle(dataset.cardinality())`. This will load the full dataset into memory so that it can be shuffled, so make sure to only use this with datasets of filenames or other small datasets.\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduce class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduce member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of dtensor.Layout and dtensor.Mesh have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, Layout.serialized_string is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n *  `tf.keras`\r\n\r\n    *  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n    *  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n    *  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n    *  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.keras`\r\n\r\n    *   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n    *   Added activation function `tf.keras.activations.mish`.\r\n    *   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n    *   Added `tf.keras.optimizers.Lion` optimizer.\r\n    *   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n    *   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n    *   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n    *   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n    *   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n    *   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n    *   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n    *   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n    *   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/102379125/reactions",
      "total_count": 52,
      "+1": 26,
      "-1": 0,
      "laugh": 1,
      "hooray": 12,
      "confused": 0,
      "heart": 6,
      "rocket": 5,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96657636",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96657636/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/96657636/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.12.0",
    "id": 96657636,
    "author": {
      "login": "mihaimaruseac",
      "id": 323199,
      "node_id": "MDQ6VXNlcjMyMzE5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/323199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mihaimaruseac",
      "html_url": "https://github.com/mihaimaruseac",
      "followers_url": "https://api.github.com/users/mihaimaruseac/followers",
      "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}",
      "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions",
      "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs",
      "repos_url": "https://api.github.com/users/mihaimaruseac/repos",
      "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4FwuDk",
    "tag_name": "v2.12.0",
    "target_commitish": "r2.12",
    "name": "TensorFlow 2.12.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-03-20T23:12:24Z",
    "published_at": "2023-03-23T15:50:02Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.12.0",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.12.0",
    "body": "# Release 2.12.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n*   Build, Compilation and Packaging\r\n\r\n    *   Removed redundant packages `tensorflow-gpu` and `tf-nightly-gpu`. These packages were removed and replaced with packages that direct users to switch to `tensorflow` or `tf-nightly` respectively. Since TensorFlow 2.1, the only difference between these two sets of packages was their names, so there is no loss of functionality or GPU support. See https://pypi.org/project/tensorflow-gpu for more details.\r\n\r\n*   `tf.function`:\r\n\r\n    *   `tf.function` now uses the Python inspect library directly for parsing the signature of the Python function it is decorated on. This change may break code where the function signature is malformed, but was ignored previously, such as:\r\n        *   Using `functools.wraps` on a function with different signature\r\n        *   Using `functools.partial` with an invalid `tf.function` input\r\n    *   `tf.function` now enforces input parameter names to be valid Python identifiers. Incompatible names are automatically sanitized similarly to existing SavedModel signature behavior.\r\n    *   Parameterless `tf.function`s are assumed to have an empty `input_signature` instead of an undefined one even if the `input_signature` is unspecified.\r\n    *   `tf.types.experimental.TraceType` now requires an additional `placeholder_value` method to be defined.\r\n    *   `tf.function` now traces with placeholder values generated by TraceType instead of the value itself.\r\n\r\n*   Experimental APIs `tf.config.experimental.enable_mlir_graph_optimization` and `tf.config.experimental.disable_mlir_graph_optimization` were removed.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.11 has been added.\r\n*  Support for Python 3.7 has been removed. We are not releasing any more patches for Python 3.7.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   Add 16-bit float type support for built-in op `fill`.\r\n    *   Transpose now supports 6D tensors.\r\n    *   Float LSTM now supports diagonal recurrent tensors: https://arxiv.org/abs/1903.08023\r\n\r\n*   `tf.experimental.dtensor`:\r\n\r\n    *   Coordination service now works with `dtensor.initialize_accelerator_system`, and enabled by default.\r\n    *   Add `tf.experimental.dtensor.is_dtensor` to check if a tensor is a DTensor instance.\r\n\r\n*   `tf.data`:\r\n\r\n    *   Added support for alternative checkpointing protocol which makes it possible to checkpoint the state of the input pipeline without having to store the contents of internal buffers. The new functionality can be enabled through the `experimental_symbolic_checkpoint` option of `tf.data.Options()`.\r\n    *   Added a new `rerandomize_each_iteration` argument for the `tf.data.Dataset.random()` operation, which controls whether the sequence of generated random numbers should be re-randomized every epoch or not (the default behavior). If `seed` is set and `rerandomize_each_iteration=True`, the `random()` operation will produce a different (deterministic) sequence of numbers every epoch.\r\n    *   Added a new `rerandomize_each_iteration` argument for the `tf.data.Dataset.sample_from_datasets()` operation, which controls whether the sequence of generated random numbers used for sampling should be re-randomized every epoch or not. If `seed` is set and `rerandomize_each_iteration=True`, the `sample_from_datasets()` operation will use a different (deterministic) sequence of numbers every epoch.\r\n\r\n*   `tf.test`:\r\n\r\n    *   Added `tf.test.experimental.sync_devices`, which is useful for accurately measuring performance in benchmarks.\r\n\r\n*   `tf.experimental.dtensor`:\r\n\r\n    *   Added experimental support to ReduceScatter fuse on GPU (NCCL).\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.SavedModel`:\r\n    * Introduced new class `tf.saved_model.experimental.Fingerprint` that contains the fingerprint of the SavedModel. See the [SavedModel Fingerprinting RFC](https://github.com/tensorflow/community/pull/415) for details.\r\n    * Introduced API `tf.saved_model.experimental.read_fingerprint(export_dir)` for reading the fingerprint of a SavedModel.\r\n* `tf.random`\r\n  * Added non-experimental aliases for `tf.random.split` and `tf.random.fold_in`, the experimental endpoints are still available so no code changes are necessary.\r\n* `tf.experimental.ExtensionType`\r\n  * Added function `experimental.extension_type.as_dict()`, which converts an instance of `tf.experimental.ExtensionType` to a `dict` representation.\r\n* `stream_executor`\r\n  * Top level `stream_executor` directory has been deleted, users should use equivalent headers and targets under `compiler/xla/stream_executor`.\r\n* `tf.nn`\r\n  * Added `tf.nn.experimental.general_dropout`, which is similar to `tf.random.experimental.stateless_dropout` but accepts a custom sampler function.\r\n* `tf.types.experimental.GenericFunction`\r\n  * The `experimental_get_compiler_ir` method supports tf.TensorSpec compilation arguments.\r\n*  `tf.config.experimental.mlir_bridge_rollout`\r\n    *   Removed enums `MLIR_BRIDGE_ROLLOUT_SAFE_MODE_ENABLED` and `MLIR_BRIDGE_ROLLOUT_SAFE_MODE_FALLBACK_ENABLED` which are no longer used by the tf2xla bridge\r\n\r\n## Keras\r\n\r\n Keras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n\r\n`tf.keras`:\r\n\r\n* Moved all saving-related utilities to a new namespace, `keras.saving`, for example: `keras.saving.load_model`, `keras.saving.save_model`, `keras.saving.custom_object_scope`, `keras.saving.get_custom_objects`, `keras.saving.register_keras_serializable`,`keras.saving.get_registered_name` and `keras.saving.get_registered_object`. The previous API locations (in `keras.utils` and `keras.models`) will be available indefinitely, but we recommend you update your code to point to the new API locations.\r\n * Improvements and fixes in Keras loss masking:\r\n    * Whether you represent a ragged tensor as a `tf.RaggedTensor` or using [keras masking](https://www.tensorflow.org/guide/keras/masking_and_padding), the returned loss values should be the identical to each other. In previous versions Keras may have silently ignored the mask.\r\n * If you use masked losses with Keras the loss values may be different in TensorFlow `2.12` compared to previous versions.\r\n * In cases where the mask was previously ignored, you will now get an error if you pass a mask with an incompatible shape.\r\n\r\n### Major Features and Improvements     \r\n\r\n`tf.keras`:\r\n\r\n *   The new Keras model saving format (`.keras`) is available. You can start using it via `model.save(f\"{fname}.keras\", save_format=\"keras_v3\")`. In the future it will become the default for all files with the `.keras` extension. This file format targets the Python runtime only and makes it possible to reload Python objects identical to the saved originals. The format supports non-numerical state such as vocabulary files and lookup tables, and it is easy to customize in the case of custom layers with exotic elements of state (e.g. a FIFOQueue). The format does not rely on bytecode or pickling, and is safe by default. Note that as a result, Python `lambdas` are disallowed at loading time. If you want to use `lambdas`, you can pass `safe_mode=False` to the loading method (only do this if you trust the source of the model).\r\n*   Added a `model.export(filepath)` API to create a lightweight SavedModel artifact that can be used for inference (e.g. with TF-Serving).\r\n*   Added `keras.export.ExportArchive` class for low-level customization of the process of exporting SavedModel artifacts for inference. Both ways of exporting models are based on `tf.function` tracing and produce a TF program composed of TF ops. They are meant primarily for environments where the TF runtime is available, but not the Python interpreter, as is typical for production with TF Serving.\r\n *   Added utility `tf.keras.utils.FeatureSpace`, a one-stop shop for structured data preprocessing and encoding.\r\n *   Added `tf.SparseTensor` input support to `tf.keras.layers.Embedding` layer. The layer now accepts a new boolean argument `sparse`. If `sparse` is set to True, the layer returns a SparseTensor instead of a dense Tensor. Defaults to False.\r\n *   Added `jit_compile` as a settable property to `tf.keras.Model`.\r\n *   Added `synchronized` optional parameter to `layers.BatchNormalization`.\r\n *   Added deprecation warning to `layers.experimental.SyncBatchNormalization` and suggested to use `layers.BatchNormalization` with `synchronized=True` instead.\r\n *   Updated `tf.keras.layers.BatchNormalization` to support masking of the inputs (`mask` argument) when computing the mean and variance.\r\n *   Add `tf.keras.layers.Identity`, a placeholder pass-through layer.\r\n *   Add `show_trainable` option to `tf.keras.utils.model_to_dot` to display layer trainable status in model plots.\r\n *   Add ability to save a `tf.keras.utils.FeatureSpace` object, via `feature_space.save(\"myfeaturespace.keras\")`, and reload it via `feature_space = tf.keras.models.load_model(\"myfeaturespace.keras\")`.\r\n*   Added utility `tf.keras.utils.to_ordinal` to convert class vector to ordinal regression / classification matrix.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   N/A\r\n\r\n## Security\r\n\r\n*   Fixes an FPE in TFLite in conv kernel [CVE-2023-27579](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27579)\r\n*   Fixes a double free in Fractional(Max/Avg)Pool [CVE-2023-25801](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25801)\r\n*   Fixes a null dereference on ParallelConcat with XLA [CVE-2023-25676](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25676)\r\n*   Fixes a segfault in Bincount with XLA [CVE-2023-25675](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25675)\r\n*   Fixes an NPE in RandomShuffle with XLA enable [CVE-2023-25674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25674)\r\n*   Fixes an FPE in TensorListSplit with XLA [CVE-2023-25673](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25673)\r\n*   Fixes segmentation fault in tfg-translate [CVE-2023-25671](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25671)\r\n*   Fixes an NPE in QuantizedMatMulWithBiasAndDequantize [CVE-2023-25670](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25670)\r\n*   Fixes an FPE in AvgPoolGrad with XLA [CVE-2023-25669](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25669)\r\n*   Fixes a heap out-of-buffer read vulnerability in the QuantizeAndDequantize operation [CVE-2023-25668](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25668)\r\n*   Fixes a segfault when opening multiframe gif [CVE-2023-25667](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25667)\r\n*   Fixes an NPE in SparseSparseMaximum [CVE-2023-25665](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25665)\r\n*   Fixes an FPE in AudioSpectrogram [CVE-2023-25666](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25666)\r\n*   Fixes a heap-buffer-overflow in AvgPoolGrad  [CVE-2023-25664](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25664)\r\n*   Fixes a NPE in TensorArrayConcatV2  [CVE-2023-25663](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25663)\r\n*   Fixes a Integer overflow in EditDistance  [CVE-2023-25662](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25662)\r\n*   Fixes a Seg fault in `tf.raw_ops.Print` [CVE-2023-25660](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25660)\r\n*   Fixes a OOB read in DynamicStitch [CVE-2023-25659](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25659)\r\n*   Fixes a OOB Read in GRUBlockCellGrad [CVE-2023-25658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25658)\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, Vinila S, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96657636/reactions",
      "total_count": 97,
      "+1": 51,
      "-1": 0,
      "laugh": 0,
      "hooray": 8,
      "confused": 0,
      "heart": 16,
      "rocket": 22,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96239505",
    "assets_url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96239505/assets",
    "upload_url": "https://uploads.github.com/repos/tensorflow/tensorflow/releases/96239505/assets{?name,label}",
    "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.11.1",
    "id": 96239505,
    "author": {
      "login": "tensorflow-jenkins",
      "id": 16359713,
      "node_id": "MDQ6VXNlcjE2MzU5NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16359713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tensorflow-jenkins",
      "html_url": "https://github.com/tensorflow-jenkins",
      "followers_url": "https://api.github.com/users/tensorflow-jenkins/followers",
      "following_url": "https://api.github.com/users/tensorflow-jenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/tensorflow-jenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tensorflow-jenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tensorflow-jenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/tensorflow-jenkins/orgs",
      "repos_url": "https://api.github.com/users/tensorflow-jenkins/repos",
      "events_url": "https://api.github.com/users/tensorflow-jenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tensorflow-jenkins/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOArmXAs4FvH-R",
    "tag_name": "v2.11.1",
    "target_commitish": "r2.11",
    "name": "TensorFlow 2.11.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-03-16T17:20:00Z",
    "published_at": "2023-03-20T17:03:21Z",
    "assets": [],
    "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.11.1",
    "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.11.1",
    "body": "# Release 2.11.1\r\n\r\n**Note**: TensorFlow 2.10 was the last TensorFlow release that supported GPU on native-Windows. Starting with TensorFlow 2.11, you will need to install TensorFlow in WSL2, or install tensorflow-cpu and, optionally, try the TensorFlow-DirectML-Plugin.\r\n*   Security vulnerability fixes will no longer be patched to this Tensorflow version. The latest Tensorflow version includes the security vulnerability fixes. You can update to the latest version (recommended) or patch security vulnerabilities yourself [steps](https://github.com/tensorflow/tensorflow#patching-guidelines). You can refer to the [release notes](https://github.com/tensorflow/tensorflow/releases) of the latest Tensorflow version for a list of newly fixed vulnerabilities. If you have any questions, please create a GitHub issue to let us know.\r\n\r\nThis release also introduces several vulnerability fixes:\r\n\r\n*   Fixes an FPE in TFLite in conv kernel [CVE-2023-27579](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27579)\r\n*   Fixes a double free in Fractional(Max/Avg)Pool [CVE-2023-25801](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25801)\r\n*   Fixes a null dereference on ParallelConcat with XLA [CVE-2023-25676](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25676)\r\n*   Fixes a segfault in Bincount with XLA [CVE-2023-25675](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25675)\r\n*   Fixes an NPE in RandomShuffle with XLA enable [CVE-2023-25674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25674)\r\n*   Fixes an FPE in TensorListSplit with XLA [CVE-2023-25673](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25673)\r\n*   Fixes segmentation fault in tfg-translate [CVE-2023-25671](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25671)\r\n*   Fixes an NPE in QuantizedMatMulWithBiasAndDequantize [CVE-2023-25670](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25670)\r\n*   Fixes an FPE in AvgPoolGrad with XLA [CVE-2023-25669](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25669)\r\n*   Fixes a heap out-of-buffer read vulnerability in the QuantizeAndDequantize operation [CVE-2023-25668](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25668)\r\n*   Fixes a segfault when opening multiframe gif [CVE-2023-25667](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25667)\r\n*   Fixes an NPE in SparseSparseMaximum [CVE-2023-25665](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25665)\r\n*   Fixes an FPE in AudioSpectrogram [CVE-2023-25666](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25666)\r\n*   Fixes a heap-buffer-overflow in AvgPoolGrad  [CVE-2023-25664](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25664)\r\n*   Fixes a NPE in TensorArrayConcatV2  [CVE-2023-25663](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25663)\r\n*   Fixes a Integer overflow in EditDistance  [CVE-2023-25662](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25662)\r\n*   Fixes a Seg fault in `tf.raw_ops.Print` [CVE-2023-25660](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25660)\r\n*   Fixes a OOB read in DynamicStitch [CVE-2023-25659](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25659)\r\n*   Fixes a OOB Read in GRUBlockCellGrad [CVE-2023-25658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25658)",
    "reactions": {
      "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96239505/reactions",
      "total_count": 33,
      "+1": 12,
      "-1": 0,
      "laugh": 0,
      "hooray": 16,
      "confused": 0,
      "heart": 0,
      "rocket": 5,
      "eyes": 0
    }
  }
]