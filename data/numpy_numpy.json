[
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/206104786",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/206104786/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/206104786/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.4",
    "id": 206104786,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84MSOjS",
    "tag_name": "v2.2.4",
    "target_commitish": "main",
    "name": "2.2.4 (Mar 16, 2025)",
    "draft": false,
    "prerelease": false,
    "created_at": "2025-03-16T15:36:37Z",
    "published_at": "2025-03-16T18:35:02Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/237982187",
        "id": 237982187,
        "node_id": "RA_kwDOAA3dP84OL1Hr",
        "name": "2.2.4-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2373,
        "download_count": 111,
        "created_at": "2025-03-16T18:34:38Z",
        "updated_at": "2025-03-16T18:34:38Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.4/2.2.4-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/237982099",
        "id": 237982099,
        "node_id": "RA_kwDOAA3dP84OL1GT",
        "name": "numpy-2.2.4.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20270701,
        "download_count": 789,
        "created_at": "2025-03-16T18:33:41Z",
        "updated_at": "2025-03-16T18:34:13Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.4/numpy-2.2.4.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/237982093",
        "id": 237982093,
        "node_id": "RA_kwDOAA3dP84OL1GN",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 14269,
        "download_count": 133,
        "created_at": "2025-03-16T18:33:30Z",
        "updated_at": "2025-03-16T18:33:30Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.4/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.4",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.4",
    "body": "# NumPy 2.2.4 Release Notes\r\n\r\nNumPy 2.2.4 is a patch release that fixes bugs found after the 2.2.3\r\nrelease. There are a large number of typing improvements, the rest of\r\nthe changes are the usual mix of bugfixes and platform maintenace.\r\n\r\nThis release supports Python versions 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 15 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Abhishek Kumar\r\n-   Andrej Zhilenkov\r\n-   Andrew Nelson\r\n-   Charles Harris\r\n-   Giovanni Del Monte\r\n-   Guan Ming(Wesley) Chiu +\r\n-   Jonathan Albrecht +\r\n-   Joren Hammudoglu\r\n-   Mark Harfouche\r\n-   Matthieu Darbois\r\n-   Nathan Goldbaum\r\n-   Pieter Eendebak\r\n-   Sebastian Berg\r\n-   Tyler Reddy\r\n-   lvllvl +\r\n\r\n## Pull requests merged\r\n\r\nA total of 17 pull requests were merged for this release.\r\n\r\n-   [#28333](https://github.com/numpy/numpy/pull/28333): MAINT: Prepare 2.2.x for further development.\r\n-   [#28348](https://github.com/numpy/numpy/pull/28348): TYP: fix positional- and keyword-only params in astype, cross\\...\r\n-   [#28377](https://github.com/numpy/numpy/pull/28377): MAINT: Update FreeBSD version and fix test failure\r\n-   [#28379](https://github.com/numpy/numpy/pull/28379): BUG: numpy.loadtxt reads only 50000 lines when skip_rows \\>= max_rows\r\n-   [#28385](https://github.com/numpy/numpy/pull/28385): BUG: Make np.nonzero threading safe\r\n-   [#28420](https://github.com/numpy/numpy/pull/28420): BUG: safer bincount casting (backport to 2.2.x)\r\n-   [#28422](https://github.com/numpy/numpy/pull/28422): BUG: Fix building on s390x with clang\r\n-   [#28423](https://github.com/numpy/numpy/pull/28423): CI: use QEMU 9.2.2 for Linux Qemu tests\r\n-   [#28424](https://github.com/numpy/numpy/pull/28424): BUG: skip legacy dtype multithreaded test on 32 bit runners\r\n-   [#28435](https://github.com/numpy/numpy/pull/28435): BUG: Fix searchsorted and CheckFromAny byte-swapping logic\r\n-   [#28449](https://github.com/numpy/numpy/pull/28449): BUG: sanity check `__array_interface__` number of dimensions\r\n-   [#28510](https://github.com/numpy/numpy/pull/28510): MAINT: Hide decorator from pytest traceback\r\n-   [#28512](https://github.com/numpy/numpy/pull/28512): TYP: Typing fixes backported from #28452, #28491, #28494\r\n-   [#28521](https://github.com/numpy/numpy/pull/28521): TYP: Backport fixes from #28505, #28506, #28508, and #28511\r\n-   [#28533](https://github.com/numpy/numpy/pull/28533): TYP: Backport typing fixes from main (2)\r\n-   [#28534](https://github.com/numpy/numpy/pull/28534): TYP: Backport typing fixes from main (3)\r\n-   [#28542](https://github.com/numpy/numpy/pull/28542): TYP: Backport typing fixes from main (4)\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    935928cbd2de140da097f6d5f4a01d72  numpy-2.2.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    bf7fd01bb177885e920173b610c195d9  numpy-2.2.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    826e52cd898567a0c446113ab7a7b362  numpy-2.2.4-cp310-cp310-macosx_14_0_arm64.whl\r\n    9982a91d7327aea541c24aff94d3e462  numpy-2.2.4-cp310-cp310-macosx_14_0_x86_64.whl\r\n    5bdf5b63f4ee01fa808d13043b2a2275  numpy-2.2.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    677b3031105e24eaee2e0e57d7c2a306  numpy-2.2.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d857867787fe1eb236670e7fdb25f414  numpy-2.2.4-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    a5aff3a7eb2923878e67fbe1cd04a9e9  numpy-2.2.4-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    e00bd3ac85d8f34b46b7f97a8278aeb3  numpy-2.2.4-cp310-cp310-win32.whl\r\n    e5cb2a5d14bccee316bb73173be125ec  numpy-2.2.4-cp310-cp310-win_amd64.whl\r\n    494f60d8e1c3500413bd093bb3f486ea  numpy-2.2.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    a886a9f3e80a60ce6ba95b431578bbca  numpy-2.2.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    889f3b507bab9272d9b549780840a642  numpy-2.2.4-cp311-cp311-macosx_14_0_arm64.whl\r\n    059788668d2c4e9aace4858e77c099ed  numpy-2.2.4-cp311-cp311-macosx_14_0_x86_64.whl\r\n    db9ae978afb76a4bf79df0657a66aaeb  numpy-2.2.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e36963a4c177157dc7b0775c309fa5a8  numpy-2.2.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3603e683878b74f38e5617f04ff6a369  numpy-2.2.4-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    afbc410fb9b42b19f4f7c81c21d6777f  numpy-2.2.4-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    33ff8081378188894097942f80c33e26  numpy-2.2.4-cp311-cp311-win32.whl\r\n    5b11fe8d26318d85e0bc577a654f6643  numpy-2.2.4-cp311-cp311-win_amd64.whl\r\n    91121787f396d3e98210de8b617e5d48  numpy-2.2.4-cp312-cp312-macosx_10_13_x86_64.whl\r\n    c524d1020b4652aacf4477d1628fa1ba  numpy-2.2.4-cp312-cp312-macosx_11_0_arm64.whl\r\n    eb08f551bdd6772155bb39ac0da47479  numpy-2.2.4-cp312-cp312-macosx_14_0_arm64.whl\r\n    7cb37fc9145d0ebbea5666b4f9ed1027  numpy-2.2.4-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c4452a5dc557c291904b5c51a4148237  numpy-2.2.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bd23a12ead870759f264160ab38b2c9d  numpy-2.2.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    07b44109381985b48d1eef80feebc5ad  numpy-2.2.4-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    95f1a27d33106fa9f40ee0714681c840  numpy-2.2.4-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    507e550a55b19dedf267b58a487ba0bc  numpy-2.2.4-cp312-cp312-win32.whl\r\n    be21ccbf8931e92ba1fdb2dc1250bf2a  numpy-2.2.4-cp312-cp312-win_amd64.whl\r\n    e94003c2b65d81b00203711c5c42fb8e  numpy-2.2.4-cp313-cp313-macosx_10_13_x86_64.whl\r\n    cf781fd5412ffd826e0436883452cc17  numpy-2.2.4-cp313-cp313-macosx_11_0_arm64.whl\r\n    92c9a30386a64f2deddad1db742bd296  numpy-2.2.4-cp313-cp313-macosx_14_0_arm64.whl\r\n    7fd16554fa0a15b7f99b1fabf1c4592c  numpy-2.2.4-cp313-cp313-macosx_14_0_x86_64.whl\r\n    9293b0575a902b2d55c35567dee7679e  numpy-2.2.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9970699bd95e8a64a562b1e6328b83d0  numpy-2.2.4-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e8597c611a919a8e88229d6889c1f86e  numpy-2.2.4-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    329288501f012606605bdbed368e58e9  numpy-2.2.4-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    04bf8d0f6a9e279ab01df4ed0b4aeee1  numpy-2.2.4-cp313-cp313-win32.whl\r\n    66801fe84a436b7ed3be6e0082b86917  numpy-2.2.4-cp313-cp313-win_amd64.whl\r\n    3e2f31e01b45cd16a87b794477de3714  numpy-2.2.4-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    7504018213a3a8fea7173e2c1d0fcfd1  numpy-2.2.4-cp313-cp313t-macosx_11_0_arm64.whl\r\n    e299021397c3cdb941b7ffe77cf0fefe  numpy-2.2.4-cp313-cp313t-macosx_14_0_arm64.whl\r\n    1cc2731a246079bcab361179f38e7ccb  numpy-2.2.4-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    e6eccf936d25c9eda9df1a4d50ae2fdc  numpy-2.2.4-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ba825efd05cca6d56c3dca9f7f1f88e7  numpy-2.2.4-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    369eebec47c9c27cb4841a13e9522167  numpy-2.2.4-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    554dbfa52988d01f715cbe8d4da4b409  numpy-2.2.4-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    811d25a008c68086c9382487e9a4127a  numpy-2.2.4-cp313-cp313t-win32.whl\r\n    893fd2fdd42f386e300bee885bbb7778  numpy-2.2.4-cp313-cp313t-win_amd64.whl\r\n    65e284546c5ee575eca0a3726c0a1d98  numpy-2.2.4-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    e4e73511eac8f1a10c6abbd6fa2fa0aa  numpy-2.2.4-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    a884ed5263b91fa87b5e3d14caf955a5  numpy-2.2.4-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7330087a6ad1527ae20a495e2fb3b357  numpy-2.2.4-pp310-pypy310_pp73-win_amd64.whl\r\n    56232f4a69b03dd7a87a55fffc5f2ebc  numpy-2.2.4.tar.gz\r\n\r\n### SHA256\r\n\r\n    8146f3550d627252269ac42ae660281d673eb6f8b32f113538e0cc2a9aed42b9  numpy-2.2.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    e642d86b8f956098b564a45e6f6ce68a22c2c97a04f5acd3f221f57b8cb850ae  numpy-2.2.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    a84eda42bd12edc36eb5b53bbcc9b406820d3353f1994b6cfe453a33ff101775  numpy-2.2.4-cp310-cp310-macosx_14_0_arm64.whl\r\n    4ba5054787e89c59c593a4169830ab362ac2bee8a969249dc56e5d7d20ff8df9  numpy-2.2.4-cp310-cp310-macosx_14_0_x86_64.whl\r\n    7716e4a9b7af82c06a2543c53ca476fa0b57e4d760481273e09da04b74ee6ee2  numpy-2.2.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    adf8c1d66f432ce577d0197dceaac2ac00c0759f573f28516246351c58a85020  numpy-2.2.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    218f061d2faa73621fa23d6359442b0fc658d5b9a70801373625d958259eaca3  numpy-2.2.4-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    df2f57871a96bbc1b69733cd4c51dc33bea66146b8c63cacbfed73eec0883017  numpy-2.2.4-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    a0258ad1f44f138b791327961caedffbf9612bfa504ab9597157806faa95194a  numpy-2.2.4-cp310-cp310-win32.whl\r\n    0d54974f9cf14acf49c60f0f7f4084b6579d24d439453d5fc5805d46a165b542  numpy-2.2.4-cp310-cp310-win_amd64.whl\r\n    e9e0a277bb2eb5d8a7407e14688b85fd8ad628ee4e0c7930415687b6564207a4  numpy-2.2.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    9eeea959168ea555e556b8188da5fa7831e21d91ce031e95ce23747b7609f8a4  numpy-2.2.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    bd3ad3b0a40e713fc68f99ecfd07124195333f1e689387c180813f0e94309d6f  numpy-2.2.4-cp311-cp311-macosx_14_0_arm64.whl\r\n    cf28633d64294969c019c6df4ff37f5698e8326db68cc2b66576a51fad634880  numpy-2.2.4-cp311-cp311-macosx_14_0_x86_64.whl\r\n    2fa8fa7697ad1646b5c93de1719965844e004fcad23c91228aca1cf0800044a1  numpy-2.2.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f4162988a360a29af158aeb4a2f4f09ffed6a969c9776f8f3bdee9b06a8ab7e5  numpy-2.2.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    892c10d6a73e0f14935c31229e03325a7b3093fafd6ce0af704be7f894d95687  numpy-2.2.4-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    db1f1c22173ac1c58db249ae48aa7ead29f534b9a948bc56828337aa84a32ed6  numpy-2.2.4-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    ea2bb7e2ae9e37d96835b3576a4fa4b3a97592fbea8ef7c3587078b0068b8f09  numpy-2.2.4-cp311-cp311-win32.whl\r\n    f7de08cbe5551911886d1ab60de58448c6df0f67d9feb7d1fb21e9875ef95e91  numpy-2.2.4-cp311-cp311-win_amd64.whl\r\n    a7b9084668aa0f64e64bd00d27ba5146ef1c3a8835f3bd912e7a9e01326804c4  numpy-2.2.4-cp312-cp312-macosx_10_13_x86_64.whl\r\n    dbe512c511956b893d2dacd007d955a3f03d555ae05cfa3ff1c1ff6df8851854  numpy-2.2.4-cp312-cp312-macosx_11_0_arm64.whl\r\n    bb649f8b207ab07caebba230d851b579a3c8711a851d29efe15008e31bb4de24  numpy-2.2.4-cp312-cp312-macosx_14_0_arm64.whl\r\n    f34dc300df798742b3d06515aa2a0aee20941c13579d7a2f2e10af01ae4901ee  numpy-2.2.4-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c3f7ac96b16955634e223b579a3e5798df59007ca43e8d451a0e6a50f6bfdfba  numpy-2.2.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4f92084defa704deadd4e0a5ab1dc52d8ac9e8a8ef617f3fbb853e79b0ea3592  numpy-2.2.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7a4e84a6283b36632e2a5b56e121961f6542ab886bc9e12f8f9818b3c266bfbb  numpy-2.2.4-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    11c43995255eb4127115956495f43e9343736edb7fcdb0d973defd9de14cd84f  numpy-2.2.4-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    65ef3468b53269eb5fdb3a5c09508c032b793da03251d5f8722b1194f1790c00  numpy-2.2.4-cp312-cp312-win32.whl\r\n    2aad3c17ed2ff455b8eaafe06bcdae0062a1db77cb99f4b9cbb5f4ecb13c5146  numpy-2.2.4-cp312-cp312-win_amd64.whl\r\n    1cf4e5c6a278d620dee9ddeb487dc6a860f9b199eadeecc567f777daace1e9e7  numpy-2.2.4-cp313-cp313-macosx_10_13_x86_64.whl\r\n    1974afec0b479e50438fc3648974268f972e2d908ddb6d7fb634598cdb8260a0  numpy-2.2.4-cp313-cp313-macosx_11_0_arm64.whl\r\n    79bd5f0a02aa16808fcbc79a9a376a147cc1045f7dfe44c6e7d53fa8b8a79392  numpy-2.2.4-cp313-cp313-macosx_14_0_arm64.whl\r\n    3387dd7232804b341165cedcb90694565a6015433ee076c6754775e85d86f1fc  numpy-2.2.4-cp313-cp313-macosx_14_0_x86_64.whl\r\n    6f527d8fdb0286fd2fd97a2a96c6be17ba4232da346931d967a0630050dfd298  numpy-2.2.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bce43e386c16898b91e162e5baaad90c4b06f9dcbe36282490032cec98dc8ae7  numpy-2.2.4-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    31504f970f563d99f71a3512d0c01a645b692b12a63630d6aafa0939e52361e6  numpy-2.2.4-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    81413336ef121a6ba746892fad881a83351ee3e1e4011f52e97fba79233611fd  numpy-2.2.4-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    f486038e44caa08dbd97275a9a35a283a8f1d2f0ee60ac260a1790e76660833c  numpy-2.2.4-cp313-cp313-win32.whl\r\n    207a2b8441cc8b6a2a78c9ddc64d00d20c303d79fba08c577752f080c4007ee3  numpy-2.2.4-cp313-cp313-win_amd64.whl\r\n    8120575cb4882318c791f839a4fd66161a6fa46f3f0a5e613071aae35b5dd8f8  numpy-2.2.4-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    a761ba0fa886a7bb33c6c8f6f20213735cb19642c580a931c625ee377ee8bd39  numpy-2.2.4-cp313-cp313t-macosx_11_0_arm64.whl\r\n    ac0280f1ba4a4bfff363a99a6aceed4f8e123f8a9b234c89140f5e894e452ecd  numpy-2.2.4-cp313-cp313t-macosx_14_0_arm64.whl\r\n    879cf3a9a2b53a4672a168c21375166171bc3932b7e21f622201811c43cdd3b0  numpy-2.2.4-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    f05d4198c1bacc9124018109c5fba2f3201dbe7ab6e92ff100494f236209c960  numpy-2.2.4-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e2f085ce2e813a50dfd0e01fbfc0c12bbe5d2063d99f8b29da30e544fb6483b8  numpy-2.2.4-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    92bda934a791c01d6d9d8e038363c50918ef7c40601552a58ac84c9613a665bc  numpy-2.2.4-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    ee4d528022f4c5ff67332469e10efe06a267e32f4067dc76bb7e2cddf3cd25ff  numpy-2.2.4-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    05c076d531e9998e7e694c36e8b349969c56eadd2cdcd07242958489d79a7286  numpy-2.2.4-cp313-cp313t-win32.whl\r\n    188dcbca89834cc2e14eb2f106c96d6d46f200fe0200310fc29089657379c58d  numpy-2.2.4-cp313-cp313t-win_amd64.whl\r\n    7051ee569db5fbac144335e0f3b9c2337e0c8d5c9fee015f259a5bd70772b7e8  numpy-2.2.4-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    ab2939cd5bec30a7430cbdb2287b63151b77cf9624de0532d629c9a1c59b1d5c  numpy-2.2.4-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    d0f35b19894a9e08639fd60a1ec1978cb7f5f7f1eace62f38dd36be8aecdef4d  numpy-2.2.4-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b4adfbbc64014976d2f91084915ca4e626fbf2057fb81af209c1a6d776d23e3d  numpy-2.2.4-pp310-pypy310_pp73-win_amd64.whl\r\n    9ba03692a45d3eef66559efe1d1096c4b9b75c0986b5dff5530c378fb8331d4f  numpy-2.2.4.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/206104786/reactions",
      "total_count": 29,
      "+1": 12,
      "-1": 0,
      "laugh": 3,
      "hooray": 4,
      "confused": 0,
      "heart": 5,
      "rocket": 5,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/200185344",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/200185344/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/200185344/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.3",
    "id": 200185344,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84L7pYA",
    "tag_name": "v2.2.3",
    "target_commitish": "main",
    "name": "2.2.3 (Feb 13, 2025)",
    "draft": false,
    "prerelease": false,
    "created_at": "2025-02-12T20:59:24Z",
    "published_at": "2025-02-13T17:26:34Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/228897872",
        "id": 228897872,
        "node_id": "RA_kwDOAA3dP84NpLRQ",
        "name": "2.2.3-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2597,
        "download_count": 203,
        "created_at": "2025-02-13T17:26:04Z",
        "updated_at": "2025-02-13T17:26:04Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.3/2.2.3-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/228897475",
        "id": 228897475,
        "node_id": "RA_kwDOAA3dP84NpLLD",
        "name": "numpy-2.2.3.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20262700,
        "download_count": 2107,
        "created_at": "2025-02-13T17:25:02Z",
        "updated_at": "2025-02-13T17:25:31Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.3/numpy-2.2.3.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/228897422",
        "id": 228897422,
        "node_id": "RA_kwDOAA3dP84NpLKO",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 14554,
        "download_count": 240,
        "created_at": "2025-02-13T17:24:45Z",
        "updated_at": "2025-02-13T17:24:46Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.3/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.3",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.3",
    "body": "# NumPy 2.2.3 Release Notes\r\n\r\nNumPy 2.2.3 is a patch release that fixes bugs found after the 2.2.2\r\nrelease. The majority of the changes are typing improvements and fixes\r\nfor free threaded Python. Both of those areas are still under\r\ndevelopment, so if you discover new problems, please report them.\r\n\r\nThis release supports Python versions 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 9 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   !amotzop\r\n-   Charles Harris\r\n-   Chris Sidebottom\r\n-   Joren Hammudoglu\r\n-   Matthew Brett\r\n-   Nathan Goldbaum\r\n-   Raghuveer Devulapalli\r\n-   Sebastian Berg\r\n-   Yakov Danishevsky +\r\n\r\n## Pull requests merged\r\n\r\nA total of 21 pull requests were merged for this release.\r\n\r\n-   [#28185](https://github.com/numpy/numpy/pull/28185): MAINT: Prepare 2.2.x for further development\r\n-   [#28201](https://github.com/numpy/numpy/pull/28201): BUG: fix data race in a more minimal way on stable branch\r\n-   [#28208](https://github.com/numpy/numpy/pull/28208): BUG: Fix `from_float_positional` errors for huge pads\r\n-   [#28209](https://github.com/numpy/numpy/pull/28209): BUG: fix data race in np.repeat\r\n-   [#28212](https://github.com/numpy/numpy/pull/28212): MAINT: Use VQSORT_COMPILER_COMPATIBLE to determine if we should\\...\r\n-   [#28224](https://github.com/numpy/numpy/pull/28224): MAINT: update highway to latest\r\n-   [#28236](https://github.com/numpy/numpy/pull/28236): BUG: Add cpp atomic support (#28234)\r\n-   [#28237](https://github.com/numpy/numpy/pull/28237): BLD: Compile fix for clang-cl on WoA\r\n-   [#28243](https://github.com/numpy/numpy/pull/28243): TYP: Avoid upcasting `float64` in the set-ops\r\n-   [#28249](https://github.com/numpy/numpy/pull/28249): BLD: better fix for clang / ARM compiles\r\n-   [#28266](https://github.com/numpy/numpy/pull/28266): TYP: Fix `timedelta64.__divmod__` and `timedelta64.__mod__`\\...\r\n-   [#28274](https://github.com/numpy/numpy/pull/28274): TYP: Fixed missing typing information of set_printoptions\r\n-   [#28278](https://github.com/numpy/numpy/pull/28278): BUG: backport resource cleanup bugfix from gh-28273\r\n-   [#28282](https://github.com/numpy/numpy/pull/28282): BUG: fix incorrect bytes to stringdtype coercion\r\n-   [#28283](https://github.com/numpy/numpy/pull/28283): TYP: Fix scalar constructors\r\n-   [#28284](https://github.com/numpy/numpy/pull/28284): TYP: stub `numpy.matlib`\r\n-   [#28285](https://github.com/numpy/numpy/pull/28285): TYP: stub the missing `numpy.testing` modules\r\n-   [#28286](https://github.com/numpy/numpy/pull/28286): CI: Fix the github label for `TYP:` PR\\'s and issues\r\n-   [#28305](https://github.com/numpy/numpy/pull/28305): TYP: Backport typing updates from main\r\n-   [#28321](https://github.com/numpy/numpy/pull/28321): BUG: fix race initializing legacy dtype casts\r\n-   [#28324](https://github.com/numpy/numpy/pull/28324): CI: update test_moderately_small_alpha\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    9cd8b5e358f89016f403a6c1a27e7e87  numpy-2.2.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2818f5a9efcfc3bb6bf657137df26046  numpy-2.2.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    6d65c6a336cfb69fe4ddd756cad73d55  numpy-2.2.3-cp310-cp310-macosx_14_0_arm64.whl\r\n    7f4cf33c634b33f633d4bf47f560a86d  numpy-2.2.3-cp310-cp310-macosx_14_0_x86_64.whl\r\n    3c04024badd42bfcc68c14f106efa93f  numpy-2.2.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    07658df1de0e1d3721de0aacff4313cd  numpy-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3e753fc4b7c879b29442ee9bab25eddd  numpy-2.2.3-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    d1811f1988d88b00825bc6e943d8e22d  numpy-2.2.3-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    b5fe91363c16001ea30cbd5befbb0555  numpy-2.2.3-cp310-cp310-win32.whl\r\n    44dfe1df1640e4fe762bedad57cd7165  numpy-2.2.3-cp310-cp310-win_amd64.whl\r\n    6156418f596620b00a3c221baef02476  numpy-2.2.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    97b925bac245aad1297d22ad3cfaa74c  numpy-2.2.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    3f05819fcb71df1d3093e5d1c041a4e9  numpy-2.2.3-cp311-cp311-macosx_14_0_arm64.whl\r\n    f6763893ba9a5739fefa0929fd152db2  numpy-2.2.3-cp311-cp311-macosx_14_0_x86_64.whl\r\n    e93cf6ed4e1a3f9a8009ee7f2fcb0da8  numpy-2.2.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    851dcbcbe90212c385dcdac1614cca83  numpy-2.2.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9b27cf1d6319f70370f4b0af10c03f5c  numpy-2.2.3-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    28d20c95ff23d27ae639b4960df777ec  numpy-2.2.3-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    559fefe30c0043a088adeca90231b382  numpy-2.2.3-cp311-cp311-win32.whl\r\n    5e32a1cc3dcfe729f675784a53e4d553  numpy-2.2.3-cp311-cp311-win_amd64.whl\r\n    12134dcf62b2bca2eeebb7bbc45c2a71  numpy-2.2.3-cp312-cp312-macosx_10_13_x86_64.whl\r\n    c72318236531d3ca61d229eaf96f7d04  numpy-2.2.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    1b807acc844c2ba5be7bc7586d4a3a6b  numpy-2.2.3-cp312-cp312-macosx_14_0_arm64.whl\r\n    810d4908371bb2f08b0c7b16d3f05970  numpy-2.2.3-cp312-cp312-macosx_14_0_x86_64.whl\r\n    bb918cedd0931cb68af9e77096dedf54  numpy-2.2.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    92c6c6c5b22b207425b329f061bd18fa  numpy-2.2.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    10d48fb9d86280db1afe7224b15a51af  numpy-2.2.3-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    a73da0434a971b21d8a9c0596015d629  numpy-2.2.3-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    c5f1e734c7d872e2f9af71d32e62d59c  numpy-2.2.3-cp312-cp312-win32.whl\r\n    884c1a89844f539ab15b7016a43d231c  numpy-2.2.3-cp312-cp312-win_amd64.whl\r\n    3a2de7f886cb756cf8d0375a36721926  numpy-2.2.3-cp313-cp313-macosx_10_13_x86_64.whl\r\n    c1fe5b6a9015c2877647419caa009be0  numpy-2.2.3-cp313-cp313-macosx_11_0_arm64.whl\r\n    bb3f3a69219bbcdb719bbe38e4e69f79  numpy-2.2.3-cp313-cp313-macosx_14_0_arm64.whl\r\n    8158c2e980a1cbfb4d98ff3a273bb2e9  numpy-2.2.3-cp313-cp313-macosx_14_0_x86_64.whl\r\n    4d3d9b0c14db955e4b1aa1a1971d2def  numpy-2.2.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6575308269513900c94803258b89ac83  numpy-2.2.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    945b91c2093fed2a1f34597fc66e5a35  numpy-2.2.3-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    c5867508607f75ed23426315a7ad86d7  numpy-2.2.3-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    5a1497c262d9aa52ce6859a12a54ebbc  numpy-2.2.3-cp313-cp313-win32.whl\r\n    69c98e036d59eb74e4620c7649b5d7fc  numpy-2.2.3-cp313-cp313-win_amd64.whl\r\n    2535d7c0f98ad848bcf1f48f7c358e41  numpy-2.2.3-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    aea9afa69d510ce905b2b8dbf0e33a11  numpy-2.2.3-cp313-cp313t-macosx_11_0_arm64.whl\r\n    cc5aceacd0a44a67cdd2cf8d5a446ca3  numpy-2.2.3-cp313-cp313t-macosx_14_0_arm64.whl\r\n    32eb2ed1e734ea26c90f75b1f5616564  numpy-2.2.3-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    f1d85f322c3e85ef748c3e5594b94226  numpy-2.2.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7f24ce01ad5c352c76614a12fa5e2319  numpy-2.2.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    62841d4b49c5a0cef2c2ba26a16f6959  numpy-2.2.3-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    d7b512f83999d05c47e55b931f2dcdfe  numpy-2.2.3-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    1dca2f20e0accc1741e5fb233ecf7dff  numpy-2.2.3-cp313-cp313t-win32.whl\r\n    347b71f0db5b49a25ef1ed677e47999b  numpy-2.2.3-cp313-cp313t-win_amd64.whl\r\n    3615d13c8c14c323aeda1c07d5a7fd55  numpy-2.2.3-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    f7d2ba950c5aa11c100bb6bf202d5799  numpy-2.2.3-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    b4336174c843c4943084e17945cd1165  numpy-2.2.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0d856a89e028c393f8125739c56591e0  numpy-2.2.3-pp310-pypy310_pp73-win_amd64.whl\r\n    c6ee254bcdf1e2fdb13d87e0ee4166ba  numpy-2.2.3.tar.gz\r\n\r\n### SHA256\r\n\r\n    cbc6472e01952d3d1b2772b720428f8b90e2deea8344e854df22b0618e9cce71  numpy-2.2.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    cdfe0c22692a30cd830c0755746473ae66c4a8f2e7bd508b35fb3b6a0813d787  numpy-2.2.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    e37242f5324ffd9f7ba5acf96d774f9276aa62a966c0bad8dae692deebec7716  numpy-2.2.3-cp310-cp310-macosx_14_0_arm64.whl\r\n    95172a21038c9b423e68be78fd0be6e1b97674cde269b76fe269a5dfa6fadf0b  numpy-2.2.3-cp310-cp310-macosx_14_0_x86_64.whl\r\n    d5b47c440210c5d1d67e1cf434124e0b5c395eee1f5806fdd89b553ed1acd0a3  numpy-2.2.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0391ea3622f5c51a2e29708877d56e3d276827ac5447d7f45e9bc4ade8923c52  numpy-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f6b3dfc7661f8842babd8ea07e9897fe3d9b69a1d7e5fbb743e4160f9387833b  numpy-2.2.3-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    1ad78ce7f18ce4e7df1b2ea4019b5817a2f6a8a16e34ff2775f646adce0a5027  numpy-2.2.3-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    5ebeb7ef54a7be11044c33a17b2624abe4307a75893c001a4800857956b41094  numpy-2.2.3-cp310-cp310-win32.whl\r\n    596140185c7fa113563c67c2e894eabe0daea18cf8e33851738c19f70ce86aeb  numpy-2.2.3-cp310-cp310-win_amd64.whl\r\n    16372619ee728ed67a2a606a614f56d3eabc5b86f8b615c79d01957062826ca8  numpy-2.2.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    5521a06a3148686d9269c53b09f7d399a5725c47bbb5b35747e1cb76326b714b  numpy-2.2.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    7c8dde0ca2f77828815fd1aedfdf52e59071a5bae30dac3b4da2a335c672149a  numpy-2.2.3-cp311-cp311-macosx_14_0_arm64.whl\r\n    77974aba6c1bc26e3c205c2214f0d5b4305bdc719268b93e768ddb17e3fdd636  numpy-2.2.3-cp311-cp311-macosx_14_0_x86_64.whl\r\n    d42f9c36d06440e34226e8bd65ff065ca0963aeecada587b937011efa02cdc9d  numpy-2.2.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f2712c5179f40af9ddc8f6727f2bd910ea0eb50206daea75f58ddd9fa3f715bb  numpy-2.2.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c8b0451d2ec95010d1db8ca733afc41f659f425b7f608af569711097fd6014e2  numpy-2.2.3-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    d9b4a8148c57ecac25a16b0e11798cbe88edf5237b0df99973687dd866f05e1b  numpy-2.2.3-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    1f45315b2dc58d8a3e7754fe4e38b6fce132dab284a92851e41b2b344f6441c5  numpy-2.2.3-cp311-cp311-win32.whl\r\n    9f48ba6f6c13e5e49f3d3efb1b51c8193215c42ac82610a04624906a9270be6f  numpy-2.2.3-cp311-cp311-win_amd64.whl\r\n    12c045f43b1d2915eca6b880a7f4a256f59d62df4f044788c8ba67709412128d  numpy-2.2.3-cp312-cp312-macosx_10_13_x86_64.whl\r\n    87eed225fd415bbae787f93a457af7f5990b92a334e346f72070bf569b9c9c95  numpy-2.2.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    712a64103d97c404e87d4d7c47fb0c7ff9acccc625ca2002848e0d53288b90ea  numpy-2.2.3-cp312-cp312-macosx_14_0_arm64.whl\r\n    a5ae282abe60a2db0fd407072aff4599c279bcd6e9a2475500fc35b00a57c532  numpy-2.2.3-cp312-cp312-macosx_14_0_x86_64.whl\r\n    5266de33d4c3420973cf9ae3b98b54a2a6d53a559310e3236c4b2b06b9c07d4e  numpy-2.2.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3b787adbf04b0db1967798dba8da1af07e387908ed1553a0d6e74c084d1ceafe  numpy-2.2.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    34c1b7e83f94f3b564b35f480f5652a47007dd91f7c839f404d03279cc8dd021  numpy-2.2.3-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    4d8335b5f1b6e2bce120d55fb17064b0262ff29b459e8493d1785c18ae2553b8  numpy-2.2.3-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    4d9828d25fb246bedd31e04c9e75714a4087211ac348cb39c8c5f99dbb6683fe  numpy-2.2.3-cp312-cp312-win32.whl\r\n    83807d445817326b4bcdaaaf8e8e9f1753da04341eceec705c001ff342002e5d  numpy-2.2.3-cp312-cp312-win_amd64.whl\r\n    7bfdb06b395385ea9b91bf55c1adf1b297c9fdb531552845ff1d3ea6e40d5aba  numpy-2.2.3-cp313-cp313-macosx_10_13_x86_64.whl\r\n    23c9f4edbf4c065fddb10a4f6e8b6a244342d95966a48820c614891e5059bb50  numpy-2.2.3-cp313-cp313-macosx_11_0_arm64.whl\r\n    a0c03b6be48aaf92525cccf393265e02773be8fd9551a2f9adbe7db1fa2b60f1  numpy-2.2.3-cp313-cp313-macosx_14_0_arm64.whl\r\n    2376e317111daa0a6739e50f7ee2a6353f768489102308b0d98fcf4a04f7f3b5  numpy-2.2.3-cp313-cp313-macosx_14_0_x86_64.whl\r\n    8fb62fe3d206d72fe1cfe31c4a1106ad2b136fcc1606093aeab314f02930fdf2  numpy-2.2.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    52659ad2534427dffcc36aac76bebdd02b67e3b7a619ac67543bc9bfe6b7cdb1  numpy-2.2.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1b416af7d0ed3271cad0f0a0d0bee0911ed7eba23e66f8424d9f3dfcdcae1304  numpy-2.2.3-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    1402da8e0f435991983d0a9708b779f95a8c98c6b18a171b9f1be09005e64d9d  numpy-2.2.3-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    136553f123ee2951bfcfbc264acd34a2fc2f29d7cdf610ce7daf672b6fbaa693  numpy-2.2.3-cp313-cp313-win32.whl\r\n    5b732c8beef1d7bc2d9e476dbba20aaff6167bf205ad9aa8d30913859e82884b  numpy-2.2.3-cp313-cp313-win_amd64.whl\r\n    435e7a933b9fda8126130b046975a968cc2d833b505475e588339e09f7672890  numpy-2.2.3-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    7678556eeb0152cbd1522b684dcd215250885993dd00adb93679ec3c0e6e091c  numpy-2.2.3-cp313-cp313t-macosx_11_0_arm64.whl\r\n    2e8da03bd561504d9b20e7a12340870dfc206c64ea59b4cfee9fceb95070ee94  numpy-2.2.3-cp313-cp313t-macosx_14_0_arm64.whl\r\n    c9aa4496fd0e17e3843399f533d62857cef5900facf93e735ef65aa4bbc90ef0  numpy-2.2.3-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    f4ca91d61a4bf61b0f2228f24bbfa6a9facd5f8af03759fe2a655c50ae2c6610  numpy-2.2.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    deaa09cd492e24fd9b15296844c0ad1b3c976da7907e1c1ed3a0ad21dded6f76  numpy-2.2.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    246535e2f7496b7ac85deffe932896a3577be7af8fb7eebe7146444680297e9a  numpy-2.2.3-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    daf43a3d1ea699402c5a850e5313680ac355b4adc9770cd5cfc2940e7861f1bf  numpy-2.2.3-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    cf802eef1f0134afb81fef94020351be4fe1d6681aadf9c5e862af6602af64ef  numpy-2.2.3-cp313-cp313t-win32.whl\r\n    aee2512827ceb6d7f517c8b85aa5d3923afe8fc7a57d028cffcd522f1c6fd082  numpy-2.2.3-cp313-cp313t-win_amd64.whl\r\n    3c2ec8a0f51d60f1e9c0c5ab116b7fc104b165ada3f6c58abf881cb2eb16044d  numpy-2.2.3-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    ed2cf9ed4e8ebc3b754d398cba12f24359f018b416c380f577bbae112ca52fc9  numpy-2.2.3-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    39261798d208c3095ae4f7bc8eaeb3481ea8c6e03dc48028057d3cbdbdb8937e  numpy-2.2.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    783145835458e60fa97afac25d511d00a1eca94d4a8f3ace9fe2043003c678e4  numpy-2.2.3-pp310-pypy310_pp73-win_amd64.whl\r\n    dbdc15f0c81611925f382dfa97b3bd0bc2c1ce19d4fe50482cb0ddc12ba30020  numpy-2.2.3.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/200185344/reactions",
      "total_count": 28,
      "+1": 11,
      "-1": 0,
      "laugh": 4,
      "hooray": 5,
      "confused": 0,
      "heart": 4,
      "rocket": 4,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/195486066",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/195486066/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/195486066/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.2",
    "id": 195486066,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84LpuFy",
    "tag_name": "v2.2.2",
    "target_commitish": "main",
    "name": "2.2.2 (Jan 18, 2025)",
    "draft": false,
    "prerelease": false,
    "created_at": "2025-01-18T20:52:57Z",
    "published_at": "2025-01-19T00:15:59Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/221484306",
        "id": 221484306,
        "node_id": "RA_kwDOAA3dP84NM5US",
        "name": "2.2.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2199,
        "download_count": 147,
        "created_at": "2025-01-19T00:13:41Z",
        "updated_at": "2025-01-19T00:13:41Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.2/2.2.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/221484369",
        "id": 221484369,
        "node_id": "RA_kwDOAA3dP84NM5VR",
        "name": "numpy-2.2.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20233295,
        "download_count": 1705,
        "created_at": "2025-01-19T00:14:16Z",
        "updated_at": "2025-01-19T00:15:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.2/numpy-2.2.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/221484256",
        "id": 221484256,
        "node_id": "RA_kwDOAA3dP84NM5Tg",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 14014,
        "download_count": 216,
        "created_at": "2025-01-19T00:13:06Z",
        "updated_at": "2025-01-19T00:13:06Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.2",
    "body": "# NumPy 2.2.2 Release Notes\r\n\r\nNumPy 2.2.2 is a patch release that fixes bugs found after the 2.2.1\r\nrelease. The number of typing fixes/updates is notable. This release\r\nsupports Python versions 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 8 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Alicia Boya Garc\u00eda +\r\n-   Charles Harris\r\n-   Joren Hammudoglu\r\n-   Kai Germaschewski +\r\n-   Nathan Goldbaum\r\n-   PTUsumit +\r\n-   Rohit Goswami\r\n-   Sebastian Berg\r\n\r\n## Pull requests merged\r\n\r\nA total of 16 pull requests were merged for this release.\r\n\r\n-   [#28050](https://github.com/numpy/numpy/pull/28050): MAINT: Prepare 2.2.x for further development\r\n-   [#28055](https://github.com/numpy/numpy/pull/28055): TYP: fix `void` arrays not accepting `str` keys in `__setitem__`\r\n-   [#28066](https://github.com/numpy/numpy/pull/28066): TYP: fix unnecessarily broad `integer` binop return types (#28065)\r\n-   [#28112](https://github.com/numpy/numpy/pull/28112): TYP: Better `ndarray` binop return types for `float64` &\\...\r\n-   [#28113](https://github.com/numpy/numpy/pull/28113): TYP: Return the correct `bool` from `issubdtype`\r\n-   [#28114](https://github.com/numpy/numpy/pull/28114): TYP: Always accept `date[time]` in the `datetime64` constructor\r\n-   [#28120](https://github.com/numpy/numpy/pull/28120): BUG: Fix auxdata initialization in ufunc slow path\r\n-   [#28131](https://github.com/numpy/numpy/pull/28131): BUG: move reduction initialization to ufunc initialization\r\n-   [#28132](https://github.com/numpy/numpy/pull/28132): TYP: Fix `interp` to accept and return scalars\r\n-   [#28137](https://github.com/numpy/numpy/pull/28137): BUG: call PyType_Ready in f2py to avoid data races\r\n-   [#28145](https://github.com/numpy/numpy/pull/28145): BUG: remove unnecessary call to PyArray_UpdateFlags\r\n-   [#28160](https://github.com/numpy/numpy/pull/28160): BUG: Avoid data race in PyArray_CheckFromAny_int\r\n-   [#28175](https://github.com/numpy/numpy/pull/28175): BUG: Fix f2py directives and \\--lower casing\r\n-   [#28176](https://github.com/numpy/numpy/pull/28176): TYP: Fix overlapping overloads issue in 2-\\>1 ufuncs\r\n-   [#28177](https://github.com/numpy/numpy/pull/28177): TYP: preserve shape-type in ndarray.astype()\r\n-   [#28178](https://github.com/numpy/numpy/pull/28178): TYP: Fix missing and spurious top-level exports\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    749cb2adf8043551aae22bbf0ed3130a  numpy-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    bc79fa2e44316b7ce9bacb48a993ed91  numpy-2.2.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    c6b2caa2bbb645b5950dccb77efb1dbb  numpy-2.2.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    8c410efac169af880cacbbac8a731658  numpy-2.2.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    21d165669635a9b680d03b0b4e7f5b98  numpy-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a34ef5e7c967136fdc59c822e99f87d6  numpy-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a81749effc5160ff8dde7eb2ebe868c4  numpy-2.2.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    546612d82fae082697879aaf2b985b1b  numpy-2.2.2-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    d874e626f58175ad603cb68fda2a4e28  numpy-2.2.2-cp310-cp310-win32.whl\r\n    20564a5caeb621061267f9d80c1e7ed0  numpy-2.2.2-cp310-cp310-win_amd64.whl\r\n    ef5336ddae73feef891844a205f89b15  numpy-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    7a0c8804cb6ebca82b1cf3063b410687  numpy-2.2.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    1682639d0420a532f8894c4a8685b23d  numpy-2.2.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    d33d53efc5744b577cb8a6ac9971cfdb  numpy-2.2.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    c85b92e2ed7ef0eaeb15909ad73aea22  numpy-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    efa1a587f607a37336c477bed977ea64  numpy-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e0effe9902e262704a115c6f7095daf7  numpy-2.2.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    425e0cebeb1c2c91bba42ae195836268  numpy-2.2.2-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    57121319a2fbb76eed4b268282ed668e  numpy-2.2.2-cp311-cp311-win32.whl\r\n    fdb54e7345ff657d208fbb52469a5861  numpy-2.2.2-cp311-cp311-win_amd64.whl\r\n    bdf299e0abc45b5c5113a1cc5505636a  numpy-2.2.2-cp312-cp312-macosx_10_13_x86_64.whl\r\n    30c25784c07965592cf88104b6c02508  numpy-2.2.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    65e630a0de5403c41a0083198bc14442  numpy-2.2.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    6d9f50717e7b40f1ebdf139f83cc7504  numpy-2.2.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    6b092a9280ada70482d44f538752fc0b  numpy-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9c273da8438391eab30f6c1c4898be5d  numpy-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d619047dcaf041b806a7b59ff0a798d5  numpy-2.2.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    fa5d0d979104456d7c43a183223c8587  numpy-2.2.2-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    3b8689aedff5037cad85b018e2d5e43a  numpy-2.2.2-cp312-cp312-win32.whl\r\n    a2340ff05cae7e09f63bfcfd4e75ea87  numpy-2.2.2-cp312-cp312-win_amd64.whl\r\n    044e86bd65492af34a59e4109fbeed16  numpy-2.2.2-cp313-cp313-macosx_10_13_x86_64.whl\r\n    7ca0f0e8c8d3d80ec473ec33929c2ae3  numpy-2.2.2-cp313-cp313-macosx_11_0_arm64.whl\r\n    4b866ad895e007005afe8a29837cf7d6  numpy-2.2.2-cp313-cp313-macosx_14_0_arm64.whl\r\n    2e6247faabf6d0ac0fafaca0bb405ff8  numpy-2.2.2-cp313-cp313-macosx_14_0_x86_64.whl\r\n    773982551185ae327cdefe416e73acfc  numpy-2.2.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1c0ecc958a555a8a95c92c1dd7dc2358  numpy-2.2.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9f662eb58b8f711585550d6fdf8afa4f  numpy-2.2.2-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    53471186fc990eb22e82a0512b310438  numpy-2.2.2-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    6b4d65349c74dd91853a7cc6b5c5786e  numpy-2.2.2-cp313-cp313-win32.whl\r\n    33dc5bab2d3f752ef00f81021d68cb5a  numpy-2.2.2-cp313-cp313-win_amd64.whl\r\n    0acc5069c5ab4fe3ea7c35956636c462  numpy-2.2.2-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    01e3f727594a12eee6d0677113525b96  numpy-2.2.2-cp313-cp313t-macosx_11_0_arm64.whl\r\n    7b1ddabcb187b18caa52055bb2b2dc67  numpy-2.2.2-cp313-cp313t-macosx_14_0_arm64.whl\r\n    a09f5c138ad8c87b9692eea99f344a98  numpy-2.2.2-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    289ec3155aa21c5a161b2d61d2cf3c2d  numpy-2.2.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6bb3eb03d400ad708942afbfebd07abc  numpy-2.2.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    62f8ef2a5c9e76b0e43851a7bb9c0379  numpy-2.2.2-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    59b4b77118f958dd07484686e82b1e7a  numpy-2.2.2-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    726b58ec542581c5e46adfd4c5c0fed0  numpy-2.2.2-cp313-cp313t-win32.whl\r\n    f2b4eab55a963e8cd4c6c1e573c9a59f  numpy-2.2.2-cp313-cp313t-win_amd64.whl\r\n    f6a93eaebee6f9890a4922571141ecb5  numpy-2.2.2-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    fb457bbe2d231e836d2230b06d4706ca  numpy-2.2.2-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    df4c07a48a24621167c12704ba5ac0de  numpy-2.2.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0d1108b9060469eb28bb4a4cffa7b98f  numpy-2.2.2-pp310-pypy310_pp73-win_amd64.whl\r\n    ac108586d3aeab9e2d0134b744763eb9  numpy-2.2.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    7079129b64cb78bdc8d611d1fd7e8002c0a2565da6a47c4df8062349fee90e3e  numpy-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2ec6c689c61df613b783aeb21f945c4cbe6c51c28cb70aae8430577ab39f163e  numpy-2.2.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    40c7ff5da22cd391944a28c6a9c638a5eef77fcf71d6e3a79e1d9d9e82752715  numpy-2.2.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    995f9e8181723852ca458e22de5d9b7d3ba4da3f11cc1cb113f093b271d7965a  numpy-2.2.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    b78ea78450fd96a498f50ee096f69c75379af5138f7881a51355ab0e11286c97  numpy-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3fbe72d347fbc59f94124125e73fc4976a06927ebc503ec5afbfb35f193cd957  numpy-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8e6da5cffbbe571f93588f562ed130ea63ee206d12851b60819512dd3e1ba50d  numpy-2.2.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    09d6a2032faf25e8d0cadde7fd6145118ac55d2740132c1d845f98721b5ebcfd  numpy-2.2.2-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    159ff6ee4c4a36a23fe01b7c3d07bd8c14cc433d9720f977fcd52c13c0098160  numpy-2.2.2-cp310-cp310-win32.whl\r\n    64bd6e1762cd7f0986a740fee4dff927b9ec2c5e4d9a28d056eb17d332158014  numpy-2.2.2-cp310-cp310-win_amd64.whl\r\n    642199e98af1bd2b6aeb8ecf726972d238c9877b0f6e8221ee5ab945ec8a2189  numpy-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    6d9fc9d812c81e6168b6d405bf00b8d6739a7f72ef22a9214c4241e0dc70b323  numpy-2.2.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    c7d1fd447e33ee20c1f33f2c8e6634211124a9aabde3c617687d8b739aa69eac  numpy-2.2.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    451e854cfae0febe723077bd0cf0a4302a5d84ff25f0bfece8f29206c7bed02e  numpy-2.2.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    bd249bc894af67cbd8bad2c22e7cbcd46cf87ddfca1f1289d1e7e54868cc785c  numpy-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    02935e2c3c0c6cbe9c7955a8efa8908dd4221d7755644c59d1bba28b94fd334f  numpy-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a972cec723e0563aa0823ee2ab1df0cb196ed0778f173b381c871a03719d4826  numpy-2.2.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    d6d6a0910c3b4368d89dde073e630882cdb266755565155bc33520283b2d9df8  numpy-2.2.2-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    860fd59990c37c3ef913c3ae390b3929d005243acca1a86facb0773e2d8d9e50  numpy-2.2.2-cp311-cp311-win32.whl\r\n    da1eeb460ecce8d5b8608826595c777728cdf28ce7b5a5a8c8ac8d949beadcf2  numpy-2.2.2-cp311-cp311-win_amd64.whl\r\n    ac9bea18d6d58a995fac1b2cb4488e17eceeac413af014b1dd26170b766d8467  numpy-2.2.2-cp312-cp312-macosx_10_13_x86_64.whl\r\n    23ae9f0c2d889b7b2d88a3791f6c09e2ef827c2446f1c4a3e3e76328ee4afd9a  numpy-2.2.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    3074634ea4d6df66be04f6728ee1d173cfded75d002c75fac79503a880bf3825  numpy-2.2.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    8ec0636d3f7d68520afc6ac2dc4b8341ddb725039de042faf0e311599f54eb37  numpy-2.2.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    2ffbb1acd69fdf8e89dd60ef6182ca90a743620957afb7066385a7bbe88dc748  numpy-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0349b025e15ea9d05c3d63f9657707a4e1d471128a3b1d876c095f328f8ff7f0  numpy-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    463247edcee4a5537841d5350bc87fe8e92d7dd0e8c71c995d2c6eecb8208278  numpy-2.2.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    9dd47ff0cb2a656ad69c38da850df3454da88ee9a6fde0ba79acceee0e79daba  numpy-2.2.2-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    4525b88c11906d5ab1b0ec1f290996c0020dd318af8b49acaa46f198b1ffc283  numpy-2.2.2-cp312-cp312-win32.whl\r\n    5acea83b801e98541619af398cc0109ff48016955cc0818f478ee9ef1c5c3dcb  numpy-2.2.2-cp312-cp312-win_amd64.whl\r\n    b208cfd4f5fe34e1535c08983a1a6803fdbc7a1e86cf13dd0c61de0b51a0aadc  numpy-2.2.2-cp313-cp313-macosx_10_13_x86_64.whl\r\n    d0bbe7dd86dca64854f4b6ce2ea5c60b51e36dfd597300057cf473d3615f2369  numpy-2.2.2-cp313-cp313-macosx_11_0_arm64.whl\r\n    22ea3bb552ade325530e72a0c557cdf2dea8914d3a5e1fecf58fa5dbcc6f43cd  numpy-2.2.2-cp313-cp313-macosx_14_0_arm64.whl\r\n    128c41c085cab8a85dc29e66ed88c05613dccf6bc28b3866cd16050a2f5448be  numpy-2.2.2-cp313-cp313-macosx_14_0_x86_64.whl\r\n    250c16b277e3b809ac20d1f590716597481061b514223c7badb7a0f9993c7f84  numpy-2.2.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e0c8854b09bc4de7b041148d8550d3bd712b5c21ff6a8ed308085f190235d7ff  numpy-2.2.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b6fb9c32a91ec32a689ec6410def76443e3c750e7cfc3fb2206b985ffb2b85f0  numpy-2.2.2-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    57b4012e04cc12b78590a334907e01b3a85efb2107df2b8733ff1ed05fce71de  numpy-2.2.2-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    4dbd80e453bd34bd003b16bd802fac70ad76bd463f81f0c518d1245b1c55e3d9  numpy-2.2.2-cp313-cp313-win32.whl\r\n    5a8c863ceacae696aff37d1fd636121f1a512117652e5dfb86031c8d84836369  numpy-2.2.2-cp313-cp313-win_amd64.whl\r\n    b3482cb7b3325faa5f6bc179649406058253d91ceda359c104dac0ad320e1391  numpy-2.2.2-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    9491100aba630910489c1d0158034e1c9a6546f0b1340f716d522dc103788e39  numpy-2.2.2-cp313-cp313t-macosx_11_0_arm64.whl\r\n    41184c416143defa34cc8eb9d070b0a5ba4f13a0fa96a709e20584638254b317  numpy-2.2.2-cp313-cp313t-macosx_14_0_arm64.whl\r\n    7dca87ca328f5ea7dafc907c5ec100d187911f94825f8700caac0b3f4c384b49  numpy-2.2.2-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    0bc61b307655d1a7f9f4b043628b9f2b721e80839914ede634e3d485913e1fb2  numpy-2.2.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9fad446ad0bc886855ddf5909cbf8cb5d0faa637aaa6277fb4b19ade134ab3c7  numpy-2.2.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    149d1113ac15005652e8d0d3f6fd599360e1a708a4f98e43c9c77834a28238cb  numpy-2.2.2-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    106397dbbb1896f99e044efc90360d098b3335060375c26aa89c0d8a97c5f648  numpy-2.2.2-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    0eec19f8af947a61e968d5429f0bd92fec46d92b0008d0a6685b40d6adf8a4f4  numpy-2.2.2-cp313-cp313t-win32.whl\r\n    97b974d3ba0fb4612b77ed35d7627490e8e3dff56ab41454d9e8b23448940576  numpy-2.2.2-cp313-cp313t-win_amd64.whl\r\n    b0531f0b0e07643eb089df4c509d30d72c9ef40defa53e41363eca8a8cc61495  numpy-2.2.2-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    e9e82dcb3f2ebbc8cb5ce1102d5f1c5ed236bf8a11730fb45ba82e2841ec21df  numpy-2.2.2-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    e0d4142eb40ca6f94539e4db929410f2a46052a0fe7a2c1c59f6179c39938d2a  numpy-2.2.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    356ca982c188acbfa6af0d694284d8cf20e95b1c3d0aefa8929376fea9146f60  numpy-2.2.2-pp310-pypy310_pp73-win_amd64.whl\r\n    ed6906f61834d687738d25988ae117683705636936cc605be0bb208b23df4d8f  numpy-2.2.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/195486066/reactions",
      "total_count": 40,
      "+1": 23,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 4,
      "rocket": 9,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/191987414",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/191987414/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/191987414/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.1",
    "id": 191987414,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84LcX7W",
    "tag_name": "v2.2.1",
    "target_commitish": "main",
    "name": "2.2.1 (DEC 21, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-12-21T18:31:41Z",
    "published_at": "2024-12-21T23:03:47Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/215001691",
        "id": 215001691,
        "node_id": "RA_kwDOAA3dP84M0Kpb",
        "name": "2.2.1-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 1684,
        "download_count": 171,
        "created_at": "2024-12-21T23:03:31Z",
        "updated_at": "2024-12-21T23:03:32Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.1/2.2.1-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/215001453",
        "id": 215001453,
        "node_id": "RA_kwDOAA3dP84M0Klt",
        "name": "numpy-2.2.1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20227662,
        "download_count": 1575,
        "created_at": "2024-12-21T23:01:17Z",
        "updated_at": "2024-12-21T23:02:08Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.1/numpy-2.2.1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/215001368",
        "id": 215001368,
        "node_id": "RA_kwDOAA3dP84M0KkY",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 13880,
        "download_count": 183,
        "created_at": "2024-12-21T23:00:54Z",
        "updated_at": "2024-12-21T23:00:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.1",
    "body": "\r\n# NumPy 2.2.1 Release Notes\r\n\r\nNumPy 2.2.1 is a patch release following 2.2.0. It fixes bugs found\r\nafter the 2.2.0 release and has several maintenance pins to work around\r\nupstream changes.\r\n\r\nThere was some breakage in downstream projects following the 2.2.0\r\nrelease due to updates to NumPy typing. Because of problems due to MyPy\r\ndefects, we recommend using basedpyright for type checking, it can be\r\ninstalled from PyPI. The Pylance extension for Visual Studio Code is\r\nalso based on Pyright. Problems that persist when using basedpyright\r\nshould be reported as issues on the NumPy github site.\r\n\r\nThis release supports Python 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 9 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Charles Harris\r\n-   Joren Hammudoglu\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Peter Hawkins\r\n-   Simon Altrogge\r\n-   Thomas A Caswell\r\n-   Warren Weckesser\r\n-   Yang Wang +\r\n\r\n## Pull requests merged\r\n\r\nA total of 12 pull requests were merged for this release.\r\n\r\n-   [#27935](https://github.com/numpy/numpy/pull/27935): MAINT: Prepare 2.2.x for further development\r\n-   [#27950](https://github.com/numpy/numpy/pull/27950): TEST: cleanups\r\n-   [#27958](https://github.com/numpy/numpy/pull/27958): BUG: fix use-after-free error in npy_hashtable.cpp (#27955)\r\n-   [#27959](https://github.com/numpy/numpy/pull/27959): BLD: add missing include\r\n-   [#27982](https://github.com/numpy/numpy/pull/27982): BUG:fix compile error libatomic link test to meson.build\r\n-   [#27990](https://github.com/numpy/numpy/pull/27990): TYP: Fix falsely rejected value types in `ndarray.__setitem__`\r\n-   [#27991](https://github.com/numpy/numpy/pull/27991): MAINT: Don\\'t wrap `#include <Python.h>` with `extern \"C\"`\r\n-   [#27993](https://github.com/numpy/numpy/pull/27993): BUG: Fix segfault in stringdtype lexsort\r\n-   [#28006](https://github.com/numpy/numpy/pull/28006): MAINT: random: Tweak module code in mtrand.pyx to fix a Cython\\...\r\n-   [#28007](https://github.com/numpy/numpy/pull/28007): BUG: Cython API was missing NPY_UINTP.\r\n-   [#28021](https://github.com/numpy/numpy/pull/28021): CI: pin scipy-doctest to 1.5.1\r\n-   [#28044](https://github.com/numpy/numpy/pull/28044): TYP: allow `None` in operand sequence of nditer\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    d3032be00b974d44aae687fd78a897b4  numpy-2.2.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    49863a39471cf191402da96512e52cb6  numpy-2.2.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    31c912e2fa723b877f2d710c26332927  numpy-2.2.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    95af4f6b620c76f9ccb8c5693c99737d  numpy-2.2.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    c1b113ad487a3bece6d7a70e0cf70f17  numpy-2.2.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e93369ddbb637d9d5a820b2bb79588c4  numpy-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b3de0a2c345541d2c9a322df360ca497  numpy-2.2.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    e3e62b93245d9e37cc03ec3cfaf68118  numpy-2.2.1-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    004063642d3c3792a3f5ff0241a3fa0f  numpy-2.2.1-cp310-cp310-win32.whl\r\n    462b0704ebfd79120edfe6431adc57f4  numpy-2.2.1-cp310-cp310-win_amd64.whl\r\n    a739a2dfbceaa1140e564424b2a57540  numpy-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    91731d46f4ce4b04db512400f4e76ccb  numpy-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    93f50db664a6986c2ebed3ceb588f7cc  numpy-2.2.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    8cc0d82b938d71f45a67c74e07ddc7fd  numpy-2.2.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    fc7b253096fc566bbcbadfdf6b034f1b  numpy-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    b88238965c708578f2c198d1c6e2cf70  numpy-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    df20d649bb023f98e487b229f01e9708  numpy-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    e23d2bfbdb1bd1b2872c9e6e15f64dca  numpy-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    cce4ebb9afc1470db243c2ab4cc6639b  numpy-2.2.1-cp311-cp311-win32.whl\r\n    c96783ee8ad6ce1efee94821929a12f5  numpy-2.2.1-cp311-cp311-win_amd64.whl\r\n    0b2024655573f96a595c7f5072205e84  numpy-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\r\n    22483d8935f5dc128393ad671fde7d8e  numpy-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    61d38533acaa90fb24657f089d177a6c  numpy-2.2.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    ecd4289c703356f5b4fd7e440bf94ce8  numpy-2.2.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    a05208461ea09079ae569414d82a606c  numpy-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4c66f10580fa26d1d17b2bdda96a5fc5  numpy-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    60a01c86b1fc55e4ba8f2b41f690703b  numpy-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    4bcac2b7f8510b0a6582b7d8661257be  numpy-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    7c24a6a3b5c5b2c53c6807bf06c595c5  numpy-2.2.1-cp312-cp312-win32.whl\r\n    dc9f3c1eaade4da63e5f87e878e5805e  numpy-2.2.1-cp312-cp312-win_amd64.whl\r\n    9aacdedcb2cb3d6a45dfb823148e01cf  numpy-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    8a2598b081c8af4ea6f6bbccc8965882  numpy-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\r\n    e58b8db1a97599ed02a630eb86616bb9  numpy-2.2.1-cp313-cp313-macosx_14_0_arm64.whl\r\n    be6871a4edd2cd92b147421b9290e047  numpy-2.2.1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    6d3f141f3a8ecd04e1a1f7c1f89a8ca2  numpy-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    eba9d71e631521bd1d9882f8bfbc01d2  numpy-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    07f7ea0a7f9f6ce0ba5e016dff2a91e8  numpy-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    a015f42afa15be8b87fc64120c245f18  numpy-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    881b9b20e68b317850ad7b6306ac1c51  numpy-2.2.1-cp313-cp313-win32.whl\r\n    35bd751636dcea0ca0534ad9dee8057a  numpy-2.2.1-cp313-cp313-win_amd64.whl\r\n    7057313b668a4a26b5386203ebc040d9  numpy-2.2.1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    02031b405d028714126c26ffc5772f0e  numpy-2.2.1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    73eb35111b027d6771d9a91eb21ad7ef  numpy-2.2.1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    01f9a5eb7ec872d9682bb6a174897b35  numpy-2.2.1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    9bc363d2782931efa2648b42ce358a4c  numpy-2.2.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    b6492f49b50e892a7134baf2dba9f88d  numpy-2.2.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a1c458a98cd9c7ad63f9c301398f4d63  numpy-2.2.1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    38d2bf31247d9005c7a0197aa992cf1d  numpy-2.2.1-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    30e6acf4391728d0a3a5e3494bd4a2c8  numpy-2.2.1-cp313-cp313t-win32.whl\r\n    2100b60306e75288799fca60bd00b84f  numpy-2.2.1-cp313-cp313t-win_amd64.whl\r\n    f975551321147c307bbdff4889061b47  numpy-2.2.1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    cefbc2de3aa5ef518ce652fdaab00c96  numpy-2.2.1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    7e379c1d0a5be8e548e35fa7abe1d2c0  numpy-2.2.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3cba151351656a83e4c84c942cf490e7  numpy-2.2.1-pp310-pypy310_pp73-win_amd64.whl\r\n    57c5757508a50d1daefa4b689e9701cb  numpy-2.2.1.tar.gz\r\n\r\n### SHA256\r\n\r\n    5edb4e4caf751c1518e6a26a83501fda79bff41cc59dac48d70e6d65d4ec4440  numpy-2.2.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    aa3017c40d513ccac9621a2364f939d39e550c542eb2a894b4c8da92b38896ab  numpy-2.2.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    61048b4a49b1c93fe13426e04e04fdf5a03f456616f6e98c7576144677598675  numpy-2.2.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    7671dc19c7019103ca44e8d94917eba8534c76133523ca8406822efdd19c9308  numpy-2.2.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    4250888bcb96617e00bfa28ac24850a83c9f3a16db471eca2ee1f1714df0f957  numpy-2.2.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a7746f235c47abc72b102d3bce9977714c2444bdfaea7888d241b4c4bb6a78bf  numpy-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    059e6a747ae84fce488c3ee397cee7e5f905fd1bda5fb18c66bc41807ff119b2  numpy-2.2.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    f62aa6ee4eb43b024b0e5a01cf65a0bb078ef8c395e8713c6e8a12a697144528  numpy-2.2.1-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    48fd472630715e1c1c89bf1feab55c29098cb403cc184b4859f9c86d4fcb6a95  numpy-2.2.1-cp310-cp310-win32.whl\r\n    b541032178a718c165a49638d28272b771053f628382d5e9d1c93df23ff58dbf  numpy-2.2.1-cp310-cp310-win_amd64.whl\r\n    40f9e544c1c56ba8f1cf7686a8c9b5bb249e665d40d626a23899ba6d5d9e1484  numpy-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    f9b57eaa3b0cd8db52049ed0330747b0364e899e8a606a624813452b8203d5f7  numpy-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    bc8a37ad5b22c08e2dbd27df2b3ef7e5c0864235805b1e718a235bcb200cf1cb  numpy-2.2.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    9036d6365d13b6cbe8f27a0eaf73ddcc070cae584e5ff94bb45e3e9d729feab5  numpy-2.2.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    51faf345324db860b515d3f364eaa93d0e0551a88d6218a7d61286554d190d73  numpy-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    38efc1e56b73cc9b182fe55e56e63b044dd26a72128fd2fbd502f75555d92591  numpy-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    31b89fa67a8042e96715c68e071a1200c4e172f93b0fbe01a14c0ff3ff820fc8  numpy-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    4c86e2a209199ead7ee0af65e1d9992d1dce7e1f63c4b9a616500f93820658d0  numpy-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    b34d87e8a3090ea626003f87f9392b3929a7bbf4104a05b6667348b6bd4bf1cd  numpy-2.2.1-cp311-cp311-win32.whl\r\n    360137f8fb1b753c5cde3ac388597ad680eccbbbb3865ab65efea062c4a1fd16  numpy-2.2.1-cp311-cp311-win_amd64.whl\r\n    694f9e921a0c8f252980e85bce61ebbd07ed2b7d4fa72d0e4246f2f8aa6642ab  numpy-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\r\n    3683a8d166f2692664262fd4900f207791d005fb088d7fdb973cc8d663626faa  numpy-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    780077d95eafc2ccc3ced969db22377b3864e5b9a0ea5eb347cc93b3ea900315  numpy-2.2.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    55ba24ebe208344aa7a00e4482f65742969a039c2acfcb910bc6fcd776eb4355  numpy-2.2.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    9b1d07b53b78bf84a96898c1bc139ad7f10fda7423f5fd158fd0f47ec5e01ac7  numpy-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5062dc1a4e32a10dc2b8b13cedd58988261416e811c1dc4dbdea4f57eea61b0d  numpy-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fce4f615f8ca31b2e61aa0eb5865a21e14f5629515c9151850aa936c02a1ee51  numpy-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    67d4cda6fa6ffa073b08c8372aa5fa767ceb10c9a0587c707505a6d426f4e046  numpy-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    32cb94448be47c500d2c7a95f93e2f21a01f1fd05dd2beea1ccd049bb6001cd2  numpy-2.2.1-cp312-cp312-win32.whl\r\n    ba5511d8f31c033a5fcbda22dd5c813630af98c70b2661f2d2c654ae3cdfcfc8  numpy-2.2.1-cp312-cp312-win_amd64.whl\r\n    f1d09e520217618e76396377c81fba6f290d5f926f50c35f3a5f72b01a0da780  numpy-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    3ecc47cd7f6ea0336042be87d9e7da378e5c7e9b3c8ad0f7c966f714fc10d821  numpy-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\r\n    f419290bc8968a46c4933158c91a0012b7a99bb2e465d5ef5293879742f8797e  numpy-2.2.1-cp313-cp313-macosx_14_0_arm64.whl\r\n    5b6c390bfaef8c45a260554888966618328d30e72173697e5cabe6b285fb2348  numpy-2.2.1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    526fc406ab991a340744aad7e25251dd47a6720a685fa3331e5c59fef5282a59  numpy-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f74e6fdeb9a265624ec3a3918430205dff1df7e95a230779746a6af78bc615af  numpy-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    53c09385ff0b72ba79d8715683c1168c12e0b6e84fb0372e97553d1ea91efe51  numpy-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    f3eac17d9ec51be534685ba877b6ab5edc3ab7ec95c8f163e5d7b39859524716  numpy-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    9ad014faa93dbb52c80d8f4d3dcf855865c876c9660cb9bd7553843dd03a4b1e  numpy-2.2.1-cp313-cp313-win32.whl\r\n    164a829b6aacf79ca47ba4814b130c4020b202522a93d7bff2202bfb33b61c60  numpy-2.2.1-cp313-cp313-win_amd64.whl\r\n    4dfda918a13cc4f81e9118dea249e192ab167a0bb1966272d5503e39234d694e  numpy-2.2.1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    733585f9f4b62e9b3528dd1070ec4f52b8acf64215b60a845fa13ebd73cd0712  numpy-2.2.1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    89b16a18e7bba224ce5114db863e7029803c179979e1af6ad6a6b11f70545008  numpy-2.2.1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    676f4eebf6b2d430300f1f4f4c2461685f8269f94c89698d832cdf9277f30b84  numpy-2.2.1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    27f5cdf9f493b35f7e41e8368e7d7b4bbafaf9660cba53fb21d2cd174ec09631  numpy-2.2.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c1ad395cf254c4fbb5b2132fee391f361a6e8c1adbd28f2cd8e79308a615fe9d  numpy-2.2.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    08ef779aed40dbc52729d6ffe7dd51df85796a702afbf68a4f4e41fafdc8bda5  numpy-2.2.1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    26c9c4382b19fcfbbed3238a14abf7ff223890ea1936b8890f058e7ba35e8d71  numpy-2.2.1-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    93cf4e045bae74c90ca833cba583c14b62cb4ba2cba0abd2b141ab52548247e2  numpy-2.2.1-cp313-cp313t-win32.whl\r\n    bff7d8ec20f5f42607599f9994770fa65d76edca264a87b5e4ea5629bce12268  numpy-2.2.1-cp313-cp313t-win_amd64.whl\r\n    7ba9cc93a91d86365a5d270dee221fdc04fb68d7478e6bf6af650de78a8339e3  numpy-2.2.1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    3d03883435a19794e41f147612a77a8f56d4e52822337844fff3d4040a142964  numpy-2.2.1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    4511d9e6071452b944207c8ce46ad2f897307910b402ea5fa975da32e0102800  numpy-2.2.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5c5cc0cbabe9452038ed984d05ac87910f89370b9242371bd9079cb4af61811e  numpy-2.2.1-pp310-pypy310_pp73-win_amd64.whl\r\n    45681fd7128c8ad1c379f0ca0776a8b0c6583d2f69889ddac01559dfe4390918  numpy-2.2.1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/191987414/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/189596415",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/189596415/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/189596415/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.0",
    "id": 189596415,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84LTQL_",
    "tag_name": "v2.2.0",
    "target_commitish": "main",
    "name": "2.2.0  (Dec 8, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-12-08T03:51:44Z",
    "published_at": "2024-12-08T16:03:03Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/211915623",
        "id": 211915623,
        "node_id": "RA_kwDOAA3dP84MoZNn",
        "name": "2.2.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 37027,
        "download_count": 85,
        "created_at": "2024-12-08T16:00:56Z",
        "updated_at": "2024-12-08T16:00:56Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0/2.2.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/211915699",
        "id": 211915699,
        "node_id": "RA_kwDOAA3dP84MoZOz",
        "name": "numpy-2.2.0.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20225497,
        "download_count": 643,
        "created_at": "2024-12-08T16:01:13Z",
        "updated_at": "2024-12-08T16:01:41Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0/numpy-2.2.0.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/211915467",
        "id": 211915467,
        "node_id": "RA_kwDOAA3dP84MoZLL",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 19531,
        "download_count": 113,
        "created_at": "2024-12-08T15:59:59Z",
        "updated_at": "2024-12-08T15:59:59Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.0",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.0",
    "body": "# NumPy 2.2.0 Release Notes\r\n\r\nThe NumPy 2.2.0 release is quick release that brings us back into sync\r\nwith the usual twice yearly release cycle. There have been an number of\r\nsmall cleanups, as well as work bringing the new StringDType to\r\ncompletion and improving support for free threaded Python. Highlights\r\nare:\r\n\r\n-   New functions `matvec` and `vecmat`, see below.\r\n-   Many improved annotations.\r\n-   Improved support for the new StringDType.\r\n-   Improved support for free threaded Python\r\n-   Fixes for f2py\r\n\r\nThis release supports Python versions 3.10-3.13.\r\n\r\n## Deprecations\r\n\r\n-   `_add_newdoc_ufunc` is now deprecated. `ufunc.__doc__ = newdoc`\r\n    should be used instead.\r\n\r\n    ([gh-27735](https://github.com/numpy/numpy/pull/27735))\r\n\r\n## Expired deprecations\r\n\r\n-   `bool(np.array([]))` and other empty arrays will now raise an error.\r\n    Use `arr.size > 0` instead to check whether an array has no\r\n    elements.\r\n\r\n    ([gh-27160](https://github.com/numpy/numpy/pull/27160))\r\n\r\n## Compatibility notes\r\n\r\n-   `numpy.cov` now properly transposes single-row (2d\r\n    array) design matrices when `rowvar=False`. Previously, single-row\r\n    design matrices would return a scalar in this scenario, which is not\r\n    correct, so this is a behavior change and an array of the\r\n    appropriate shape will now be returned.\r\n\r\n    ([gh-27661](https://github.com/numpy/numpy/pull/27661))\r\n\r\n## New Features\r\n\r\n-   New functions for matrix-vector and vector-matrix products\r\n\r\n    Two new generalized ufuncs were defined:\r\n\r\n    -   `numpy.matvec` - matrix-vector product, treating the\r\n        arguments as stacks of matrices and column vectors,\r\n        respectively.\r\n    -   `numpy.vecmat` - vector-matrix product, treating the\r\n        arguments as stacks of column vectors and matrices,\r\n        respectively. For complex vectors, the conjugate is taken.\r\n\r\n    These add to the existing `numpy.matmul` as well as to\r\n    `numpy.vecdot`, which was added in numpy 2.0.\r\n\r\n    Note that `numpy.matmul` never takes a complex\r\n    conjugate, also not when its left input is a vector, while both\r\n    `numpy.vecdot` and `numpy.vecmat` do take\r\n    the conjugate for complex vectors on the left-hand side (which are\r\n    taken to be the ones that are transposed, following the physics\r\n    convention).\r\n\r\n    ([gh-25675](https://github.com/numpy/numpy/pull/25675))\r\n\r\n-   `np.complexfloating[T, T]` can now also be written as\r\n    `np.complexfloating[T]`\r\n\r\n    ([gh-27420](https://github.com/numpy/numpy/pull/27420))\r\n\r\n-   UFuncs now support `__dict__` attribute and allow overriding\r\n    `__doc__` (either directly or via `ufunc.__dict__[\"__doc__\"]`).\r\n    `__dict__` can be used to also override other properties, such as\r\n    `__module__` or `__qualname__`.\r\n\r\n    ([gh-27735](https://github.com/numpy/numpy/pull/27735))\r\n\r\n-   The \\\"nbit\\\" type parameter of `np.number` and its subtypes now\r\n    defaults to `typing.Any`. This way, type-checkers will infer\r\n    annotations such as `x: np.floating` as `x: np.floating[Any]`, even\r\n    in strict mode.\r\n\r\n    ([gh-27736](https://github.com/numpy/numpy/pull/27736))\r\n\r\n## Improvements\r\n\r\n-   The `datetime64` and `timedelta64` hashes now correctly match the\r\n    Pythons builtin `datetime` and `timedelta` ones. The hashes now\r\n    evaluated equal even for equal values with different time units.\r\n\r\n    ([gh-14622](https://github.com/numpy/numpy/pull/14622))\r\n\r\n-   Fixed a number of issues around promotion for string ufuncs with\r\n    StringDType arguments. Mixing StringDType and the fixed-width DTypes\r\n    using the string ufuncs should now generate much more uniform\r\n    results.\r\n\r\n    ([gh-27636](https://github.com/numpy/numpy/pull/27636))\r\n\r\n-   Improved support for empty `memmap`. Previously an empty\r\n    `memmap` would fail unless a non-zero `offset` was set.\r\n    Now a zero-size `memmap` is supported even if\r\n    `offset=0`. To achieve this, if a `memmap` is mapped to\r\n    an empty file that file is padded with a single byte.\r\n\r\n    ([gh-27723](https://github.com/numpy/numpy/pull/27723))\r\n\r\n-   A regression has been fixed which allows F2PY users to expose variables\r\n    to Python in modules with only assignments, and also fixes situations\r\n    where multiple modules are present within a single source file.\r\n\r\n    ([gh-27695](https://github.com/numpy/numpy/pull/27695))\r\n\r\n## Performance improvements and changes\r\n\r\n-   Improved multithreaded scaling on the free-threaded build when many\r\n    threads simultaneously call the same ufunc operations.\r\n\r\n    ([gh-27896](https://github.com/numpy/numpy/pull/27896))\r\n\r\n-   NumPy now uses fast-on-failure attribute lookups for protocols. This\r\n    can greatly reduce overheads of function calls or array creation\r\n    especially with custom Python objects. The largest improvements will\r\n    be seen on Python 3.12 or newer.\r\n\r\n    ([gh-27119](https://github.com/numpy/numpy/pull/27119))\r\n\r\n-   OpenBLAS on x86_64 and i686 is built with fewer kernels. Based on\r\n    benchmarking, there are 5 clusters of performance around these\r\n    kernels: `PRESCOTT NEHALEM SANDYBRIDGE HASWELL SKYLAKEX`.\r\n\r\n-   OpenBLAS on windows is linked without quadmath, simplifying\r\n    licensing\r\n\r\n-   Due to a regression in OpenBLAS on windows, the performance\r\n    improvements when using multiple threads for OpenBLAS 0.3.26 were\r\n    reverted.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   NumPy now indicates hugepages also for large `np.zeros` allocations\r\n    on linux. Thus should generally improve performance.\r\n\r\n    ([gh-27808](https://github.com/numpy/numpy/pull/27808))\r\n\r\n## Changes\r\n\r\n-   `numpy.fix` now won\\'t perform casting to a floating\r\n    data-type for integer and boolean data-type input arrays.\r\n\r\n    ([gh-26766](https://github.com/numpy/numpy/pull/26766))\r\n\r\n-   The type annotations of `numpy.float64` and `numpy.complex128` now\r\n    reflect that they are also subtypes of the built-in `float` and\r\n    `complex` types, respectively. This update prevents static\r\n    type-checkers from reporting errors in cases such as:\r\n\r\n    ``` python\r\n    x: float = numpy.float64(6.28)  # valid\r\n    z: complex = numpy.complex128(-1j)  # valid\r\n    ```\r\n\r\n    ([gh-27334](https://github.com/numpy/numpy/pull/27334))\r\n\r\n-   The `repr` of arrays large enough to be summarized (i.e., where\r\n    elements are replaced with `...`) now includes the `shape` of the\r\n    array, similar to what already was the case for arrays with zero\r\n    size and non-obvious shape. With this change, the shape is always\r\n    given when it cannot be inferred from the values. Note that while\r\n    written as `shape=...`, this argument cannot actually be passed in\r\n    to the `np.array` constructor. If you encounter problems, e.g., due\r\n    to failing doctests, you can use the print option `legacy=2.1` to\r\n    get the old behaviour.\r\n\r\n    ([gh-27482](https://github.com/numpy/numpy/pull/27482))\r\n\r\n-   Calling `__array_wrap__` directly on NumPy arrays or scalars now\r\n    does the right thing when `return_scalar` is passed (Added in NumPy\r\n    2). It is further safe now to call the scalar `__array_wrap__` on a\r\n    non-scalar result.\r\n\r\n    ([gh-27807](https://github.com/numpy/numpy/pull/27807))\r\n\r\n-   Bump the musllinux CI image and wheels to 1_2 from 1_1. This is because\r\n    1_1 is [end of life](https://github.com/pypa/manylinux/issues/1629).\r\n\r\n    ([gh-27088](https://github.com/numpy/numpy/pull/27088))\r\n\r\n-   The NEP 50 promotion state settings are now removed. They were always\r\n    meant as temporary means for testing. A warning will be given if the\r\n    environment variable is set to anything but `NPY_PROMOTION_STATE=weak`\r\n    while `_set_promotion_state` and `_get_promotion_state` are removed. In\r\n    case code used `_no_nep50_warning`, a `contextlib.nullcontext` could be\r\n    used to replace it when not available.\r\n\r\n    ([gh-27156](https://github.com/numpy/numpy/pull/27156))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    1b58b9e275e80364cd02dafb3f8daf35  numpy-2.2.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    7d3773d9b665b2d7cfec0cc0b760e69e  numpy-2.2.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    8ef666a462d3765ccfd5288f2fdf8e08  numpy-2.2.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    e4f9e3117075ffe53d7993253c774158  numpy-2.2.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    fd60e410e5db402a2d0c0cb4dd23281d  numpy-2.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    64c083cdbd91eb8670cd72b619f3a039  numpy-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c3c75c2299f5163770e2e42f0dee5276  numpy-2.2.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    f6ab05f787221bbaf8fb4a9778af5467  numpy-2.2.0-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    9b04caec124cadf90005ccdb662aad9f  numpy-2.2.0-cp310-cp310-win32.whl\r\n    58934f23b6bc71fb1f984b688c1c6136  numpy-2.2.0-cp310-cp310-win_amd64.whl\r\n    769e53438154e53ba490fb4f816c083e  numpy-2.2.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    aa8060c013c04133b63780025eef4451  numpy-2.2.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    72c10ef28a0ddffe6bf2495954ab82e0  numpy-2.2.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    946b2510c86eb48e374e6987582c9b46  numpy-2.2.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    3f5203ae901ddd78cb298582eda07627  numpy-2.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    fd14624d40100a5eb0181bf393394448  numpy-2.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7c86d51d89dbc5a6860d65641ea131ef  numpy-2.2.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    895c6588c74019b94fb3c740b9e9a0f5  numpy-2.2.0-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    1468ae1cb59a43991b199cfa6f1e5679  numpy-2.2.0-cp311-cp311-win32.whl\r\n    48a3792698a81917320b91a30c0bacf4  numpy-2.2.0-cp311-cp311-win_amd64.whl\r\n    db4377351f167d82adc66b16965d11bd  numpy-2.2.0-cp312-cp312-macosx_10_13_x86_64.whl\r\n    3f3978b5e480ed18d55b1799d9a534ff  numpy-2.2.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    584b4063eb66688b607f7e7bdca58011  numpy-2.2.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    dfacf4ee4842d845f5e12f912ebc2055  numpy-2.2.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    2f10d9bc44635078a6222ed50c9fd0f2  numpy-2.2.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bb69665b4b68b7af82939132972e8261  numpy-2.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    92e9b03039ab737e6799dbd9d057fce2  numpy-2.2.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    a4198f53e3906394012ab88dffff4077  numpy-2.2.0-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    f9cb2f38ae8272ab5eb4b209c59be45f  numpy-2.2.0-cp312-cp312-win32.whl\r\n    6ffe9e1abf69bb8c4ee2e913b1badfde  numpy-2.2.0-cp312-cp312-win_amd64.whl\r\n    330838b6e06481341b35f8d4b6b50bbb  numpy-2.2.0-cp313-cp313-macosx_10_13_x86_64.whl\r\n    4fb63be6d2b92acfba0c2eaedce82e06  numpy-2.2.0-cp313-cp313-macosx_11_0_arm64.whl\r\n    e4086f43f9ce29b5adf939e1b5150f03  numpy-2.2.0-cp313-cp313-macosx_14_0_arm64.whl\r\n    ba74e1f7142954127fb2aef544a6b05e  numpy-2.2.0-cp313-cp313-macosx_14_0_x86_64.whl\r\n    83f51806139d5adc70a2e309d0300ad1  numpy-2.2.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bf9af9abb1e30521b3491f0748ba6199  numpy-2.2.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4d30c57bd7103b36a4bf7a4a9e25e10d  numpy-2.2.0-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    5b12557dde538f99fd87d1682638a212  numpy-2.2.0-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    ee7689d2ecbcbd7c883f69099bd41892  numpy-2.2.0-cp313-cp313-win32.whl\r\n    370a2b14681c6dc4af8596f62d96bb20  numpy-2.2.0-cp313-cp313-win_amd64.whl\r\n    e6fd32fb42fd89c7659e799d65c19557  numpy-2.2.0-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    8e9b0579f2e22f38f57399ab18d6e651  numpy-2.2.0-cp313-cp313t-macosx_11_0_arm64.whl\r\n    71a7ee75208a633a8c36d4ed5b551c33  numpy-2.2.0-cp313-cp313t-macosx_14_0_arm64.whl\r\n    3d76dfe8c2e26dc42b97fdf086ce1fa5  numpy-2.2.0-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    b70ea00b40fb7d1b5d84868d8a073afb  numpy-2.2.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a6bc7090a4e2b1e9deabd0671c691129  numpy-2.2.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9789193a075e8d494851fe7955a23af7  numpy-2.2.0-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    8c199d25bd806f737950428232b0dfa5  numpy-2.2.0-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    1f566cfe4880ca30a591a828634da429  numpy-2.2.0-cp313-cp313t-win32.whl\r\n    eb9ea9f8fba78e7ae5b1415de1ee5c2c  numpy-2.2.0-cp313-cp313t-win_amd64.whl\r\n    9fbe2640c73e4f391019db5af6e854f5  numpy-2.2.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    fc89986fda7ba19c7c50712f1fc1e342  numpy-2.2.0-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    d76c5769a3fdfb9e25b3c1a951bd021f  numpy-2.2.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c138d726fee19ec6ba85eaa2ba9a3390  numpy-2.2.0-pp310-pypy310_pp73-win_amd64.whl\r\n    81a58d5fd26fe983162dc3cea2989b7a  numpy-2.2.0.tar.gz\r\n\r\n### SHA256\r\n\r\n    1e25507d85da11ff5066269d0bd25d06e0a0f2e908415534f3e603d2a78e4ffa  numpy-2.2.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    a62eb442011776e4036af5c8b1a00b706c5bc02dc15eb5344b0c750428c94219  numpy-2.2.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    b606b1aaf802e6468c2608c65ff7ece53eae1a6874b3765f69b8ceb20c5fa78e  numpy-2.2.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    36b2b43146f646642b425dd2027730f99bac962618ec2052932157e213a040e9  numpy-2.2.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    7fe8f3583e0607ad4e43a954e35c1748b553bfe9fdac8635c02058023277d1b3  numpy-2.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    122fd2fcfafdefc889c64ad99c228d5a1f9692c3a83f56c292618a59aa60ae83  numpy-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3f2f5cddeaa4424a0a118924b988746db6ffa8565e5829b1841a8a3bd73eb59a  numpy-2.2.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    7fe4bb0695fe986a9e4deec3b6857003b4cfe5c5e4aac0b95f6a658c14635e31  numpy-2.2.0-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    b30042fe92dbd79f1ba7f6898fada10bdaad1847c44f2dff9a16147e00a93661  numpy-2.2.0-cp310-cp310-win32.whl\r\n    54dc1d6d66f8d37843ed281773c7174f03bf7ad826523f73435deb88ba60d2d4  numpy-2.2.0-cp310-cp310-win_amd64.whl\r\n    9874bc2ff574c40ab7a5cbb7464bf9b045d617e36754a7bc93f933d52bd9ffc6  numpy-2.2.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    0da8495970f6b101ddd0c38ace92edea30e7e12b9a926b57f5fabb1ecc25bb90  numpy-2.2.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    0557eebc699c1c34cccdd8c3778c9294e8196df27d713706895edc6f57d29608  numpy-2.2.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    3579eaeb5e07f3ded59298ce22b65f877a86ba8e9fe701f5576c99bb17c283da  numpy-2.2.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    40deb10198bbaa531509aad0cd2f9fadb26c8b94070831e2208e7df543562b74  numpy-2.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c2aed8fcf8abc3020d6a9ccb31dbc9e7d7819c56a348cc88fd44be269b37427e  numpy-2.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a222d764352c773aa5ebde02dd84dba3279c81c6db2e482d62a3fa54e5ece69b  numpy-2.2.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    4e58666988605e251d42c2818c7d3d8991555381be26399303053b58a5bbf30d  numpy-2.2.0-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    4723a50e1523e1de4fccd1b9a6dcea750c2102461e9a02b2ac55ffeae09a4410  numpy-2.2.0-cp311-cp311-win32.whl\r\n    16757cf28621e43e252c560d25b15f18a2f11da94fea344bf26c599b9cf54b73  numpy-2.2.0-cp311-cp311-win_amd64.whl\r\n    cff210198bb4cae3f3c100444c5eaa573a823f05c253e7188e1362a5555235b3  numpy-2.2.0-cp312-cp312-macosx_10_13_x86_64.whl\r\n    58b92a5828bd4d9aa0952492b7de803135038de47343b2aa3cc23f3b71a3dc4e  numpy-2.2.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    ebe5e59545401fbb1b24da76f006ab19734ae71e703cdb4a8b347e84a0cece67  numpy-2.2.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    e2b8cd48a9942ed3f85b95ca4105c45758438c7ed28fff1e4ce3e57c3b589d8e  numpy-2.2.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    57fcc997ffc0bef234b8875a54d4058afa92b0b0c4223fc1f62f24b3b5e86038  numpy-2.2.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    85ad7d11b309bd132d74397fcf2920933c9d1dc865487128f5c03d580f2c3d03  numpy-2.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cb24cca1968b21355cc6f3da1a20cd1cebd8a023e3c5b09b432444617949085a  numpy-2.2.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    0798b138c291d792f8ea40fe3768610f3c7dd2574389e37c3f26573757c8f7ef  numpy-2.2.0-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    afe8fb968743d40435c3827632fd36c5fbde633b0423da7692e426529b1759b1  numpy-2.2.0-cp312-cp312-win32.whl\r\n    3a4199f519e57d517ebd48cb76b36c82da0360781c6a0353e64c0cac30ecaad3  numpy-2.2.0-cp312-cp312-win_amd64.whl\r\n    f8c8b141ef9699ae777c6278b52c706b653bf15d135d302754f6b2e90eb30367  numpy-2.2.0-cp313-cp313-macosx_10_13_x86_64.whl\r\n    0f0986e917aca18f7a567b812ef7ca9391288e2acb7a4308aa9d265bd724bdae  numpy-2.2.0-cp313-cp313-macosx_11_0_arm64.whl\r\n    1c92113619f7b272838b8d6702a7f8ebe5edea0df48166c47929611d0b4dea69  numpy-2.2.0-cp313-cp313-macosx_14_0_arm64.whl\r\n    5a145e956b374e72ad1dff82779177d4a3c62bc8248f41b80cb5122e68f22d13  numpy-2.2.0-cp313-cp313-macosx_14_0_x86_64.whl\r\n    18142b497d70a34b01642b9feabb70156311b326fdddd875a9981f34a369b671  numpy-2.2.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a7d41d1612c1a82b64697e894b75db6758d4f21c3ec069d841e60ebe54b5b571  numpy-2.2.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a98f6f20465e7618c83252c02041517bd2f7ea29be5378f09667a8f654a5918d  numpy-2.2.0-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    e09d40edfdb4e260cb1567d8ae770ccf3b8b7e9f0d9b5c2a9992696b30ce2742  numpy-2.2.0-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    3905a5fffcc23e597ee4d9fb3fcd209bd658c352657548db7316e810ca80458e  numpy-2.2.0-cp313-cp313-win32.whl\r\n    a184288538e6ad699cbe6b24859206e38ce5fba28f3bcfa51c90d0502c1582b2  numpy-2.2.0-cp313-cp313-win_amd64.whl\r\n    7832f9e8eb00be32f15fdfb9a981d6955ea9adc8574c521d48710171b6c55e95  numpy-2.2.0-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    f0dd071b95bbca244f4cb7f70b77d2ff3aaaba7fa16dc41f58d14854a6204e6c  numpy-2.2.0-cp313-cp313t-macosx_11_0_arm64.whl\r\n    b0b227dcff8cdc3efbce66d4e50891f04d0a387cce282fe1e66199146a6a8fca  numpy-2.2.0-cp313-cp313t-macosx_14_0_arm64.whl\r\n    6ab153263a7c5ccaf6dfe7e53447b74f77789f28ecb278c3b5d49db7ece10d6d  numpy-2.2.0-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    e500aba968a48e9019e42c0c199b7ec0696a97fa69037bea163b55398e390529  numpy-2.2.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    440cfb3db4c5029775803794f8638fbdbf71ec702caf32735f53b008e1eaece3  numpy-2.2.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a55dc7a7f0b6198b07ec0cd445fbb98b05234e8b00c5ac4874a63372ba98d4ab  numpy-2.2.0-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    4bddbaa30d78c86329b26bd6aaaea06b1e47444da99eddac7bf1e2fab717bd72  numpy-2.2.0-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    30bf971c12e4365153afb31fc73f441d4da157153f3400b82db32d04de1e4066  numpy-2.2.0-cp313-cp313t-win32.whl\r\n    d35717333b39d1b6bb8433fa758a55f1081543de527171543a2b710551d40881  numpy-2.2.0-cp313-cp313t-win_amd64.whl\r\n    e12c6c1ce84628c52d6367863773f7c8c8241be554e8b79686e91a43f1733773  numpy-2.2.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    b6207dc8fb3c8cb5668e885cef9ec7f70189bec4e276f0ff70d5aa078d32c88e  numpy-2.2.0-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    a50aeff71d0f97b6450d33940c7181b08be1441c6c193e678211bff11aa725e7  numpy-2.2.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    df12a1f99b99f569a7c2ae59aa2d31724e8d835fc7f33e14f4792e3071d11221  numpy-2.2.0-pp310-pypy310_pp73-win_amd64.whl\r\n    140dd80ff8981a583a60980be1a655068f8adebf7a45a06a6858c873fcdcd4a0  numpy-2.2.0.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/189596415/reactions",
      "total_count": 28,
      "+1": 12,
      "-1": 0,
      "laugh": 1,
      "hooray": 4,
      "confused": 0,
      "heart": 5,
      "rocket": 5,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/187596070",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/187596070/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/187596070/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.2.0rc1",
    "id": 187596070,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84LLn0m",
    "tag_name": "v2.2.0rc1",
    "target_commitish": "main",
    "name": "2.2.0rc1 (Nov 26, 2024)",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-11-26T14:52:58Z",
    "published_at": "2024-11-26T17:43:52Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/209224941",
        "id": 209224941,
        "node_id": "RA_kwDOAA3dP84MeITt",
        "name": "2.2.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 35995,
        "download_count": 7,
        "created_at": "2024-11-26T17:42:10Z",
        "updated_at": "2024-11-26T17:42:11Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0rc1/2.2.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/209224995",
        "id": 209224995,
        "node_id": "RA_kwDOAA3dP84MeIUj",
        "name": "numpy-2.2.0rc1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20214049,
        "download_count": 21,
        "created_at": "2024-11-26T17:42:25Z",
        "updated_at": "2024-11-26T17:42:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0rc1/numpy-2.2.0rc1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/209224906",
        "id": 209224906,
        "node_id": "RA_kwDOAA3dP84MeITK",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 19671,
        "download_count": 6,
        "created_at": "2024-11-26T17:41:48Z",
        "updated_at": "2024-11-26T17:41:48Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.2.0rc1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.2.0rc1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.2.0rc1",
    "body": "# NumPy 2.2.0 Release Notes\r\n\r\nThe NumPy 2.2.0 release is a quick release that brings us back into sync\r\nwith the usual twice yearly release cycle. There have been an number of\r\nsmall cleanups, as well as work bringing the new StringDType to\r\ncompletion and improving support for free threaded Python. Highlights\r\nare:\r\n\r\n-   New functions `matvec` and `vecmat`, see below.\r\n-   Many improved annotations.\r\n-   Improved support for the new StringDType.\r\n-   Improved support for free threaded Python\r\n-   Fixes for f2py\r\n\r\nThis release supports Python versions 3.10-3.13.\r\n\r\n## Deprecations\r\n\r\n-   `_add_newdoc_ufunc` is now deprecated. `ufunc.__doc__ = newdoc`\r\n    should be used instead.\r\n\r\n    ([gh-27735](https://github.com/numpy/numpy/pull/27735))\r\n\r\n## Expired deprecations\r\n\r\n-   `bool(np.array([]))` and other empty arrays will now raise an error.\r\n    Use `arr.size > 0` instead to check whether an array has no\r\n    elements.\r\n\r\n    ([gh-27160](https://github.com/numpy/numpy/pull/27160))\r\n\r\n## Compatibility notes\r\n\r\n-   `numpy.cov` now properly transposes single-row (2d array) design matrices\r\n    when `rowvar=False`. Previously, single-row design matrices would return a\r\n    scalar in this scenario, which is not correct, so this is a behavior change\r\n    and an array of the appropriate shape will now be returned.\r\n\r\n    ([gh-27661](https://github.com/numpy/numpy/pull/27661))\r\n\r\n## New Features\r\n\r\n-   New functions for matrix-vector and vector-matrix products\r\n\r\n    Two new generalized ufuncs were defined:\r\n\r\n    -   `numpy.matvec` - matrix-vector product, treating the\r\n        arguments as stacks of matrices and column vectors,\r\n        respectively.\r\n    -   `numpy.vecmat` - vector-matrix product, treating the\r\n        arguments as stacks of column vectors and matrices,\r\n        respectively. For complex vectors, the conjugate is taken.\r\n\r\n    These add to the existing `numpy.matmul` as well as to\r\n    `numpy.vecdot`, which was added in numpy 2.0.\r\n\r\n    Note that `numpy.matmul` never takes a complex conjugate, also not when its\r\n    left input is a vector, while both `numpy.vecdot` and `numpy.vecmat` do\r\n    take the conjugate for complex vectors on the left-hand side (which are\r\n    taken to be the ones that are transposed, following the physics\r\n    convention).\r\n\r\n    ([gh-25675](https://github.com/numpy/numpy/pull/25675))\r\n\r\n-   `np.complexfloating[T, T]` can now also be written as\r\n    `np.complexfloating[T]`\r\n\r\n    ([gh-27420](https://github.com/numpy/numpy/pull/27420))\r\n\r\n-   UFuncs now support `__dict__` attribute and allow overriding\r\n    `__doc__` (either directly or via `ufunc.__dict__[\"__doc__\"]`).\r\n    `__dict__` can be used to also override other properties, such as\r\n    `__module__` or `__qualname__`.\r\n\r\n    ([gh-27735](https://github.com/numpy/numpy/pull/27735))\r\n\r\n-   The \\\"nbit\\\" type parameter of `np.number` and its subtypes now\r\n    defaults to `typing.Any`. This way, type-checkers will infer\r\n    annotations such as `x: np.floating` as `x: np.floating[Any]`, even\r\n    in strict mode.\r\n\r\n    ([gh-27736](https://github.com/numpy/numpy/pull/27736))\r\n\r\n## Improvements\r\n\r\n-   The `datetime64` and `timedelta64` hashes now correctly match the\r\n    Pythons builtin `datetime` and `timedelta` ones. The hashes now\r\n    evaluated equal even for equal values with different time units.\r\n\r\n    ([gh-14622](https://github.com/numpy/numpy/pull/14622))\r\n\r\n-   Fixed a number of issues around promotion for string ufuncs with\r\n    StringDType arguments. Mixing StringDType and the fixed-width DTypes\r\n    using the string ufuncs should now generate much more uniform\r\n    results.\r\n\r\n    ([gh-27636](https://github.com/numpy/numpy/pull/27636))\r\n\r\n-   Improved support for empty `memmap`. Previously an empty `memmap` would\r\n    fail unless a non-zero `offset` was set.  Now a zero-size `memmap` is\r\n    supported even if `offset=0`. To achieve this, if a `memmap` is mapped to\r\n    an empty file that file is padded with a single byte.\r\n\r\n    ([gh-27723](https://github.com/numpy/numpy/pull/27723))\r\n\r\n-   `f2py` handles multiple modules and exposes variables again.  A regression\r\n    has been fixed which allows F2PY users to expose variables to Python in\r\n    modules with only assignments, and also fixes situations where multiple\r\n    modules are present within a single source file.\r\n\r\n    ([gh-27695](https://github.com/numpy/numpy/pull/27695))\r\n\r\n## Performance improvements and changes\r\n\r\n-   NumPy now uses fast-on-failure attribute lookups for protocols. This\r\n    can greatly reduce overheads of function calls or array creation\r\n    especially with custom Python objects. The largest improvements will\r\n    be seen on Python 3.12 or newer.\r\n\r\n    ([gh-27119](https://github.com/numpy/numpy/pull/27119))\r\n\r\n-   OpenBLAS on x86_64 and i686 is built with fewer kernels. Based on\r\n    benchmarking, there are 5 clusters of performance around these\r\n    kernels: `PRESCOTT NEHALEM SANDYBRIDGE HASWELL SKYLAKEX`.\r\n\r\n-   OpenBLAS on windows is linked without quadmath, simplifying\r\n    licensing\r\n\r\n-   Due to a regression in OpenBLAS on windows, the performance\r\n    improvements when using multiple threads for OpenBLAS 0.3.26 were\r\n    reverted.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   NumPy now indicates hugepages also for large `np.zeros` allocations\r\n    on linux. Thus should generally improve performance.\r\n\r\n    ([gh-27808](https://github.com/numpy/numpy/pull/27808))\r\n\r\n## Changes\r\n\r\n-   `numpy.fix` now won\\'t perform casting to a floating\r\n    data-type for integer and boolean data-type input arrays.\r\n\r\n    ([gh-26766](https://github.com/numpy/numpy/pull/26766))\r\n\r\n-   The type annotations of `numpy.float64` and `numpy.complex128` now reflect\r\n    that they are also subtypes of the built-in `float` and `complex` types,\r\n    respectively. This update prevents static type-checkers from reporting\r\n    errors in cases such as:\r\n\r\n    ``` python\r\n    x: float = numpy.float64(6.28)  # valid\r\n    z: complex = numpy.complex128(-1j)  # valid\r\n    ```\r\n\r\n    ([gh-27334](https://github.com/numpy/numpy/pull/27334))\r\n\r\n-   The `repr` of arrays large enough to be summarized (i.e., where\r\n    elements are replaced with `...`) now includes the `shape` of the\r\n    array, similar to what already was the case for arrays with zero\r\n    size and non-obvious shape. With this change, the shape is always\r\n    given when it cannot be inferred from the values. Note that while\r\n    written as `shape=...`, this argument cannot actually be passed in\r\n    to the `np.array` constructor. If you encounter problems, e.g., due\r\n    to failing doctests, you can use the print option `legacy=2.1` to\r\n    get the old behaviour.\r\n\r\n    ([gh-27482](https://github.com/numpy/numpy/pull/27482))\r\n\r\n-   Calling `__array_wrap__` directly on NumPy arrays or scalars now\r\n    does the right thing when `return_scalar` is passed (Added in NumPy\r\n    2). It is further safe now to call the scalar `__array_wrap__` on a\r\n    non-scalar result.\r\n\r\n    ([gh-27807](https://github.com/numpy/numpy/pull/27807))\r\n\r\n-   Bump the musllinux CI image and wheels to 1_2 from 1_1. This is because\r\n    1_1 is [end of life](https://github.com/pypa/manylinux/issues/1629).\r\n\r\n    ([gh-27088](https://github.com/numpy/numpy/pull/27088))\r\n\r\n-   NEP 50 promotion state option removed\r\n\r\n    The NEP 50 promotion state settings are now removed. They were always meant as\r\n    temporary means for testing. A warning will be given if the environment\r\n    variable is set to anything but `NPY_PROMOTION_STATE=weak` while\r\n    `_set_promotion_state` and `_get_promotion_state` are removed. In case code\r\n    used `_no_nep50_warning`, a `contextlib.nullcontext` could be used to replace\r\n    it when not available.\r\n\r\n    ([gh-27156](https://github.com/numpy/numpy/pull/27156))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    83746dfc1b7774a6677a69c705b83afe  numpy-2.2.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    e69c45cf5ea08fdf2a5527190a7d6549  numpy-2.2.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    d4f8048977139cb229875c201f605369  numpy-2.2.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    8710578b7f4ceef7f73b6d234ad3a82a  numpy-2.2.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    899d1f24d8e5570695a024908d100174  numpy-2.2.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    cb768ee568bed2e4f55d47f43c655bc2  numpy-2.2.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5a40726db153ca1984598323cc59eb9b  numpy-2.2.0rc1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    450e5e05bdc5551c0a4df2a8d7f09925  numpy-2.2.0rc1-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    1c34c86b0abaa5d2a75677044a7fca07  numpy-2.2.0rc1-cp310-cp310-win32.whl\r\n    d679ad13f3892325fd4542931ee74852  numpy-2.2.0rc1-cp310-cp310-win_amd64.whl\r\n    a7a8cf5fa2e3d4bd0131ad48c0215f50  numpy-2.2.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    aa6c629290d8b05b44fbbf805fb39dbe  numpy-2.2.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    a04fe8ac96a5226686ec4190db8511d6  numpy-2.2.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    50aedb2a570a7867e860d98eb816bec4  numpy-2.2.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    cd034c5179ee4cc5669ae36be0deb6ab  numpy-2.2.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    67e3336cdcdcf72cd07978a465e61ebd  numpy-2.2.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    45456522fc3996937f1b1ad8bd7f85b2  numpy-2.2.0rc1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    244dcedc05e96c843853738bc2d37bdb  numpy-2.2.0rc1-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    da24dd620b6509740a1d8aebe4d1306c  numpy-2.2.0rc1-cp311-cp311-win32.whl\r\n    472e5f997dc437b8115ba4ef70a6a266  numpy-2.2.0rc1-cp311-cp311-win_amd64.whl\r\n    6e4ec4f92f8b0768d679419360098a89  numpy-2.2.0rc1-cp312-cp312-macosx_10_13_x86_64.whl\r\n    e15a1756fbe98aa61cb8d98de1d516fc  numpy-2.2.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    6c58bba6f453ad22a651f6f0f6416899  numpy-2.2.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    1a00dd2343f8ec48350b39f72e2c4fa1  numpy-2.2.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    cbe9b6d14530bdfb75ef61f4328f6b9e  numpy-2.2.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a4f14055b4cfafab7035f35e61c6cebb  numpy-2.2.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8c3c80295b92ae839fcb1fc2ab2edf0e  numpy-2.2.0rc1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    1a5aac9894d1959e1cbbcf58e3aa98d1  numpy-2.2.0rc1-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    03577c58315ae4b28c3111be0af0c18a  numpy-2.2.0rc1-cp312-cp312-win32.whl\r\n    c8ed06acb7e1b885081e682a391524d8  numpy-2.2.0rc1-cp312-cp312-win_amd64.whl\r\n    53955ed28cb43f004ccd9f2f1e07b0d4  numpy-2.2.0rc1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    dffe0e20843d5e331358206b535c47f7  numpy-2.2.0rc1-cp313-cp313-macosx_11_0_arm64.whl\r\n    1f22dc1bc3dd3bf645a35a8c58e07ac3  numpy-2.2.0rc1-cp313-cp313-macosx_14_0_arm64.whl\r\n    57bb0a9d61444162269751eb861bef75  numpy-2.2.0rc1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    b38fd53f8f162a833b89e32b52d6f0b5  numpy-2.2.0rc1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f8975385402dfa988efe0121adcb3b83  numpy-2.2.0rc1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8b739c89e3c67210467ac0855623da47  numpy-2.2.0rc1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    902e1f704a187a85f02f71877ed69baf  numpy-2.2.0rc1-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    fc33a9a4c895b2463672d01e75431a8f  numpy-2.2.0rc1-cp313-cp313-win32.whl\r\n    f57eb3377cf0acf5ce165034e5d3d061  numpy-2.2.0rc1-cp313-cp313-win_amd64.whl\r\n    4dff6567391c376daf27f2a144a4142d  numpy-2.2.0rc1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    5195eeac3d355592ec97db04cea7fb43  numpy-2.2.0rc1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    9a5e6fb707b1bc448d6f5eb226757581  numpy-2.2.0rc1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    455ef245987926bb966565de0f68d00f  numpy-2.2.0rc1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    f10882cf7238a03896903b337bce2b05  numpy-2.2.0rc1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8889da4b211ca3edba34518306115a81  numpy-2.2.0rc1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1d29f0a150c39b500b4f0b1e4c625e9b  numpy-2.2.0rc1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    dcf499ab9d350e3414368a106c714256  numpy-2.2.0rc1-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    af48c02a9130ad93e93a55ebf87b5c78  numpy-2.2.0rc1-cp313-cp313t-win32.whl\r\n    290c12deaff6df2e54569563a8f1316a  numpy-2.2.0rc1-cp313-cp313t-win_amd64.whl\r\n    fce62da0e31ae09237cf241c77e54498  numpy-2.2.0rc1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    85acaaaa495d92bc52631a6a0654fd8e  numpy-2.2.0rc1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    cb0482e5c60d706b9b0e9ce8dac9d8a6  numpy-2.2.0rc1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    67390891e461b1983aadab51bc96a78b  numpy-2.2.0rc1-pp310-pypy310_pp73-win_amd64.whl\r\n    4836fdb3009f043287f011b5f6d18208  numpy-2.2.0rc1.tar.gz\r\n\r\n### SHA256\r\n\r\n    acd4f4e9f8c3c04c9a695333d4f475ec2f7a577342b469b411f7ffb2a2888fdc  numpy-2.2.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    8c3cd769a38a363fe21077ad137ee43be639464e5f257821a4cc4d4e2016deea  numpy-2.2.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    72fa15a5f801faf598e6633a6efcb5661085f509f8f6631a0c2c86be06631b78  numpy-2.2.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    44d55304a7397d6e89707af99ea8e980a101a7ff01dd768aaaca16b2312c799b  numpy-2.2.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    8a25595d5951ad46bec827dfee09328b8da041fc3f7f13f63880274ed4ec215e  numpy-2.2.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c335bd4e3395b8209a011b97e5f9876092fb2dc283933d39620a30c1fa82dfab  numpy-2.2.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5ac124ab756ad56a14cdfcdc69cc220befbfb1162fdf3ca4f6eb1a0ace634c56  numpy-2.2.0rc1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    2f7861ff2b862e2536f2256acf5dcf1909e927a5f5e940dfd488eecd178a96b6  numpy-2.2.0rc1-cp310-cp310-musllinux_1_2_x86_64.whl\r\n    e2d4b5a37cf5df43ffdabe0ebea150d5ec0a1796ad7122b3a780f1ab646708c8  numpy-2.2.0rc1-cp310-cp310-win32.whl\r\n    7a3261b3b7d1403a65112dbad568eee7de596cebd0267e27e7daaa9e08dd396a  numpy-2.2.0rc1-cp310-cp310-win_amd64.whl\r\n    61915861927b8e20223b7ccbe40ebf3f52220c0fca43be8423087348c7c00418  numpy-2.2.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    8815f7e6d48dbcf4f14704d79b90c8fee1a68a42886d42e9c8209092e684bd99  numpy-2.2.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    3e80348e6d187573dc2bb6b1d862fc32353db371ae063d25b2199f65adc96ff1  numpy-2.2.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    8fb79fe9bfefb2b43f701090f70413fb535f10bfdfab1981b7c02bd406cc39dd  numpy-2.2.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    042b6a87c48307955049b338981ff9278fa5e7ff3166bbd0d3294f40726d22d5  numpy-2.2.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    94251286fd3cec5552f217030af4cae68f7a1db4f1791765e597b6d9c0a7647a  numpy-2.2.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    ffaa01305af250d733d9940c694d206a0c7d1ea2bd5a01bcb5ff7e48c3e6adac  numpy-2.2.0rc1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    37e6413ed8f66df534631058771ca362939e243da725b5e8537d8c64b664e9b2  numpy-2.2.0rc1-cp311-cp311-musllinux_1_2_x86_64.whl\r\n    7bd86cdae85da5fa8763fbe9acfdb4748e1f10bef5e6524bffdfdd2b21bfd56f  numpy-2.2.0rc1-cp311-cp311-win32.whl\r\n    27f2593fe479dff6f4398563ca2fbf7a416fd8d3a8ad7a35fecbc8ba959000ab  numpy-2.2.0rc1-cp311-cp311-win_amd64.whl\r\n    f721298f4c39b4619b16ba0d341ff5e043d4123dfb796bd84835538bf8abad2b  numpy-2.2.0rc1-cp312-cp312-macosx_10_13_x86_64.whl\r\n    aed72fe759ada921342b4a8ae0893cc7778b07d2f36a78445c70d5ea633c3b25  numpy-2.2.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    c940b9623e29db06b7d0d3c93c560d42bbd73a76f6d27c41d3fd09c0a15f7773  numpy-2.2.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    a783f561c34be98eb25f8cce029b63434d2dfe79702a1d53e9a0fd63c0391dc8  numpy-2.2.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    d0db426baa0d9547d9ac3ea08110e9bba400fab7a036235d9baddf61fd931af8  numpy-2.2.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7925618745531971be54a87e0b85dfe83c69dac9dfd8e46c8aaae520af05792b  numpy-2.2.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5d7a819d4d31bf9998c907105d97a082919b659ff8d44cef2c4f78d0ac16af47  numpy-2.2.0rc1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    0b6cb83ab76b101b87211ab6227e010789adf4a98ee4af07a2480d1d2f61d195  numpy-2.2.0rc1-cp312-cp312-musllinux_1_2_x86_64.whl\r\n    dc86f8502db8dfbe3474a34395e453849d03f0717227f7bda57a235cbbee3575  numpy-2.2.0rc1-cp312-cp312-win32.whl\r\n    a87c1a4d808de26157440153bb9c51d7dc4778c6cd730026406298b75fa5c2df  numpy-2.2.0rc1-cp312-cp312-win_amd64.whl\r\n    c2ef440fc343cc11e8e1591bf77b0f4f21b0684feabdf7b3ec3d768b8cce7a05  numpy-2.2.0rc1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    4332ddb4f40e85f6cdf1594279b35e847a20054c3269f7f2e848b6075cb8f4b3  numpy-2.2.0rc1-cp313-cp313-macosx_11_0_arm64.whl\r\n    dc532dd1c767864614f383cad63edf864f78df3533b6444d94af099583c8fb39  numpy-2.2.0rc1-cp313-cp313-macosx_14_0_arm64.whl\r\n    ecc601c633667ea5eed0c16f987e4c715ee951d0bfa3658f76b690e8dceaddfd  numpy-2.2.0rc1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    38405f26748e7ed4c7b31e5f8c24f385e1daf4954628f6143f5a09047e220ca9  numpy-2.2.0rc1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e515a7d5f5e1b32eb9e761de4f0327aceee27ec07cc655d26424a5e86d3c8d0d  numpy-2.2.0rc1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fd3981aa01428eef69fe5ff2e97e3ca8e65e677ffacc7c447e164ae2aaf521fb  numpy-2.2.0rc1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    61a04f035bd4f87d6c0592eaa06061f9f16bf0e11d546e3b9252ccf83f0917a6  numpy-2.2.0rc1-cp313-cp313-musllinux_1_2_x86_64.whl\r\n    1b18bf71975be1728042ba232d7406ae2f6fed8431684851fda4b909ab6e20ce  numpy-2.2.0rc1-cp313-cp313-win32.whl\r\n    5776d7b395dcf180bc807a9374aca05b6569e5e5e4bdcbf112aa452a471405e0  numpy-2.2.0rc1-cp313-cp313-win_amd64.whl\r\n    3f0d900e60e783fa9965729fa2a17021add82d769bf298cdb407abcbbf316e28  numpy-2.2.0rc1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    def9537da892cd995f81646df94021fbf0dce690d518daaabc0902bc8ce42cd9  numpy-2.2.0rc1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    f2b59a4e85367107dced5b3c7374a5e828ddb7c5c4e1d98176d09b177e23edd0  numpy-2.2.0rc1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    9c3bdfe13209bf4f81aea5f8dd2843ab17c9a9273133d491c220636bfd51432d  numpy-2.2.0rc1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    b0b742731c2721445a03e469f286c9ddf15dd80e52622ea4487ddc10a7869fe9  numpy-2.2.0rc1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8c43d7beaab6509f1467175cc7cfdcc048581b91ba55e149cc39af758209b166  numpy-2.2.0rc1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    598b88170e0f361d2f6d8cc9ec18d798af07a2e9b30b95ba2d76415b7c3cc433  numpy-2.2.0rc1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    ddb4720b057048d7ac3ce973256e89e1e7481f71b5a214a0a3be936aeda014e7  numpy-2.2.0rc1-cp313-cp313t-musllinux_1_2_x86_64.whl\r\n    64b994b9054ab051d137fff61bb6244aa1e7a80defa42c507355b562cc44a561  numpy-2.2.0rc1-cp313-cp313t-win32.whl\r\n    67d2f5c34f231e7ed59189c20f8b7472b77cff85277bcd80537417eee61977db  numpy-2.2.0rc1-cp313-cp313t-win_amd64.whl\r\n    d4bbc95647ce01252827d4c6ea5de42460ea66d75831333f2b92f088b60e1b43  numpy-2.2.0rc1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    d8d13dd7b6f1f14c43ff68e81c8edcb035f572d87507b5f629e78a7d8c61e9f4  numpy-2.2.0rc1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    d12bf735dc4e7dfa8c66b2fd47547bcf91c9996585324959e2c5a2f5360e1c8f  numpy-2.2.0rc1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8d7de626a5e554b074890258e63d0b06eff2af48da034fe5ffef8743578b1e0b  numpy-2.2.0rc1-pp310-pypy310_pp73-win_amd64.whl\r\n    d3c343e027351fbb3f7ddb0024857cd10837d6a77b40b33e39ff6706ed7ceec1  numpy-2.2.0rc1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/187596070/reactions",
      "total_count": 30,
      "+1": 15,
      "-1": 0,
      "laugh": 1,
      "hooray": 3,
      "confused": 0,
      "heart": 5,
      "rocket": 5,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/183220507",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/183220507/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/183220507/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.1.3",
    "id": 183220507,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84K67kb",
    "tag_name": "v2.1.3",
    "target_commitish": "main",
    "name": "2.1.3 (Nov 2, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-11-02T15:24:12Z",
    "published_at": "2024-11-02T18:02:45Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/203628241",
        "id": 203628241,
        "node_id": "RA_kwDOAA3dP84MIx7R",
        "name": "2.1.3-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2758,
        "download_count": 182,
        "created_at": "2024-11-02T17:57:08Z",
        "updated_at": "2024-11-02T17:57:08Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.3/2.1.3-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/203628260",
        "id": 203628260,
        "node_id": "RA_kwDOAA3dP84MIx7k",
        "name": "numpy-2.1.3.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 20166090,
        "download_count": 2061,
        "created_at": "2024-11-02T17:57:26Z",
        "updated_at": "2024-11-02T17:57:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.3/numpy-2.1.3.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/203628615",
        "id": 203628615,
        "node_id": "RA_kwDOAA3dP84MIyBH",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 15112,
        "download_count": 235,
        "created_at": "2024-11-02T18:02:08Z",
        "updated_at": "2024-11-02T18:02:09Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.3/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.1.3",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.1.3",
    "body": "# NumPy 2.1.3 Release Notes\r\n\r\nNumPy 2.1.3 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 2.1.2 release. This release also adds support\r\nfor free threaded Python 3.13 on Windows.\r\n\r\nThe Python versions supported by this release are 3.10-3.13.\r\n\r\n## Improvements\r\n\r\n-   Fixed a number of issues around promotion for string ufuncs with\r\n    StringDType arguments. Mixing StringDType and the fixed-width DTypes\r\n    using the string ufuncs should now generate much more uniform\r\n    results.\r\n\r\n    ([gh-27636](https://github.com/numpy/numpy/pull/27636))\r\n\r\n## Changes\r\n\r\n-   `numpy.fix` now won\\'t perform casting to a floating\r\n    data-type for integer and boolean data-type input arrays.\r\n\r\n    ([gh-26766](https://github.com/numpy/numpy/pull/26766))\r\n\r\n## Contributors\r\n\r\nA total of 15 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Abhishek Kumar +\r\n-   Austin +\r\n-   Benjamin A. Beasley +\r\n-   Charles Harris\r\n-   Christian Lorentzen\r\n-   Marcel Telka +\r\n-   Matti Picus\r\n-   Michael Davidsaver +\r\n-   Nathan Goldbaum\r\n-   Peter Hawkins\r\n-   Raghuveer Devulapalli\r\n-   Ralf Gommers\r\n-   Sebastian Berg\r\n-   dependabot\\[bot\\]\r\n-   kp2pml30 +\r\n\r\n## Pull requests merged\r\n\r\nA total of 21 pull requests were merged for this release.\r\n\r\n-   [#27512](https://github.com/numpy/numpy/pull/27512): MAINT: prepare 2.1.x for further development\r\n-   [#27537](https://github.com/numpy/numpy/pull/27537): MAINT: Bump actions/cache from 4.0.2 to 4.1.1\r\n-   [#27538](https://github.com/numpy/numpy/pull/27538): MAINT: Bump pypa/cibuildwheel from 2.21.2 to 2.21.3\r\n-   [#27539](https://github.com/numpy/numpy/pull/27539): MAINT: MSVC does not support #warning directive\r\n-   [#27543](https://github.com/numpy/numpy/pull/27543): BUG: Fix user dtype can-cast with python scalar during promotion\r\n-   [#27561](https://github.com/numpy/numpy/pull/27561): DEV: bump `python` to 3.12 in environment.yml\r\n-   [#27562](https://github.com/numpy/numpy/pull/27562): BLD: update vendored Meson to 1.5.2\r\n-   [#27563](https://github.com/numpy/numpy/pull/27563): BUG: weighted quantile for some zero weights (#27549)\r\n-   [#27565](https://github.com/numpy/numpy/pull/27565): MAINT: Use miniforge for macos conda test.\r\n-   [#27566](https://github.com/numpy/numpy/pull/27566): BUILD: satisfy gcc-13 pendantic errors\r\n-   [#27569](https://github.com/numpy/numpy/pull/27569): BUG: handle possible error for PyTraceMallocTrack\r\n-   [#27570](https://github.com/numpy/numpy/pull/27570): BLD: start building Windows free-threaded wheels \\[wheel build\\]\r\n-   [#27571](https://github.com/numpy/numpy/pull/27571): BUILD: vendor tempita from Cython\r\n-   [#27574](https://github.com/numpy/numpy/pull/27574): BUG: Fix warning \\\"differs in levels of indirection\\\" in npy_atomic.h\\...\r\n-   [#27592](https://github.com/numpy/numpy/pull/27592): MAINT: Update Highway to latest\r\n-   [#27593](https://github.com/numpy/numpy/pull/27593): BUG: Adjust numpy.i for SWIG 4.3 compatibility\r\n-   [#27616](https://github.com/numpy/numpy/pull/27616): BUG: Fix Linux QEMU CI workflow\r\n-   [#27668](https://github.com/numpy/numpy/pull/27668): BLD: Do not set \\_\\_STDC_VERSION\\_\\_ to zero during build\r\n-   [#27669](https://github.com/numpy/numpy/pull/27669): ENH: fix wasm32 runtime type error in numpy.\\_core\r\n-   [#27672](https://github.com/numpy/numpy/pull/27672): BUG: Fix a reference count leak in npy_find_descr_for_scalar.\r\n-   [#27673](https://github.com/numpy/numpy/pull/27673): BUG: fixes for StringDType/unicode promoters\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    3f2f22827dd321ae86b5ab4fa888d0db  numpy-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    13da2761d1abe71731a2806537369115  numpy-2.1.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    5aef4a78b69cd90d0f6fff8f88817991  numpy-2.1.3-cp310-cp310-macosx_14_0_arm64.whl\r\n    12da7f09cd5707634878f85845c9de10  numpy-2.1.3-cp310-cp310-macosx_14_0_x86_64.whl\r\n    5b999693362815b56855533469aea0ca  numpy-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8c49f457127bfb4f167c91583e5167af  numpy-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f31c0e80b18afc0c04cada401cbe0358  numpy-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    2c0709812e27bcaf74d75ac8ed45614b  numpy-2.1.3-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    a65b28800e78942b9e60e03e96cfd0c0  numpy-2.1.3-cp310-cp310-win32.whl\r\n    d8358545732fe4ee1ecf407b06567d81  numpy-2.1.3-cp310-cp310-win_amd64.whl\r\n    34942f9a1391532e2c3168043c0021d5  numpy-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    0d69ec06e303b5112788db68a8fdde1b  numpy-2.1.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    da1988c8d3a9db5947a2bd51290b8b95  numpy-2.1.3-cp311-cp311-macosx_14_0_arm64.whl\r\n    b5eba73c2abaf5a81535f4b1034fe8d2  numpy-2.1.3-cp311-cp311-macosx_14_0_x86_64.whl\r\n    63cc090209718aa1d0f0fbd3fd03bc0b  numpy-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    55f14ca7b55554d4a043369ae5f1837f  numpy-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4e58e0645d81ff84c0fb75311d2a97d6  numpy-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    30235088a5f86d1f343bfec458f6292d  numpy-2.1.3-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    c80a03952b2f4950f1eb9d1656413fec  numpy-2.1.3-cp311-cp311-win32.whl\r\n    d8c1a5a441b89591af8f09dfa0b2d4d5  numpy-2.1.3-cp311-cp311-win_amd64.whl\r\n    2cebcea71e71e8b09a25179b240ee240  numpy-2.1.3-cp312-cp312-macosx_10_13_x86_64.whl\r\n    faf5df4bd35ca362795cda193da49591  numpy-2.1.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    573f195910fc3b3e9ac5379816280f89  numpy-2.1.3-cp312-cp312-macosx_14_0_arm64.whl\r\n    900548b2acb82ed0e306943fb68de802  numpy-2.1.3-cp312-cp312-macosx_14_0_x86_64.whl\r\n    81cded28bb87c4987b1d975fe768c3a1  numpy-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2b83cb346bca97475fa5e39e704c45f1  numpy-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    06d8593cb7a2aae157e028c3d4cb3c96  numpy-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    eea8b148a6a2fee37b87291043e00bda  numpy-2.1.3-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    d407b7c48457789914f28004f41d6ea2  numpy-2.1.3-cp312-cp312-win32.whl\r\n    117574ee1a645e63a6d69e20c8673665  numpy-2.1.3-cp312-cp312-win_amd64.whl\r\n    0c9ffd1f1f1e96186f30a578b85da653  numpy-2.1.3-cp313-cp313-macosx_10_13_x86_64.whl\r\n    cd430b2caf09d21680616aef5d4a439d  numpy-2.1.3-cp313-cp313-macosx_11_0_arm64.whl\r\n    b431935148221b79bda9490b1d069e3c  numpy-2.1.3-cp313-cp313-macosx_14_0_arm64.whl\r\n    b3ff577c78097b187bd58f20b6e88642  numpy-2.1.3-cp313-cp313-macosx_14_0_x86_64.whl\r\n    8186f86f8d94a5505e6dcebe6c056ab7  numpy-2.1.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2c5b2381a4a4e3d9865ccb346d44a7ed  numpy-2.1.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    85786d12388d60b904c02eb12df55b37  numpy-2.1.3-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    da68282c0418a22730643906e5dd58a1  numpy-2.1.3-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    fe47e181a70d3e865e5d6a27e5fa71cd  numpy-2.1.3-cp313-cp313-win32.whl\r\n    8b7f290784c95cf620e0ac1af5470f1d  numpy-2.1.3-cp313-cp313-win_amd64.whl\r\n    4f0c3f8c81cb6bd43a9f1f7bef7db82d  numpy-2.1.3-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    133905fd003c9504fc5bb9ce71e4103b  numpy-2.1.3-cp313-cp313t-macosx_11_0_arm64.whl\r\n    12fe4f265dbda251309f109cbcd46f07  numpy-2.1.3-cp313-cp313t-macosx_14_0_arm64.whl\r\n    b60e418506b969e6df2c0d600bf3c6d4  numpy-2.1.3-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    c2b7160b748f4c1c483a7954e5024250  numpy-2.1.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8097ddb45c8c821085c19d940bcbe6de  numpy-2.1.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    209f55dc1ed6da23a5ea3e11ca962308  numpy-2.1.3-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    06a1792849b601c7bdd38e39bc5cb5f1  numpy-2.1.3-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    86630bf207e8cbe6933232cb2a47a6c0  numpy-2.1.3-cp313-cp313t-win32.whl\r\n    6af9109b82c0acdcf8b0e81dc0e4c517  numpy-2.1.3-cp313-cp313t-win_amd64.whl\r\n    c7e821e086346afc0078acb237f30431  numpy-2.1.3-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    5b938b2da78b1c84044df8cdb2e8e63a  numpy-2.1.3-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    ef251f3b6aa022b1c2fac14889d6d9d3  numpy-2.1.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    356c7bb6067ae0dccc4a54efc1879e74  numpy-2.1.3-pp310-pypy310_pp73-win_amd64.whl\r\n    11096358375945114577a0c82b2c6038  numpy-2.1.3.tar.gz\r\n\r\n### SHA256\r\n\r\n    c894b4305373b9c5576d7a12b473702afdf48ce5369c074ba304cc5ad8730dff  numpy-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    b47fbb433d3260adcd51eb54f92a2ffbc90a4595f8970ee00e064c644ac788f5  numpy-2.1.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    825656d0743699c529c5943554d223c021ff0494ff1442152ce887ef4f7561a1  numpy-2.1.3-cp310-cp310-macosx_14_0_arm64.whl\r\n    6a4825252fcc430a182ac4dee5a505053d262c807f8a924603d411f6718b88fd  numpy-2.1.3-cp310-cp310-macosx_14_0_x86_64.whl\r\n    e711e02f49e176a01d0349d82cb5f05ba4db7d5e7e0defd026328e5cfb3226d3  numpy-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    78574ac2d1a4a02421f25da9559850d59457bac82f2b8d7a44fe83a64f770098  numpy-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c7662f0e3673fe4e832fe07b65c50342ea27d989f92c80355658c7f888fcc83c  numpy-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    fa2d1337dc61c8dc417fbccf20f6d1e139896a30721b7f1e832b2bb6ef4eb6c4  numpy-2.1.3-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    72dcc4a35a8515d83e76b58fdf8113a5c969ccd505c8a946759b24e3182d1f23  numpy-2.1.3-cp310-cp310-win32.whl\r\n    ecc76a9ba2911d8d37ac01de72834d8849e55473457558e12995f4cd53e778e0  numpy-2.1.3-cp310-cp310-win_amd64.whl\r\n    4d1167c53b93f1f5d8a139a742b3c6f4d429b54e74e6b57d0eff40045187b15d  numpy-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    c80e4a09b3d95b4e1cac08643f1152fa71a0a821a2d4277334c88d54b2219a41  numpy-2.1.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    576a1c1d25e9e02ed7fa5477f30a127fe56debd53b8d2c89d5578f9857d03ca9  numpy-2.1.3-cp311-cp311-macosx_14_0_arm64.whl\r\n    973faafebaae4c0aaa1a1ca1ce02434554d67e628b8d805e61f874b84e136b09  numpy-2.1.3-cp311-cp311-macosx_14_0_x86_64.whl\r\n    762479be47a4863e261a840e8e01608d124ee1361e48b96916f38b119cfda04a  numpy-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bc6f24b3d1ecc1eebfbf5d6051faa49af40b03be1aaa781ebdadcbc090b4539b  numpy-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    17ee83a1f4fef3c94d16dc1802b998668b5419362c8a4f4e8a491de1b41cc3ee  numpy-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    15cb89f39fa6d0bdfb600ea24b250e5f1a3df23f901f51c8debaa6a5d122b2f0  numpy-2.1.3-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    d9beb777a78c331580705326d2367488d5bc473b49a9bc3036c154832520aca9  numpy-2.1.3-cp311-cp311-win32.whl\r\n    d89dd2b6da69c4fff5e39c28a382199ddedc3a5be5390115608345dec660b9e2  numpy-2.1.3-cp311-cp311-win_amd64.whl\r\n    f55ba01150f52b1027829b50d70ef1dafd9821ea82905b63936668403c3b471e  numpy-2.1.3-cp312-cp312-macosx_10_13_x86_64.whl\r\n    13138eadd4f4da03074851a698ffa7e405f41a0845a6b1ad135b81596e4e9958  numpy-2.1.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    a6b46587b14b888e95e4a24d7b13ae91fa22386c199ee7b418f449032b2fa3b8  numpy-2.1.3-cp312-cp312-macosx_14_0_arm64.whl\r\n    0fa14563cc46422e99daef53d725d0c326e99e468a9320a240affffe87852564  numpy-2.1.3-cp312-cp312-macosx_14_0_x86_64.whl\r\n    8637dcd2caa676e475503d1f8fdb327bc495554e10838019651b76d17b98e512  numpy-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2312b2aa89e1f43ecea6da6ea9a810d06aae08321609d8dc0d0eda6d946a541b  numpy-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a38c19106902bb19351b83802531fea19dee18e5b37b36454f27f11ff956f7fc  numpy-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    02135ade8b8a84011cbb67dc44e07c58f28575cf9ecf8ab304e51c05528c19f0  numpy-2.1.3-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    e6988e90fcf617da2b5c78902fe8e668361b43b4fe26dbf2d7b0f8034d4cafb9  numpy-2.1.3-cp312-cp312-win32.whl\r\n    0d30c543f02e84e92c4b1f415b7c6b5326cbe45ee7882b6b77db7195fb971e3a  numpy-2.1.3-cp312-cp312-win_amd64.whl\r\n    96fe52fcdb9345b7cd82ecd34547fca4321f7656d500eca497eb7ea5a926692f  numpy-2.1.3-cp313-cp313-macosx_10_13_x86_64.whl\r\n    f653490b33e9c3a4c1c01d41bc2aef08f9475af51146e4a7710c450cf9761598  numpy-2.1.3-cp313-cp313-macosx_11_0_arm64.whl\r\n    dc258a761a16daa791081d026f0ed4399b582712e6fc887a95af09df10c5ca57  numpy-2.1.3-cp313-cp313-macosx_14_0_arm64.whl\r\n    016d0f6f5e77b0f0d45d77387ffa4bb89816b57c835580c3ce8e099ef830befe  numpy-2.1.3-cp313-cp313-macosx_14_0_x86_64.whl\r\n    c181ba05ce8299c7aa3125c27b9c2167bca4a4445b7ce73d5febc411ca692e43  numpy-2.1.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5641516794ca9e5f8a4d17bb45446998c6554704d888f86df9b200e66bdcce56  numpy-2.1.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    ea4dedd6e394a9c180b33c2c872b92f7ce0f8e7ad93e9585312b0c5a04777a4a  numpy-2.1.3-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    b0df3635b9c8ef48bd3be5f862cf71b0a4716fa0e702155c45067c6b711ddcef  numpy-2.1.3-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    50ca6aba6e163363f132b5c101ba078b8cbd3fa92c7865fd7d4d62d9779ac29f  numpy-2.1.3-cp313-cp313-win32.whl\r\n    747641635d3d44bcb380d950679462fae44f54b131be347d5ec2bce47d3df9ed  numpy-2.1.3-cp313-cp313-win_amd64.whl\r\n    996bb9399059c5b82f76b53ff8bb686069c05acc94656bb259b1d63d04a9506f  numpy-2.1.3-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    45966d859916ad02b779706bb43b954281db43e185015df6eb3323120188f9e4  numpy-2.1.3-cp313-cp313t-macosx_11_0_arm64.whl\r\n    baed7e8d7481bfe0874b566850cb0b85243e982388b7b23348c6db2ee2b2ae8e  numpy-2.1.3-cp313-cp313t-macosx_14_0_arm64.whl\r\n    a9f7f672a3388133335589cfca93ed468509cb7b93ba3105fce780d04a6576a0  numpy-2.1.3-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    d7aac50327da5d208db2eec22eb11e491e3fe13d22653dce51b0f4109101b408  numpy-2.1.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4394bc0dbd074b7f9b52024832d16e019decebf86caf909d94f6b3f77a8ee3b6  numpy-2.1.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    50d18c4358a0a8a53f12a8ba9d772ab2d460321e6a93d6064fc22443d189853f  numpy-2.1.3-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    14e253bd43fc6b37af4921b10f6add6925878a42a0c5fe83daee390bca80bc17  numpy-2.1.3-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    08788d27a5fd867a663f6fc753fd7c3ad7e92747efc73c53bca2f19f8bc06f48  numpy-2.1.3-cp313-cp313t-win32.whl\r\n    2564fbdf2b99b3f815f2107c1bbc93e2de8ee655a69c261363a1172a79a257d4  numpy-2.1.3-cp313-cp313t-win_amd64.whl\r\n    4f2015dfe437dfebbfce7c85c7b53d81ba49e71ba7eadbf1df40c915af75979f  numpy-2.1.3-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    3522b0dfe983a575e6a9ab3a4a4dfe156c3e428468ff08ce582b9bb6bd1d71d4  numpy-2.1.3-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    c006b607a865b07cd981ccb218a04fc86b600411d83d6fc261357f1c0966755d  numpy-2.1.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e14e26956e6f1696070788252dcdff11b4aca4c3e8bd166e0df1bb8f315a67cb  numpy-2.1.3-pp310-pypy310_pp73-win_amd64.whl\r\n    aa08e04e08aaf974d4458def539dece0d28146d866a39da5639596f4921fd761  numpy-2.1.3.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/183220507/reactions",
      "total_count": 6,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 1,
      "confused": 0,
      "heart": 1,
      "rocket": 1,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/178534794",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/178534794/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/178534794/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.1.2",
    "id": 178534794,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84KpDmK",
    "tag_name": "v2.1.2",
    "target_commitish": "main",
    "name": "2.1.2 (Oct 5, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-10-05T14:56:32Z",
    "published_at": "2024-10-05T18:52:28Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/197089683",
        "id": 197089683,
        "node_id": "RA_kwDOAA3dP84Lv1mT",
        "name": "2.1.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 1963,
        "download_count": 195,
        "created_at": "2024-10-05T18:51:38Z",
        "updated_at": "2024-10-05T18:51:38Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.2/2.1.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/197089640",
        "id": 197089640,
        "node_id": "RA_kwDOAA3dP84Lv1lo",
        "name": "numpy-2.1.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18878063,
        "download_count": 1300,
        "created_at": "2024-10-05T18:50:32Z",
        "updated_at": "2024-10-05T18:50:59Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.2/numpy-2.1.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/197089693",
        "id": 197089693,
        "node_id": "RA_kwDOAA3dP84Lv1md",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 13404,
        "download_count": 235,
        "created_at": "2024-10-05T18:51:53Z",
        "updated_at": "2024-10-05T18:51:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.1.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.1.2",
    "body": "# NumPy 2.1.2 Release Notes\r\n\r\nNumPy 2.1.2 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 2.1.1 release.\r\n\r\nThe Python versions supported by this release are 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 11 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Charles Harris\r\n-   Chris Sidebottom\r\n-   Ishan Koradia +\r\n-   Jo\u00e3o Eiras +\r\n-   Katie Rust +\r\n-   Marten van Kerkwijk\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Peter Hawkins\r\n-   Pieter Eendebak\r\n-   Slava Gorloff +\r\n\r\n## Pull requests merged\r\n\r\nA total of 14 pull requests were merged for this release.\r\n\r\n-   [#27333](https://github.com/numpy/numpy/pull/27333): MAINT: prepare 2.1.x for further development\r\n-   [#27400](https://github.com/numpy/numpy/pull/27400): BUG: apply critical sections around populating the dispatch cache\r\n-   [#27406](https://github.com/numpy/numpy/pull/27406): BUG: Stub out get_build_msvc_version if distutils.msvccompiler\\...\r\n-   [#27416](https://github.com/numpy/numpy/pull/27416): BUILD: fix missing include for std::ptrdiff_t for C++23 language\\...\r\n-   [#27433](https://github.com/numpy/numpy/pull/27433): BLD: pin setuptools to avoid breaking numpy.distutils\r\n-   [#27437](https://github.com/numpy/numpy/pull/27437): BUG: Allow unsigned shift argument for np.roll\r\n-   [#27439](https://github.com/numpy/numpy/pull/27439): BUG: Disable SVE VQSort\r\n-   [#27471](https://github.com/numpy/numpy/pull/27471): BUG: rfftn axis bug\r\n-   [#27479](https://github.com/numpy/numpy/pull/27479): BUG: Fix extra decref of PyArray_UInt8DType.\r\n-   [#27480](https://github.com/numpy/numpy/pull/27480): CI: use PyPI not scientific-python-nightly-wheels for CI doc\\...\r\n-   [#27481](https://github.com/numpy/numpy/pull/27481): MAINT: Check for SVE support on demand\r\n-   [#27484](https://github.com/numpy/numpy/pull/27484): BUG: initialize the promotion state to be weak\r\n-   [#27501](https://github.com/numpy/numpy/pull/27501): MAINT: Bump pypa/cibuildwheel from 2.20.0 to 2.21.2\r\n-   [#27506](https://github.com/numpy/numpy/pull/27506): BUG: avoid segfault on bad arguments in ndarray.\\_\\_array_function\\_\\_\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    4aae28b7919b126485c1aaccee37a6ba  numpy-2.1.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    172614423a82ef73d8752ad8a59cbafc  numpy-2.1.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    5ee5e7a8a892cbe96ee228ca5fe7546b  numpy-2.1.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    9ce6f9222dfabd32e66b883f1fe015aa  numpy-2.1.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    291da8bfeb7c9a3491ec35ecb2596335  numpy-2.1.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9317d9b049f09c0193f074a6458cf79b  numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1f2c121533715d8b099d6498e4498f81  numpy-2.1.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    2834df46e2cb2e81cbe4fd1ce9b96b4b  numpy-2.1.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    cbc3ae2c176324fe2a9c04ec0aff181f  numpy-2.1.2-cp310-cp310-win32.whl\r\n    e4d74f9d188dc3fe7a65adf8c01e98cc  numpy-2.1.2-cp310-cp310-win_amd64.whl\r\n    cbcece9c21ed1daf60f3729a37b32266  numpy-2.1.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    0e62474993ff6faca9c467f68cc16ceb  numpy-2.1.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    8747e85e09b2000a0af5a8226740dc92  numpy-2.1.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    34e7f3591ce81926518a36c92038a056  numpy-2.1.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    0ec3e617161b42d643aaa4b8d3e477f5  numpy-2.1.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e2a6a419b4672bfb4f3f6a98c0e575bb  numpy-2.1.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8c14b4d03fc8672e43eddd3ede89be09  numpy-2.1.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    dc183e12b24317bf210fb093da598d29  numpy-2.1.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    4918f2c32ca3be20c7c5d8551e649757  numpy-2.1.2-cp311-cp311-win32.whl\r\n    a8991919b6fae3c7a77c260f60a5e2e2  numpy-2.1.2-cp311-cp311-win_amd64.whl\r\n    879f307d16f9222c49508be5ea6491fc  numpy-2.1.2-cp312-cp312-macosx_10_13_x86_64.whl\r\n    fe9dfac7bee0cff178737e1706aee61a  numpy-2.1.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    1f0c671db3294f4df8bffedc41a2e37f  numpy-2.1.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    d131c4bd6ba29b05a5b7fa74e87a0506  numpy-2.1.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    8f9cca33590be334d44cc026a3716966  numpy-2.1.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3692a9290dd430e56e1b15387c25b7af  numpy-2.1.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3549439284dbb1a05785b535c3de60d9  numpy-2.1.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    b9934410f20505e5c4b70974cd8fdc26  numpy-2.1.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    96759e3380e4893b9b88d5d498d856b2  numpy-2.1.2-cp312-cp312-win32.whl\r\n    f94c7405ed72a136e374ab82400fefdc  numpy-2.1.2-cp312-cp312-win_amd64.whl\r\n    2ea775cb4da02f39edf3089af60bddd5  numpy-2.1.2-cp313-cp313-macosx_10_13_x86_64.whl\r\n    354d0970154dd002573f4291e0e9de76  numpy-2.1.2-cp313-cp313-macosx_11_0_arm64.whl\r\n    bbfee75640b337e12f894d0b54727d66  numpy-2.1.2-cp313-cp313-macosx_14_0_arm64.whl\r\n    a443fff50571df87f687ad55c9060d25  numpy-2.1.2-cp313-cp313-macosx_14_0_x86_64.whl\r\n    9f8cd7de5b5aa5ad8ba52608a4b0a3b8  numpy-2.1.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c198fe3deaa77fb94d15284b4e26b875  numpy-2.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0a59171c983fc2d8ea599bdf382c3d6a  numpy-2.1.2-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    5ba974cd59fb8c9fc94787c754a5f636  numpy-2.1.2-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    93d5c642606fe8abeff0e6db31ebe88f  numpy-2.1.2-cp313-cp313-win32.whl\r\n    f6455bb4311ddde071a5ea2e14016003  numpy-2.1.2-cp313-cp313-win_amd64.whl\r\n    d2a21857c924d4b1b3c8ae8a9e9b9bb4  numpy-2.1.2-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    cd6afcbd05835255750a2fba6012c565  numpy-2.1.2-cp313-cp313t-macosx_11_0_arm64.whl\r\n    d2fab663ea84f1cfe13dfc00dae74fb6  numpy-2.1.2-cp313-cp313t-macosx_14_0_arm64.whl\r\n    9477b923000d63617324c487a4ce0e28  numpy-2.1.2-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    84b621a2c9a8c077bc9c471abd2b3933  numpy-2.1.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    b1c341c7192d03e8f0f5e7c4b9b6f894  numpy-2.1.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b59750ea55cf274854f64109bf67a112  numpy-2.1.2-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    33f4d63f81ad85c1ea873197f2189d89  numpy-2.1.2-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    f26a9ac42953c84c94f8203b2dbc61c0  numpy-2.1.2-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    e7cf2857582d507dfa3e8644dd3562a6  numpy-2.1.2-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    9e3d44cb302c629c00fde8f25809b04d  numpy-2.1.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3f97ee2d9962cf9d84624f725bdd2a8f  numpy-2.1.2-pp310-pypy310_pp73-win_amd64.whl\r\n    3d92e07d34f60dbac6b82a0982a98757  numpy-2.1.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    30d53720b726ec36a7f88dc873f0eec8447fbc93d93a8f079dfac2629598d6ee  numpy-2.1.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    e8d3ca0a72dd8846eb6f7dfe8f19088060fcb76931ed592d29128e0219652884  numpy-2.1.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    fc44e3c68ff00fd991b59092a54350e6e4911152682b4782f68070985aa9e648  numpy-2.1.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    7c1c60328bd964b53f8b835df69ae8198659e2b9302ff9ebb7de4e5a5994db3d  numpy-2.1.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    6cdb606a7478f9ad91c6283e238544451e3a95f30fb5467fbf715964341a8a86  numpy-2.1.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d666cb72687559689e9906197e3bec7b736764df6a2e58ee265e360663e9baf7  numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c6eef7a2dbd0abfb0d9eaf78b73017dbfd0b54051102ff4e6a7b2980d5ac1a03  numpy-2.1.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    12edb90831ff481f7ef5f6bc6431a9d74dc0e5ff401559a71e5e4611d4f2d466  numpy-2.1.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    a65acfdb9c6ebb8368490dbafe83c03c7e277b37e6857f0caeadbbc56e12f4fb  numpy-2.1.2-cp310-cp310-win32.whl\r\n    860ec6e63e2c5c2ee5e9121808145c7bf86c96cca9ad396c0bd3e0f2798ccbe2  numpy-2.1.2-cp310-cp310-win_amd64.whl\r\n    b42a1a511c81cc78cbc4539675713bbcf9d9c3913386243ceff0e9429ca892fe  numpy-2.1.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    faa88bc527d0f097abdc2c663cddf37c05a1c2f113716601555249805cf573f1  numpy-2.1.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    c82af4b2ddd2ee72d1fc0c6695048d457e00b3582ccde72d8a1c991b808bb20f  numpy-2.1.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    13602b3174432a35b16c4cfb5de9a12d229727c3dd47a6ce35111f2ebdf66ff4  numpy-2.1.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    1ebec5fd716c5a5b3d8dfcc439be82a8407b7b24b230d0ad28a81b61c2f4659a  numpy-2.1.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e2b49c3c0804e8ecb05d59af8386ec2f74877f7ca8fd9c1e00be2672e4d399b1  numpy-2.1.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    2cbba4b30bf31ddbe97f1c7205ef976909a93a66bb1583e983adbd155ba72ac2  numpy-2.1.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    8e00ea6fc82e8a804433d3e9cedaa1051a1422cb6e443011590c14d2dea59146  numpy-2.1.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    5006b13a06e0b38d561fab5ccc37581f23c9511879be7693bd33c7cd15ca227c  numpy-2.1.2-cp311-cp311-win32.whl\r\n    f1eb068ead09f4994dec71c24b2844f1e4e4e013b9629f812f292f04bd1510d9  numpy-2.1.2-cp311-cp311-win_amd64.whl\r\n    d7bf0a4f9f15b32b5ba53147369e94296f5fffb783db5aacc1be15b4bf72f43b  numpy-2.1.2-cp312-cp312-macosx_10_13_x86_64.whl\r\n    b1d0fcae4f0949f215d4632be684a539859b295e2d0cb14f78ec231915d644db  numpy-2.1.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    f751ed0a2f250541e19dfca9f1eafa31a392c71c832b6bb9e113b10d050cb0f1  numpy-2.1.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    bd33f82e95ba7ad632bc57837ee99dba3d7e006536200c4e9124089e1bf42426  numpy-2.1.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    1b8cde4f11f0a975d1fd59373b32e2f5a562ade7cde4f85b7137f3de8fbb29a0  numpy-2.1.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6d95f286b8244b3649b477ac066c6906fbb2905f8ac19b170e2175d3d799f4df  numpy-2.1.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    ab4754d432e3ac42d33a269c8567413bdb541689b02d93788af4131018cbf366  numpy-2.1.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    e585c8ae871fd38ac50598f4763d73ec5497b0de9a0ab4ef5b69f01c6a046142  numpy-2.1.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    9c6c754df29ce6a89ed23afb25550d1c2d5fdb9901d9c67a16e0b16eaf7e2550  numpy-2.1.2-cp312-cp312-win32.whl\r\n    456e3b11cb79ac9946c822a56346ec80275eaf2950314b249b512896c0d2505e  numpy-2.1.2-cp312-cp312-win_amd64.whl\r\n    a84498e0d0a1174f2b3ed769b67b656aa5460c92c9554039e11f20a05650f00d  numpy-2.1.2-cp313-cp313-macosx_10_13_x86_64.whl\r\n    4d6ec0d4222e8ffdab1744da2560f07856421b367928026fb540e1945f2eeeaf  numpy-2.1.2-cp313-cp313-macosx_11_0_arm64.whl\r\n    259ec80d54999cc34cd1eb8ded513cb053c3bf4829152a2e00de2371bd406f5e  numpy-2.1.2-cp313-cp313-macosx_14_0_arm64.whl\r\n    675c741d4739af2dc20cd6c6a5c4b7355c728167845e3c6b0e824e4e5d36a6c3  numpy-2.1.2-cp313-cp313-macosx_14_0_x86_64.whl\r\n    05b2d4e667895cc55e3ff2b56077e4c8a5604361fc21a042845ea3ad67465aa8  numpy-2.1.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    43cca367bf94a14aca50b89e9bc2061683116cfe864e56740e083392f533ce7a  numpy-2.1.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    76322dcdb16fccf2ac56f99048af32259dcc488d9b7e25b51e5eca5147a3fb98  numpy-2.1.2-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    32e16a03138cabe0cb28e1007ee82264296ac0983714094380b408097a418cfe  numpy-2.1.2-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    242b39d00e4944431a3cd2db2f5377e15b5785920421993770cddb89992c3f3a  numpy-2.1.2-cp313-cp313-win32.whl\r\n    f2ded8d9b6f68cc26f8425eda5d3877b47343e68ca23d0d0846f4d312ecaa445  numpy-2.1.2-cp313-cp313-win_amd64.whl\r\n    2ffef621c14ebb0188a8633348504a35c13680d6da93ab5cb86f4e54b7e922b5  numpy-2.1.2-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    ad369ed238b1959dfbade9018a740fb9392c5ac4f9b5173f420bd4f37ba1f7a0  numpy-2.1.2-cp313-cp313t-macosx_11_0_arm64.whl\r\n    d82075752f40c0ddf57e6e02673a17f6cb0f8eb3f587f63ca1eaab5594da5b17  numpy-2.1.2-cp313-cp313t-macosx_14_0_arm64.whl\r\n    1600068c262af1ca9580a527d43dc9d959b0b1d8e56f8a05d830eea39b7c8af6  numpy-2.1.2-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    a26ae94658d3ba3781d5e103ac07a876b3e9b29db53f68ed7df432fd033358a8  numpy-2.1.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    13311c2db4c5f7609b462bc0f43d3c465424d25c626d95040f073e30f7570e35  numpy-2.1.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    2abbf905a0b568706391ec6fa15161fad0fb5d8b68d73c461b3c1bab6064dd62  numpy-2.1.2-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    ef444c57d664d35cac4e18c298c47d7b504c66b17c2ea91312e979fcfbdfb08a  numpy-2.1.2-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    bdd407c40483463898b84490770199d5714dcc9dd9b792f6c6caccc523c00952  numpy-2.1.2-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    da65fb46d4cbb75cb417cddf6ba5e7582eb7bb0b47db4b99c9fe5787ce5d91f5  numpy-2.1.2-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    1c193d0b0238638e6fc5f10f1b074a6993cb13b0b431f64079a509d63d3aa8b7  numpy-2.1.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a7d80b2e904faa63068ead63107189164ca443b42dd1930299e0d1cb041cec2e  numpy-2.1.2-pp310-pypy310_pp73-win_amd64.whl\r\n    13532a088217fa624c99b843eeb54640de23b3414b14aa66d023805eb731066c  numpy-2.1.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/178534794/reactions",
      "total_count": 46,
      "+1": 24,
      "-1": 0,
      "laugh": 0,
      "hooray": 6,
      "confused": 0,
      "heart": 7,
      "rocket": 9,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/173250181",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/173250181/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/173250181/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.1.1",
    "id": 173250181,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84KU5aF",
    "tag_name": "v2.1.1",
    "target_commitish": "main",
    "name": "2.1.1 (Sep 3, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-09-03T12:58:27Z",
    "published_at": "2024-09-03T15:35:57Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/190139126",
        "id": 190139126,
        "node_id": "RA_kwDOAA3dP84LVUr2",
        "name": "2.1.1-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 1523,
        "download_count": 239,
        "created_at": "2024-09-03T15:35:03Z",
        "updated_at": "2024-09-03T15:35:03Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.1/2.1.1-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/190139168",
        "id": 190139168,
        "node_id": "RA_kwDOAA3dP84LVUsg",
        "name": "numpy-2.1.1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18874860,
        "download_count": 1527,
        "created_at": "2024-09-03T15:35:20Z",
        "updated_at": "2024-09-03T15:35:46Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.1/numpy-2.1.1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/190138999",
        "id": 190138999,
        "node_id": "RA_kwDOAA3dP84LVUp3",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 12963,
        "download_count": 259,
        "created_at": "2024-09-03T15:34:17Z",
        "updated_at": "2024-09-03T15:34:18Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.1.1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.1.1",
    "body": "# NumPy 2.1.1 Release Notes\r\n\r\nNumPy 2.1.1 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 2.1.0 release.\r\n\r\nThe Python versions supported by this release are 3.10-3.13.\r\n\r\n## Contributors\r\n\r\nA total of 7 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Andrew Nelson\r\n-   Charles Harris\r\n-   Mateusz Sok\u00f3\u0142\r\n-   Maximilian Weigand +\r\n-   Nathan Goldbaum\r\n-   Pieter Eendebak\r\n-   Sebastian Berg\r\n\r\n## Pull requests merged\r\n\r\nA total of 10 pull requests were merged for this release.\r\n\r\n-   [#27236](https://github.com/numpy/numpy/pull/27236): REL: Prepare for the NumPy 2.1.0 release \\[wheel build\\]\r\n-   [#27252](https://github.com/numpy/numpy/pull/27252): MAINT: prepare 2.1.x for further development\r\n-   [#27259](https://github.com/numpy/numpy/pull/27259): BUG: revert unintended change in the return value of set_printoptions\r\n-   [#27266](https://github.com/numpy/numpy/pull/27266): BUG: fix reference counting bug in \\_\\_array_interface\\_\\_ implementation...\r\n-   [#27267](https://github.com/numpy/numpy/pull/27267): TST: Add regression test for missing descr in array-interface\r\n-   [#27276](https://github.com/numpy/numpy/pull/27276): BUG: Fix #27256 and #27257\r\n-   [#27278](https://github.com/numpy/numpy/pull/27278): BUG: Fix array_equal for numeric and non-numeric scalar types\r\n-   [#27287](https://github.com/numpy/numpy/pull/27287): MAINT: Update maintenance/2.1.x after the 2.0.2 release\r\n-   [#27303](https://github.com/numpy/numpy/pull/27303): BLD: cp311- macosx_arm64 wheels \\[wheel build\\]\r\n-   [#27304](https://github.com/numpy/numpy/pull/27304): BUG: f2py: better handle filtering of public/private subroutines\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    3053a97400db800b7377749e691eb39e  numpy-2.1.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    84b752a2220dce7c96ff89eef4f4aec3  numpy-2.1.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    47ed4f704a64261f07ca24ef2e674524  numpy-2.1.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    b8a45caa870aee980c298053cf064d28  numpy-2.1.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    e097ad5eee572b791b4a25eedad6df4a  numpy-2.1.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ae502c99315884cda7f0236a07c035c4  numpy-2.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    841a859d975c55090c0b60b72aab93a3  numpy-2.1.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    d51be2b17f5b87aac64ab80fdfafc85e  numpy-2.1.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    1f8249bd725397c6233fe6a0e8ad18b1  numpy-2.1.1-cp310-cp310-win32.whl\r\n    d38d6f06589c1ec104a6a31ff6035781  numpy-2.1.1-cp310-cp310-win_amd64.whl\r\n    6a18fe3029aae00986975250313bf16f  numpy-2.1.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    5b0b3aa01fbd0b5a8b0f354bb878351e  numpy-2.1.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    1c492dad399abe7b97274b4c6c12ae53  numpy-2.1.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    4d55d91e71b62eb5fa6561c606524f60  numpy-2.1.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    88e99ecd063c178f25bc08d20792a9bf  numpy-2.1.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f3c8b0e4fb059b9219e8ec86d9fda861  numpy-2.1.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    df632b5fed7eb78d39e7194d2475c19b  numpy-2.1.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    65499daccdb178d26e322d9f359cf146  numpy-2.1.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    eb97327fd7aa6027e2409d0dcca1129a  numpy-2.1.1-cp311-cp311-win32.whl\r\n    9e4b05b38cbff22c2bdfead528b9d2bc  numpy-2.1.1-cp311-cp311-win_amd64.whl\r\n    6b8a359bb865b5c624fd9ffc848393e1  numpy-2.1.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    eaf8dce312efa2b0f17ad46612fb1681  numpy-2.1.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    c861ff048b336284fe7c0791b1a6b0b4  numpy-2.1.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    7e1befccfe729dc5d6c450a5fb6b801c  numpy-2.1.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    ea0a401ef653a167221987a10cbef260  numpy-2.1.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    97326ac792d26f2e536a519c82f2d6bc  numpy-2.1.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fdd2a82232c03d11bbc7cec0a8e01ab0  numpy-2.1.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    0d6716e9a7b2c0d6e5ace9c01b9bca01  numpy-2.1.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    ba589ed2a79c88187c3b8574ae72a1c7  numpy-2.1.1-cp312-cp312-win32.whl\r\n    806ca7c1e2a2013b786edbb619f6da47  numpy-2.1.1-cp312-cp312-win_amd64.whl\r\n    647665353e5af5884df4e51610990c22  numpy-2.1.1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    bfd3b3c5c4616ef99d917bd94d39114a  numpy-2.1.1-cp313-cp313-macosx_11_0_arm64.whl\r\n    cb989095f9c74e3b32250a984390faeb  numpy-2.1.1-cp313-cp313-macosx_14_0_arm64.whl\r\n    55ad7548e58f61b9a4f91749e36d237f  numpy-2.1.1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    5bc73d67dd1032524bfd36ef877b09e4  numpy-2.1.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c7dfb09db8284cb75296f708c3f77ea3  numpy-2.1.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7cf90ce1b844a97aeea1a5b8c71fb49b  numpy-2.1.1-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    6ec8baeac5f979a3b98017679d457bbc  numpy-2.1.1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    1f198cb5210c76faae81359a83d58230  numpy-2.1.1-cp313-cp313-win32.whl\r\n    1766258213ad41f7e36f2209ee6d2a30  numpy-2.1.1-cp313-cp313-win_amd64.whl\r\n    f0a7a0456308dbeb739ad886f1632f16  numpy-2.1.1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    302c9cf7b4aa695974500ee1935a92c9  numpy-2.1.1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    f4aa7d784992abb9bd9fe9db09c01c06  numpy-2.1.1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    3bb4ae9906499609769f1774438149a5  numpy-2.1.1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    ff6b9e1993d3d540074736014b1d13af  numpy-2.1.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    749489c091ee9c00abf1ad1ef822c3ca  numpy-2.1.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    32d2daf4064031f365ced5036757ad8b  numpy-2.1.1-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    603dfe4ef56c01e1fc0dcc9d5e3090ed  numpy-2.1.1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    70fa2d3b78633bb6061c90e17364f27f  numpy-2.1.1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    9a430be5d14b689ed051eccc540dfbdc  numpy-2.1.1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    7291ff124e471d32c03464da18ff108d  numpy-2.1.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e56ce141724af119c7c647a8705827a5  numpy-2.1.1-pp310-pypy310_pp73-win_amd64.whl\r\n    f63b4750618bfa5490f10cae37fde998  numpy-2.1.1.tar.gz\r\n\r\n### SHA256\r\n\r\n    c8a0e34993b510fc19b9a2ce7f31cb8e94ecf6e924a40c0c9dd4f62d0aac47d9  numpy-2.1.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    7dd86dfaf7c900c0bbdcb8b16e2f6ddf1eb1fe39c6c8cca6e94844ed3152a8fd  numpy-2.1.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    5889dd24f03ca5a5b1e8a90a33b5a0846d8977565e4ae003a63d22ecddf6782f  numpy-2.1.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    59ca673ad11d4b84ceb385290ed0ebe60266e356641428c845b39cd9df6713ab  numpy-2.1.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    13ce49a34c44b6de5241f0b38b07e44c1b2dcacd9e36c30f9c2fcb1bb5135db7  numpy-2.1.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    913cc1d311060b1d409e609947fa1b9753701dac96e6581b58afc36b7ee35af6  numpy-2.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    caf5d284ddea7462c32b8d4a6b8af030b6c9fd5332afb70e7414d7fdded4bfd0  numpy-2.1.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    57eb525e7c2a8fdee02d731f647146ff54ea8c973364f3b850069ffb42799647  numpy-2.1.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    9a8e06c7a980869ea67bbf551283bbed2856915f0a792dc32dd0f9dd2fb56728  numpy-2.1.1-cp310-cp310-win32.whl\r\n    d10c39947a2d351d6d466b4ae83dad4c37cd6c3cdd6d5d0fa797da56f710a6ae  numpy-2.1.1-cp310-cp310-win_amd64.whl\r\n    0d07841fd284718feffe7dd17a63a2e6c78679b2d386d3e82f44f0108c905550  numpy-2.1.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    b5613cfeb1adfe791e8e681128f5f49f22f3fcaa942255a6124d58ca59d9528f  numpy-2.1.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    0b8cc2715a84b7c3b161f9ebbd942740aaed913584cae9cdc7f8ad5ad41943d0  numpy-2.1.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    b49742cdb85f1f81e4dc1b39dcf328244f4d8d1ded95dea725b316bd2cf18c95  numpy-2.1.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    e8d5f8a8e3bc87334f025194c6193e408903d21ebaeb10952264943a985066ca  numpy-2.1.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d51fc141ddbe3f919e91a096ec739f49d686df8af254b2053ba21a910ae518bf  numpy-2.1.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    98ce7fb5b8063cfdd86596b9c762bf2b5e35a2cdd7e967494ab78a1fa7f8b86e  numpy-2.1.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    24c2ad697bd8593887b019817ddd9974a7f429c14a5469d7fad413f28340a6d2  numpy-2.1.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    397bc5ce62d3fb73f304bec332171535c187e0643e176a6e9421a6e3eacef06d  numpy-2.1.1-cp311-cp311-win32.whl\r\n    ae8ce252404cdd4de56dcfce8b11eac3c594a9c16c231d081fb705cf23bd4d9e  numpy-2.1.1-cp311-cp311-win_amd64.whl\r\n    7c803b7934a7f59563db459292e6aa078bb38b7ab1446ca38dd138646a38203e  numpy-2.1.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    6435c48250c12f001920f0751fe50c0348f5f240852cfddc5e2f97e007544cbe  numpy-2.1.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    3269c9eb8745e8d975980b3a7411a98976824e1fdef11f0aacf76147f662b15f  numpy-2.1.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    fac6e277a41163d27dfab5f4ec1f7a83fac94e170665a4a50191b545721c6521  numpy-2.1.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    fcd8f556cdc8cfe35e70efb92463082b7f43dd7e547eb071ffc36abc0ca4699b  numpy-2.1.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d2b9cd92c8f8e7b313b80e93cedc12c0112088541dcedd9197b5dee3738c1201  numpy-2.1.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    afd9c680df4de71cd58582b51e88a61feed4abcc7530bcd3d48483f20fc76f2a  numpy-2.1.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    8661c94e3aad18e1ea17a11f60f843a4933ccaf1a25a7c6a9182af70610b2313  numpy-2.1.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    950802d17a33c07cba7fd7c3dcfa7d64705509206be1606f196d179e539111ed  numpy-2.1.1-cp312-cp312-win32.whl\r\n    3fc5eabfc720db95d68e6646e88f8b399bfedd235994016351b1d9e062c4b270  numpy-2.1.1-cp312-cp312-win_amd64.whl\r\n    046356b19d7ad1890c751b99acad5e82dc4a02232013bd9a9a712fddf8eb60f5  numpy-2.1.1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    6e5a9cb2be39350ae6c8f79410744e80154df658d5bea06e06e0ac5bb75480d5  numpy-2.1.1-cp313-cp313-macosx_11_0_arm64.whl\r\n    d4c57b68c8ef5e1ebf47238e99bf27657511ec3f071c465f6b1bccbef12d4136  numpy-2.1.1-cp313-cp313-macosx_14_0_arm64.whl\r\n    8ae0fd135e0b157365ac7cc31fff27f07a5572bdfc38f9c2d43b2aff416cc8b0  numpy-2.1.1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    981707f6b31b59c0c24bcda52e5605f9701cb46da4b86c2e8023656ad3e833cb  numpy-2.1.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2ca4b53e1e0b279142113b8c5eb7d7a877e967c306edc34f3b58e9be12fda8df  numpy-2.1.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e097507396c0be4e547ff15b13dc3866f45f3680f789c1a1301b07dadd3fbc78  numpy-2.1.1-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    f7506387e191fe8cdb267f912469a3cccc538ab108471291636a96a54e599556  numpy-2.1.1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    251105b7c42abe40e3a689881e1793370cc9724ad50d64b30b358bbb3a97553b  numpy-2.1.1-cp313-cp313-win32.whl\r\n    f212d4f46b67ff604d11fff7cc62d36b3e8714edf68e44e9760e19be38c03eb0  numpy-2.1.1-cp313-cp313-win_amd64.whl\r\n    920b0911bb2e4414c50e55bd658baeb78281a47feeb064ab40c2b66ecba85553  numpy-2.1.1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    bab7c09454460a487e631ffc0c42057e3d8f2a9ddccd1e60c7bb8ed774992480  numpy-2.1.1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    cea427d1350f3fd0d2818ce7350095c1a2ee33e30961d2f0fef48576ddbbe90f  numpy-2.1.1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    e30356d530528a42eeba51420ae8bf6c6c09559051887196599d96ee5f536468  numpy-2.1.1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    e8dfa9e94fc127c40979c3eacbae1e61fda4fe71d84869cc129e2721973231ef  numpy-2.1.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    910b47a6d0635ec1bd53b88f86120a52bf56dcc27b51f18c7b4a2e2224c29f0f  numpy-2.1.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    13cc11c00000848702322af4de0147ced365c81d66053a67c2e962a485b3717c  numpy-2.1.1-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    53e27293b3a2b661c03f79aa51c3987492bd4641ef933e366e0f9f6c9bf257ec  numpy-2.1.1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    7be6a07520b88214ea85d8ac8b7d6d8a1839b0b5cb87412ac9f49fa934eb15d5  numpy-2.1.1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    52ac2e48f5ad847cd43c4755520a2317f3380213493b9d8a4c5e37f3b87df504  numpy-2.1.1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    50a95ca3560a6058d6ea91d4629a83a897ee27c00630aed9d933dff191f170cd  numpy-2.1.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    99f4a9ee60eed1385a86e82288971a51e71df052ed0b2900ed30bc840c0f2e39  numpy-2.1.1-pp310-pypy310_pp73-win_amd64.whl\r\n    d0cf7d55b1051387807405b3898efafa862997b4cba8aa5dbe657be794afeafd  numpy-2.1.1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/173250181/reactions",
      "total_count": 52,
      "+1": 20,
      "-1": 0,
      "laugh": 7,
      "hooray": 9,
      "confused": 0,
      "heart": 7,
      "rocket": 9,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/172035418",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/172035418/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/172035418/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.2",
    "id": 172035418,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84KQQ1a",
    "tag_name": "v2.0.2",
    "target_commitish": "main",
    "name": "NumPy 2.0.2 release (Aug 26, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-08-26T17:21:55Z",
    "published_at": "2024-08-26T22:40:05Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/188473935",
        "id": 188473935,
        "node_id": "RA_kwDOAA3dP84LO-JP",
        "name": "2.0.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2566,
        "download_count": 50,
        "created_at": "2024-08-26T22:37:23Z",
        "updated_at": "2024-08-26T22:37:23Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.2/2.0.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/188474066",
        "id": 188474066,
        "node_id": "RA_kwDOAA3dP84LO-LS",
        "name": "numpy-2.0.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18902015,
        "download_count": 478,
        "created_at": "2024-08-26T22:37:44Z",
        "updated_at": "2024-08-26T22:38:10Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.2/numpy-2.0.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/188474660",
        "id": 188474660,
        "node_id": "RA_kwDOAA3dP84LO-Uk",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 12181,
        "download_count": 60,
        "created_at": "2024-08-26T22:39:22Z",
        "updated_at": "2024-08-26T22:39:22Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.2",
    "body": "# NumPy 2.0.2 Release Notes\r\n\r\nNumPy 2.0.2 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 2.0.1 release.\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n## Contributors\r\n\r\nA total of 13 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Bruno Oliveira +\r\n-   Charles Harris\r\n-   Chris Sidebottom\r\n-   Christian Heimes +\r\n-   Christopher Sidebottom\r\n-   Mateusz Sok\u00f3\u0142\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Pieter Eendebak\r\n-   Raghuveer Devulapalli\r\n-   Ralf Gommers\r\n-   Sebastian Berg\r\n-   Yair Chuchem +\r\n\r\n## Pull requests merged\r\n\r\nA total of 19 pull requests were merged for this release.\r\n\r\n-   [#27000](https://github.com/numpy/numpy/pull/27000): REL: Prepare for the NumPy 2.0.1 release \\[wheel build\\]\r\n-   [#27001](https://github.com/numpy/numpy/pull/27001): MAINT: prepare 2.0.x for further development\r\n-   [#27021](https://github.com/numpy/numpy/pull/27021): BUG: cfuncs.py: fix crash when sys.stderr is not available\r\n-   [#27022](https://github.com/numpy/numpy/pull/27022): DOC: Fix migration note for `alltrue` and `sometrue`\r\n-   [#27061](https://github.com/numpy/numpy/pull/27061): BUG: use proper input and output descriptor in array_assign_subscript\\...\r\n-   [#27073](https://github.com/numpy/numpy/pull/27073): BUG: Mirror VQSORT_ENABLED logic in Quicksort\r\n-   [#27074](https://github.com/numpy/numpy/pull/27074): BUG: Bump Highway to latest master\r\n-   [#27077](https://github.com/numpy/numpy/pull/27077): BUG: Off by one in memory overlap check\r\n-   [#27122](https://github.com/numpy/numpy/pull/27122): BUG: Use the new `npyv_loadable_stride_` functions for ldexp and\\...\r\n-   [#27126](https://github.com/numpy/numpy/pull/27126): BUG: Bump Highway to latest\r\n-   [#27128](https://github.com/numpy/numpy/pull/27128): BUG: add missing error handling in public_dtype_api.c\r\n-   [#27129](https://github.com/numpy/numpy/pull/27129): BUG: fix another cast setup in array_assign_subscript\r\n-   [#27130](https://github.com/numpy/numpy/pull/27130): BUG: Fix building NumPy in FIPS mode\r\n-   [#27131](https://github.com/numpy/numpy/pull/27131): BLD: update vendored Meson for cross-compilation patches\r\n-   [#27146](https://github.com/numpy/numpy/pull/27146): MAINT: Scipy openblas 0.3.27.44.4\r\n-   [#27151](https://github.com/numpy/numpy/pull/27151): BUG: Do not accidentally store dtype metadata in `np.save`\r\n-   [#27195](https://github.com/numpy/numpy/pull/27195): REV: Revert undef I and document it\r\n-   [#27213](https://github.com/numpy/numpy/pull/27213): BUG: Fix NPY_RAVEL_AXIS on backwards compatible NumPy 2 builds\r\n-   [#27279](https://github.com/numpy/numpy/pull/27279): BUG: Fix array_equal for numeric and non-numeric scalar types\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    ae4bc199b56d20305984b7465d6fbdf1  numpy-2.0.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    ecce0a682c2ccaaa14500b87ffb69f63  numpy-2.0.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    a94f34bec8a62dab95ce9883a87a82a6  numpy-2.0.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    a0a26dadf73264d31b7a6952b816d7c8  numpy-2.0.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    972f4366651a1a2ef00f630595104d15  numpy-2.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6cffef937fe67a3879abefd3d2c40fb8  numpy-2.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3717a5deda20f465720717a1a7a293a6  numpy-2.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    e31136ecc97bb76b3cb7e86bfc9471ac  numpy-2.0.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    9703a02ca6b63ca53f83660d089f4294  numpy-2.0.2-cp310-cp310-win32.whl\r\n    12c097ef2c7492282a5514b5c4b68784  numpy-2.0.2-cp310-cp310-win_amd64.whl\r\n    f11d11bfa3aaf371d2e7fa0160e3208b  numpy-2.0.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    86fc67666fc6e27740fde7dacb19c484  numpy-2.0.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    5fd12e0dd7162ea9599c49bbb6e6730e  numpy-2.0.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    a40f473db729ea10ae401ce71899120a  numpy-2.0.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    36ea96e0be954896597543d726157eda  numpy-2.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    cfa726b6d5445687020fc4d4f7191e42  numpy-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    dfb9a7b7fe218e931b0dfb885a8250d6  numpy-2.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    d8bf100186e6cd1b2f27eb617ba9e581  numpy-2.0.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    4fe937eba0fc4d28a65c0ba571c809fc  numpy-2.0.2-cp311-cp311-win32.whl\r\n    a9a0f8e1bc4d825272514896e3b17f15  numpy-2.0.2-cp311-cp311-win_amd64.whl\r\n    5ef80ec3b2db487d89c590eb301a7aa4  numpy-2.0.2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    1bb398d93422bb9baf63c958ed1aa492  numpy-2.0.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    cc8d990a1ad3f4d66d0143ea709ccc99  numpy-2.0.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    4fee57e854bc3e9a267e865740438d53  numpy-2.0.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c2c18eef5118607c0b023f6267ee9774  numpy-2.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2928ed26d7153a488bfb126424d86c8f  numpy-2.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e32167073981b0a1a419aaaec741773e  numpy-2.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    80a10803a3122472c1bf6c4617d0d1c5  numpy-2.0.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    39724e27a003b6ce9b1bcbf251e50b4b  numpy-2.0.2-cp312-cp312-win32.whl\r\n    8319d0b3d23285d4698cbece73b23fde  numpy-2.0.2-cp312-cp312-win_amd64.whl\r\n    da0f655880bbcb53094816b77cd493d1  numpy-2.0.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    47347c028f6ccf47d6a22724111fc96f  numpy-2.0.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    26a5c8dec993258522fcef84ef0c040e  numpy-2.0.2-cp39-cp39-macosx_14_0_arm64.whl\r\n    fe447af86983ef2262e605a941bd46af  numpy-2.0.2-cp39-cp39-macosx_14_0_x86_64.whl\r\n    96477b8563e6d4e2db710f4915a4c5e0  numpy-2.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4e8255cdff60de62944aed1f4235ff68  numpy-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    05d8465b87ca983eee044b66bc725391  numpy-2.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    dcf448ef80720bae7de6724f92499754  numpy-2.0.2-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    71557f67f24d39db709cc4ccb85ae5b5  numpy-2.0.2-cp39-cp39-win32.whl\r\n    f5dc31c5530037c4d1d990696b1d041c  numpy-2.0.2-cp39-cp39-win_amd64.whl\r\n    a8f814da1a4509724346c14cd838b5dc  numpy-2.0.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    918f072481d014229dd5f0f5ba75306f  numpy-2.0.2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    fcbe2e38506fbbbeda509a89063563d3  numpy-2.0.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b99eff795ca26f8a513aace76a45a356  numpy-2.0.2-pp39-pypy39_pp73-win_amd64.whl\r\n    d517a3be706295c4a4c8f75f5ee7b261  numpy-2.0.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    51129a29dbe56f9ca83438b706e2e69a39892b5eda6cedcb6b0c9fdc9b0d3ece  numpy-2.0.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    f15975dfec0cf2239224d80e32c3170b1d168335eaedee69da84fbe9f1f9cd04  numpy-2.0.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    8c5713284ce4e282544c68d1c3b2c7161d38c256d2eefc93c1d683cf47683e66  numpy-2.0.2-cp310-cp310-macosx_14_0_arm64.whl\r\n    becfae3ddd30736fe1889a37f1f580e245ba79a5855bff5f2a29cb3ccc22dd7b  numpy-2.0.2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    2da5960c3cf0df7eafefd806d4e612c5e19358de82cb3c343631188991566ccd  numpy-2.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    496f71341824ed9f3d2fd36cf3ac57ae2e0165c143b55c3a035ee219413f3318  numpy-2.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a61ec659f68ae254e4d237816e33171497e978140353c0c2038d46e63282d0c8  numpy-2.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    d731a1c6116ba289c1e9ee714b08a8ff882944d4ad631fd411106a30f083c326  numpy-2.0.2-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    984d96121c9f9616cd33fbd0618b7f08e0cfc9600a7ee1d6fd9b239186d19d97  numpy-2.0.2-cp310-cp310-win32.whl\r\n    c7b0be4ef08607dd04da4092faee0b86607f111d5ae68036f16cc787e250a131  numpy-2.0.2-cp310-cp310-win_amd64.whl\r\n    49ca4decb342d66018b01932139c0961a8f9ddc7589611158cb3c27cbcf76448  numpy-2.0.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    11a76c372d1d37437857280aa142086476136a8c0f373b2e648ab2c8f18fb195  numpy-2.0.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    807ec44583fd708a21d4a11d94aedf2f4f3c3719035c76a2bbe1fe8e217bdc57  numpy-2.0.2-cp311-cp311-macosx_14_0_arm64.whl\r\n    8cafab480740e22f8d833acefed5cc87ce276f4ece12fdaa2e8903db2f82897a  numpy-2.0.2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    a15f476a45e6e5a3a79d8a14e62161d27ad897381fecfa4a09ed5322f2085669  numpy-2.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    13e689d772146140a252c3a28501da66dfecd77490b498b168b501835041f951  numpy-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9ea91dfb7c3d1c56a0e55657c0afb38cf1eeae4544c208dc465c3c9f3a7c09f9  numpy-2.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    c1c9307701fec8f3f7a1e6711f9089c06e6284b3afbbcd259f7791282d660a15  numpy-2.0.2-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    a392a68bd329eafac5817e5aefeb39038c48b671afd242710b451e76090e81f4  numpy-2.0.2-cp311-cp311-win32.whl\r\n    286cd40ce2b7d652a6f22efdfc6d1edf879440e53e76a75955bc0c826c7e64dc  numpy-2.0.2-cp311-cp311-win_amd64.whl\r\n    df55d490dea7934f330006d0f81e8551ba6010a5bf035a249ef61a94f21c500b  numpy-2.0.2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    8df823f570d9adf0978347d1f926b2a867d5608f434a7cff7f7908c6570dcf5e  numpy-2.0.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    9a92ae5c14811e390f3767053ff54eaee3bf84576d99a2456391401323f4ec2c  numpy-2.0.2-cp312-cp312-macosx_14_0_arm64.whl\r\n    a842d573724391493a97a62ebbb8e731f8a5dcc5d285dfc99141ca15a3302d0c  numpy-2.0.2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c05e238064fc0610c840d1cf6a13bf63d7e391717d247f1bf0318172e759e692  numpy-2.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0123ffdaa88fa4ab64835dcbde75dcdf89c453c922f18dced6e27c90d1d0ec5a  numpy-2.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    96a55f64139912d61de9137f11bf39a55ec8faec288c75a54f93dfd39f7eb40c  numpy-2.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    ec9852fb39354b5a45a80bdab5ac02dd02b15f44b3804e9f00c556bf24b4bded  numpy-2.0.2-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    671bec6496f83202ed2d3c8fdc486a8fc86942f2e69ff0e986140339a63bcbe5  numpy-2.0.2-cp312-cp312-win32.whl\r\n    cfd41e13fdc257aa5778496b8caa5e856dc4896d4ccf01841daee1d96465467a  numpy-2.0.2-cp312-cp312-win_amd64.whl\r\n    9059e10581ce4093f735ed23f3b9d283b9d517ff46009ddd485f1747eb22653c  numpy-2.0.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    423e89b23490805d2a5a96fe40ec507407b8ee786d66f7328be214f9679df6dd  numpy-2.0.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    2b2955fa6f11907cf7a70dab0d0755159bca87755e831e47932367fc8f2f2d0b  numpy-2.0.2-cp39-cp39-macosx_14_0_arm64.whl\r\n    97032a27bd9d8988b9a97a8c4d2c9f2c15a81f61e2f21404d7e8ef00cb5be729  numpy-2.0.2-cp39-cp39-macosx_14_0_x86_64.whl\r\n    1e795a8be3ddbac43274f18588329c72939870a16cae810c2b73461c40718ab1  numpy-2.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f26b258c385842546006213344c50655ff1555a9338e2e5e02a0756dc3e803dd  numpy-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5fec9451a7789926bcf7c2b8d187292c9f93ea30284802a0ab3f5be8ab36865d  numpy-2.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    9189427407d88ff25ecf8f12469d4d39d35bee1db5d39fc5c168c6f088a6956d  numpy-2.0.2-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    905d16e0c60200656500c95b6b8dca5d109e23cb24abc701d41c02d74c6b3afa  numpy-2.0.2-cp39-cp39-win32.whl\r\n    a3f4ab0caa7f053f6797fcd4e1e25caee367db3112ef2b6ef82d749530768c73  numpy-2.0.2-cp39-cp39-win_amd64.whl\r\n    7f0a0c6f12e07fa94133c8a67404322845220c06a9e80e85999afe727f7438b8  numpy-2.0.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    312950fdd060354350ed123c0e25a71327d3711584beaef30cdaa93320c392d4  numpy-2.0.2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    26df23238872200f63518dd2aa984cfca675d82469535dc7162dc2ee52d9dd5c  numpy-2.0.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a46288ec55ebbd58947d31d72be2c63cbf839f0a63b49cb755022310792a3385  numpy-2.0.2-pp39-pypy39_pp73-win_amd64.whl\r\n    883c987dee1880e2a864ab0dc9892292582510604156762362d9326444636e78  numpy-2.0.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/172035418/reactions",
      "total_count": 61,
      "+1": 23,
      "-1": 0,
      "laugh": 7,
      "hooray": 13,
      "confused": 0,
      "heart": 9,
      "rocket": 9,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/170776414",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/170776414/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/170776414/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.1.0",
    "id": 170776414,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84KLdde",
    "tag_name": "v2.1.0",
    "target_commitish": "main",
    "name": "2.1.0 (Aug 18, 2024)",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-08-18T17:24:18Z",
    "published_at": "2024-08-18T22:53:05Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/186774607",
        "id": 186774607,
        "node_id": "RA_kwDOAA3dP84LIfRP",
        "name": "2.1.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 53345,
        "download_count": 50,
        "created_at": "2024-08-18T22:48:28Z",
        "updated_at": "2024-08-18T22:48:31Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0/2.1.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/186775190",
        "id": 186775190,
        "node_id": "RA_kwDOAA3dP84LIfaW",
        "name": "numpy-2.1.0.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18868922,
        "download_count": 509,
        "created_at": "2024-08-18T22:50:52Z",
        "updated_at": "2024-08-18T22:51:35Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0/numpy-2.1.0.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/186775175",
        "id": 186775175,
        "node_id": "RA_kwDOAA3dP84LIfaH",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 26463,
        "download_count": 44,
        "created_at": "2024-08-18T22:50:37Z",
        "updated_at": "2024-08-18T22:50:38Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.1.0",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.1.0",
    "body": "# NumPy 2.1.0 Release Notes\r\n\r\nNumPy 2.1.0 provides support for the upcoming Python 3.13 release and\r\ndrops support for Python 3.9. In addition to the usual bug fixes and\r\nupdated Python support, it helps get us back into our usual release\r\ncycle after the extended development of 2.0. The highlights for this\r\nrelease are:\r\n\r\n-   Support for the array-api 2023.12 standard.\r\n-   Support for Python 3.13.\r\n-   Preliminary support for free threaded Python 3.13.\r\n\r\nPython versions 3.10-3.13 are supported in this release.\r\n\r\n## New functions\r\n\r\n### New function `numpy.unstack`\r\n\r\nA new function `np.unstack(array, axis=...)` was added, which splits an\r\narray into a tuple of arrays along an axis. It serves as the inverse of\r\n[numpy.stack]{.title-ref}.\r\n\r\n([gh-26579](https://github.com/numpy/numpy/pull/26579))\r\n\r\n## Deprecations\r\n\r\n-   The `fix_imports` keyword argument in `numpy.save` is deprecated.\r\n    Since NumPy 1.17, `numpy.save` uses a pickle protocol that no longer\r\n    supports Python 2, and ignored `fix_imports` keyword. This keyword\r\n    is kept only for backward compatibility. It is now deprecated.\r\n\r\n    ([gh-26452](https://github.com/numpy/numpy/pull/26452))\r\n\r\n-   Passing non-integer inputs as the first argument of\r\n    [bincount]{.title-ref} is now deprecated, because such inputs are\r\n    silently cast to integers with no warning about loss of precision.\r\n\r\n    ([gh-27076](https://github.com/numpy/numpy/pull/27076))\r\n\r\n## Expired deprecations\r\n\r\n-   Scalars and 0D arrays are disallowed for `numpy.nonzero` and\r\n    `numpy.ndarray.nonzero`.\r\n\r\n    ([gh-26268](https://github.com/numpy/numpy/pull/26268))\r\n\r\n-   `set_string_function` internal function was removed and\r\n    `PyArray_SetStringFunction` was stubbed out.\r\n\r\n    ([gh-26611](https://github.com/numpy/numpy/pull/26611))\r\n\r\n## C API changes\r\n\r\n### API symbols now hidden but customizable\r\n\r\nNumPy now defaults to hide the API symbols it adds to allow all NumPy\r\nAPI usage. This means that by default you cannot dynamically fetch the\r\nNumPy API from another library (this was never possible on windows).\r\n\r\nIf you are experiencing linking errors related to `PyArray_API` or\r\n`PyArray_RUNTIME_VERSION`, you can define the `NPY_API_SYMBOL_ATTRIBUTE`\r\nto opt-out of this change.\r\n\r\nIf you are experiencing problems due to an upstream header including\r\nNumPy, the solution is to make sure you\r\n`#include \"numpy/ndarrayobject.h\"` before their header and import NumPy\r\nyourself based on `including-the-c-api`.\r\n\r\n([gh-26103](https://github.com/numpy/numpy/pull/26103))\r\n\r\n### Many shims removed from npy_3kcompat.h\r\n\r\nMany of the old shims and helper functions were removed from\r\n`npy_3kcompat.h`. If you find yourself in need of these, vendor the\r\nprevious version of the file into your codebase.\r\n\r\n([gh-26842](https://github.com/numpy/numpy/pull/26842))\r\n\r\n### New `PyUFuncObject` field `process_core_dims_func`\r\n\r\nThe field `process_core_dims_func` was added to the structure\r\n`PyUFuncObject`. For generalized ufuncs, this field can be set to a\r\nfunction of type `PyUFunc_ProcessCoreDimsFunc` that will be called when\r\nthe ufunc is called. It allows the ufunc author to check that core\r\ndimensions satisfy additional constraints, and to set output core\r\ndimension sizes if they have not been provided.\r\n\r\n([gh-26908](https://github.com/numpy/numpy/pull/26908))\r\n\r\n## New Features\r\n\r\n### Preliminary Support for Free-Threaded CPython 3.13\r\n\r\nCPython 3.13 will be available as an experimental free-threaded build.\r\nSee <https://py-free-threading.github.io>, [PEP 703](https://peps.python.org/pep-0703/) and the\r\n[CPython 3.13 release notes](https://docs.python.org/3.13/whatsnew/3.13.html#free-threaded-cpython) for more detail about free-threaded Python.\r\n\r\nNumPy 2.1 has preliminary support for the free-threaded build of CPython\r\n3.13. This support was enabled by fixing a number of C thread-safety\r\nissues in NumPy. Before NumPy 2.1, NumPy used a large number of C global\r\nstatic variables to store runtime caches and other state. We have either\r\nrefactored to avoid the need for global state, converted the global\r\nstate to thread-local state, or added locking.\r\n\r\nSupport for free-threaded Python does not mean that NumPy is thread\r\nsafe. Read-only shared access to ndarray should be safe. NumPy exposes\r\nshared mutable state and we have not added any locking to the array\r\nobject itself to serialize access to shared state. Care must be taken in\r\nuser code to avoid races if you would like to mutate the same array in\r\nmultiple threads. It is certainly possible to crash NumPy by mutating an\r\narray simultaneously in multiple threads, for example by calling a ufunc\r\nand the `resize` method simultaneously. For now our guidance is:\r\n\\\"don\\'t do that\\\". In the future we would like to provide stronger\r\nguarantees.\r\n\r\nObject arrays in particular need special care, since the GIL previously\r\nprovided locking for object array access and no longer does. See\r\n[Issue #27199](https://github.com/numpy/numpy/issues/27199) for more information about object\r\narrays in the free-threaded build.\r\n\r\nIf you are interested in free-threaded Python, for example because you\r\nhave a multiprocessing-based workflow that you are interested in running\r\nwith Python threads, we encourage testing and experimentation.\r\n\r\nIf you run into problems that you suspect are because of NumPy, please\r\n[open an issue](https://github.com/numpy/numpy/issues/new/choose),\r\nchecking first if the bug also occurs in the \\\"regular\\\" non-free-threaded CPython 3.13 \r\nbuild. Many threading bugs can also occur in code that releases\r\nthe GIL; disabling the GIL only makes it easier to hit threading bugs.\r\n\r\n([gh-26157](https://github.com/numpy/numpy/issues/26157#issuecomment-2233864940))\r\n\r\n### `f2py` can generate freethreading-compatible C extensions\r\n\r\nPass `--freethreading-compatible` to the f2py CLI tool to produce a C\r\nextension marked as compatible with the free threading CPython\r\ninterpreter. Doing so prevents the interpreter from re-enabling the GIL\r\nat runtime when it imports the C extension. Note that `f2py` does not\r\nanalyze fortran code for thread safety, so you must verify that the\r\nwrapped fortran code is thread safe before marking the extension as\r\ncompatible.\r\n\r\n([gh-26981](https://github.com/numpy/numpy/pull/26981))\r\n\r\n-   `numpy.reshape` and `numpy.ndarray.reshape` now support `shape` and\r\n    `copy` arguments.\r\n\r\n    ([gh-26292](https://github.com/numpy/numpy/pull/26292))\r\n\r\n-   NumPy now supports DLPack v1, support for older versions will be\r\n    deprecated in the future.\r\n\r\n    ([gh-26501](https://github.com/numpy/numpy/pull/26501))\r\n\r\n-   `numpy.asanyarray` now supports `copy` and `device` arguments,\r\n    matching `numpy.asarray`.\r\n\r\n    ([gh-26580](https://github.com/numpy/numpy/pull/26580))\r\n\r\n-   `numpy.printoptions`, `numpy.get_printoptions`, and\r\n    `numpy.set_printoptions` now support a new option, `override_repr`,\r\n    for defining custom `repr(array)` behavior.\r\n\r\n    ([gh-26611](https://github.com/numpy/numpy/pull/26611))\r\n\r\n-   `numpy.cumulative_sum` and `numpy.cumulative_prod` were added as\r\n    Array API compatible alternatives for `numpy.cumsum` and\r\n    `numpy.cumprod`. The new functions can include a fixed initial\r\n    (zeros for `sum` and ones for `prod`) in the result.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n-   `numpy.clip` now supports `max` and `min` keyword arguments which\r\n    are meant to replace `a_min` and `a_max`. Also, for `np.clip(a)` or\r\n    `np.clip(a, None, None)` a copy of the input array will be returned\r\n    instead of raising an error.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n-   `numpy.astype` now supports `device` argument.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n\r\n## Improvements\r\n\r\n### `histogram` auto-binning now returns bin sizes \\>=1 for integer input data\r\n\r\nFor integer input data, bin sizes smaller than 1 result in spurious\r\nempty bins. This is now avoided when the number of bins is computed\r\nusing one of the algorithms provided by `histogram_bin_edges`.\r\n\r\n([gh-12150](https://github.com/numpy/numpy/pull/12150))\r\n\r\n### `ndarray` shape-type parameter is now covariant and bound to `tuple[int, ...]`\r\n\r\nStatic typing for `ndarray` is a long-term effort that continues with\r\nthis change. It is a generic type with type parameters for the shape and\r\nthe data type. Previously, the shape type parameter could be any value.\r\nThis change restricts it to a tuple of ints, as one would expect from\r\nusing `ndarray.shape`. Further, the shape-type parameter has been\r\nchanged from invariant to covariant. This change also applies to the\r\nsubtypes of `ndarray`, e.g. `numpy.ma.MaskedArray`. See the\r\n[typing docs](https://typing.readthedocs.io/en/latest/reference/generics.html#variance-of-generic-types)\r\nfor more information.\r\n\r\n([gh-26081](https://github.com/numpy/numpy/pull/26081))\r\n\r\n### `np.quantile` with method `closest_observation` chooses nearest even order statistic\r\n\r\nThis changes the definition of nearest for border cases from the nearest\r\nodd order statistic to nearest even order statistic. The numpy\r\nimplementation now matches other reference implementations.\r\n\r\n([gh-26656](https://github.com/numpy/numpy/pull/26656))\r\n\r\n### `lapack_lite` is now thread safe\r\n\r\nNumPy provides a minimal low-performance version of LAPACK named\r\n`lapack_lite` that can be used if no BLAS/LAPACK system is detected at\r\nbuild time.\r\n\r\nUntil now, `lapack_lite` was not thread safe. Single-threaded use cases\r\ndid not hit any issues, but running linear algebra operations in\r\nmultiple threads could lead to errors, incorrect results, or segfaults\r\ndue to data races.\r\n\r\nWe have added a global lock, serializing access to `lapack_lite` in\r\nmultiple threads.\r\n\r\n([gh-26750](https://github.com/numpy/numpy/pull/26750))\r\n\r\n### The `numpy.printoptions` context manager is now thread and async-safe\r\n\r\nIn prior versions of NumPy, the printoptions were defined using a\r\ncombination of Python and C global variables. We have refactored so the\r\nstate is stored in a python `ContextVar`, making the context manager\r\nthread and async-safe.\r\n\r\n([gh-26846](https://github.com/numpy/numpy/pull/26846))\r\n\r\n### Type hinting `numpy.polynomial`\r\n\r\nStarting from the 2.1 release, PEP 484 type annotations have been\r\nincluded for the functions and convenience classes in `numpy.polynomial`\r\nand its sub-packages.\r\n\r\n([gh-26897](https://github.com/numpy/numpy/pull/26897))\r\n\r\n### Improved `numpy.dtypes` type hints\r\n\r\nThe type annotations for `numpy.dtypes` are now a better reflection of\r\nthe runtime: The `numpy.dtype` type-aliases have been replaced with\r\nspecialized `dtype` *subtypes*, and the previously missing annotations\r\nfor `numpy.dtypes.StringDType` have been added.\r\n\r\n([gh-27008](https://github.com/numpy/numpy/pull/27008))\r\n\r\n## Performance improvements and changes\r\n\r\n-   `numpy.save` now uses pickle protocol version 4 for saving arrays\r\n    with object dtype, which allows for pickle objects larger than 4GB\r\n    and improves saving speed by about 5% for large arrays.\r\n\r\n    ([gh-26388](https://github.com/numpy/numpy/pull/26388))\r\n\r\n-   OpenBLAS on x86_64 and i686 is built with fewer kernels. Based on\r\n    benchmarking, there are 5 clusters of performance around these\r\n    kernels: `PRESCOTT NEHALEM SANDYBRIDGE HASWELL SKYLAKEX`.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   OpenBLAS on windows is linked without quadmath, simplifying\r\n    licensing\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   Due to a regression in OpenBLAS on windows, the performance\r\n    improvements when using multiple threads for OpenBLAS 0.3.26 were\r\n    reverted.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n### `ma.cov` and `ma.corrcoef` are now significantly faster\r\n\r\nThe private function has been refactored along with `ma.cov` and\r\n`ma.corrcoef`. They are now significantly faster, particularly on large,\r\nmasked arrays.\r\n\r\n([gh-26285](https://github.com/numpy/numpy/pull/26285))\r\n\r\n## Changes\r\n\r\n-   As `numpy.vecdot` is now a ufunc it has a less precise signature.\r\n    This is due to the limitations of ufunc\\'s typing stub.\r\n\r\n    ([gh-26313](https://github.com/numpy/numpy/pull/26313))\r\n\r\n-   `numpy.floor`, `numpy.ceil`, and `numpy.trunc` now won\\'t perform\r\n    casting to a floating dtype for integer and boolean dtype input\r\n    arrays.\r\n\r\n    ([gh-26766](https://github.com/numpy/numpy/pull/26766))\r\n\r\n### `ma.corrcoef` may return a slightly different result\r\n\r\nA pairwise observation approach is currently used in `ma.corrcoef` to\r\ncalculate the standard deviations for each pair of variables. This has\r\nbeen changed as it is being used to normalise the covariance, estimated\r\nusing `ma.cov`, which does not consider the observations for each\r\nvariable in a pairwise manner, rendering it unnecessary. The\r\nnormalisation has been replaced by the more appropriate standard\r\ndeviation for each variable, which significantly reduces the wall time,\r\nbut will return slightly different estimates of the correlation\r\ncoefficients in cases where the observations between a pair of variables\r\nare not aligned. However, it will return the same estimates in all other\r\ncases, including returning the same correlation matrix as `corrcoef`\r\nwhen using a masked array with no masked values.\r\n\r\n([gh-26285](https://github.com/numpy/numpy/pull/26285))\r\n\r\n### Cast-safety fixes in `copyto` and `full`\r\n\r\n`copyto` now uses NEP 50 correctly and applies this to its cast safety.\r\nPython integer to NumPy integer casts and Python float to NumPy float\r\ncasts are now considered \\\"safe\\\" even if assignment may fail or\r\nprecision may be lost. This means the following examples change\r\nslightly:\r\n\r\n-   `np.copyto(int8_arr, 1000)` previously performed an unsafe/same-kind cast\r\n     of the Python integer. It will now always raise, to achieve an\r\n     unsafe cast you must pass an array or NumPy scalar.\r\n\r\n-   `np.copyto(uint8_arr, 1000, casting=\"safe\")` will raise an\r\n    OverflowError rather than a TypeError due to same-kind casting.\r\n\r\n-   `np.copyto(float32_arr, 1e300, casting=\"safe\")` will overflow to\r\n    `inf` (float32 cannot hold `1e300`) rather raising a TypeError.\r\n\r\nFurther, only the dtype is used when assigning NumPy scalars (or 0-d\r\narrays), meaning that the following behaves differently:\r\n\r\n-   `np.copyto(float32_arr, np.float64(3.0), casting=\"safe\")` raises.\r\n-   `np.coptyo(int8_arr, np.int64(100), casting=\"safe\")` raises.\r\n    Previously, NumPy checked whether the 100 fits the `int8_arr`.\r\n\r\nThis aligns `copyto`, `full`, and `full_like` with the correct NumPy 2\r\nbehavior.\r\n\r\n([gh-27091](https://github.com/numpy/numpy/pull/27091))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    2323404663c0b2a86362319d7526eb80  numpy-2.1.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    3d4bca8d05eb1eba859e77ff8f91d843  numpy-2.1.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    9bd065f147dbf3f2d59ab57bff4f0074  numpy-2.1.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    47d177533511901cd6bf77f72cbd3d6e  numpy-2.1.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    530b7f38f64216f1322b39bc50f36c0c  numpy-2.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d2a3161a10811a675a29a63e25636d83  numpy-2.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4e9fb20b080f7931791da71708740b83  numpy-2.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    776eb610795d63217980a36eb23bf268  numpy-2.1.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    8328b9e2afa4013aaf3e4963349445e2  numpy-2.1.0-cp310-cp310-win32.whl\r\n    e3184b9979192c8d7b80deb2af16d6bb  numpy-2.1.0-cp310-cp310-win_amd64.whl\r\n    54571aef9d9081e35bebef10f8d64e75  numpy-2.1.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    841dac2386c1da870a384b64cd31e32b  numpy-2.1.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    0fe85239ebe336d2baaddcb0ed001dc7  numpy-2.1.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    772a55a6c46f7b643af4640c2ca68d70  numpy-2.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    64fefbc527229521cf2a516b778b8aa7  numpy-2.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5cdb3d262d8c513b0f08cd1b6ba48512  numpy-2.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    16140f5de42e87d84b80c350fd014893  numpy-2.1.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    5e37df534d167af1966e099e0be9d94a  numpy-2.1.0-cp311-cp311-win32.whl\r\n    ee443aa000621bed8bb2d6a94afd89b5  numpy-2.1.0-cp311-cp311-win_amd64.whl\r\n    d8c911fc34a8dad4ed821036563b5758  numpy-2.1.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    ec25d637c43ae8229052e62a4f40f2d2  numpy-2.1.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    67c7abca3d0339f17a8543abc0e7bf11  numpy-2.1.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    0d36ec6a64cbef1d727eb608a236ad2c  numpy-2.1.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    0eedab574a3b75ec237be910e9717153  numpy-2.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    73dd2a5d0c85007bf5fdb4b7f66b8451  numpy-2.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    94fb0cfbc647a34177c766570fad752b  numpy-2.1.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    de3efbbcd792a1f82d0e3e175ea02ca9  numpy-2.1.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    9a63ebbfb3c4c6eba77ef0723a5dc86f  numpy-2.1.0-cp312-cp312-win32.whl\r\n    c68bc27545ac68c54935a1d0278b18f6  numpy-2.1.0-cp312-cp312-win_amd64.whl\r\n    f2795bb974af42e2723e32af9b14b66d  numpy-2.1.0-cp313-cp313-macosx_10_13_x86_64.whl\r\n    2f7426b06a332ea7a20159f3c06d67d1  numpy-2.1.0-cp313-cp313-macosx_11_0_arm64.whl\r\n    fcef18e031fc8588227023bac55d9636  numpy-2.1.0-cp313-cp313-macosx_14_0_arm64.whl\r\n    cbb5ca4dc798ea397344c93a2549e73e  numpy-2.1.0-cp313-cp313-macosx_14_0_x86_64.whl\r\n    573213bea3a67452a310355adc7c6aa1  numpy-2.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    24f8c8a1235aeaedb8f154a984b3c78b  numpy-2.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b2ef762c0ebb02b58a339c1e38f032b2  numpy-2.1.0-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    50e68cbfeb330aff607969c30251632d  numpy-2.1.0-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    21228342cd1b4ff8c7ec1aea45c07186  numpy-2.1.0-cp313-cp313-win32.whl\r\n    8d234b05f0c4faf7b9884a1f0f19c23d  numpy-2.1.0-cp313-cp313-win_amd64.whl\r\n    e0c19ca29fa8e8e051107cd36b978f05  numpy-2.1.0-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    98756f2ff9adc2cf374c28db77e28312  numpy-2.1.0-cp313-cp313t-macosx_11_0_arm64.whl\r\n    69786349d1f392dc6ac3fe00271e941b  numpy-2.1.0-cp313-cp313t-macosx_14_0_arm64.whl\r\n    4d1481bcb17aaebfc785e005455da223  numpy-2.1.0-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    1d403eda14369ab023d5ae1c15dce25c  numpy-2.1.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    cdeece2cd6508eeee5a4c3150b58ec59  numpy-2.1.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    85347b754d8324c508f7aeb7de243feb  numpy-2.1.0-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    6ff18d36d0940de6c1cc962a61b44bd5  numpy-2.1.0-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    2f7d60a99c236a8f909bd86b8ed1e3a4  numpy-2.1.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    dc610133d9f09e5b3d396859e75c5593  numpy-2.1.0-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    6a2883ee5b16ab5c031037cc63c20e9b  numpy-2.1.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c914ba2fe3fcdcd04c8fe6a8374ea5fb  numpy-2.1.0-pp310-pypy310_pp73-win_amd64.whl\r\n    4cb2230ffa1cc41329ae29bd69ee08de  numpy-2.1.0.tar.gz\r\n\r\n### SHA256\r\n\r\n    6326ab99b52fafdcdeccf602d6286191a79fe2fda0ae90573c5814cd2b0bc1b8  numpy-2.1.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    0937e54c09f7a9a68da6889362ddd2ff584c02d015ec92672c099b61555f8911  numpy-2.1.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    30014b234f07b5fec20f4146f69e13cfb1e33ee9a18a1879a0142fbb00d47673  numpy-2.1.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    899da829b362ade41e1e7eccad2cf274035e1cb36ba73034946fccd4afd8606b  numpy-2.1.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    08801848a40aea24ce16c2ecde3b756f9ad756586fb2d13210939eb69b023f5b  numpy-2.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    398049e237d1aae53d82a416dade04defed1a47f87d18d5bd615b6e7d7e41d1f  numpy-2.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0abb3916a35d9090088a748636b2c06dc9a6542f99cd476979fb156a18192b84  numpy-2.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    10e2350aea18d04832319aac0f887d5fcec1b36abd485d14f173e3e900b83e33  numpy-2.1.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    f6b26e6c3b98adb648243670fddc8cab6ae17473f9dc58c51574af3e64d61211  numpy-2.1.0-cp310-cp310-win32.whl\r\n    f505264735ee074250a9c78247ee8618292091d9d1fcc023290e9ac67e8f1afa  numpy-2.1.0-cp310-cp310-win_amd64.whl\r\n    76368c788ccb4f4782cf9c842b316140142b4cbf22ff8db82724e82fe1205dce  numpy-2.1.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    f8e93a01a35be08d31ae33021e5268f157a2d60ebd643cfc15de6ab8e4722eb1  numpy-2.1.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    9523f8b46485db6939bd069b28b642fec86c30909cea90ef550373787f79530e  numpy-2.1.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    54139e0eb219f52f60656d163cbe67c31ede51d13236c950145473504fa208cb  numpy-2.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f5ebbf9fbdabed208d4ecd2e1dfd2c0741af2f876e7ae522c2537d404ca895c3  numpy-2.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    378cb4f24c7d93066ee4103204f73ed046eb88f9ad5bb2275bb9fa0f6a02bd36  numpy-2.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    d8f699a709120b220dfe173f79c73cb2a2cab2c0b88dd59d7b49407d032b8ebd  numpy-2.1.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    ffbd6faeb190aaf2b5e9024bac9622d2ee549b7ec89ef3a9373fa35313d44e0e  numpy-2.1.0-cp311-cp311-win32.whl\r\n    0af3a5987f59d9c529c022c8c2a64805b339b7ef506509fba7d0556649b9714b  numpy-2.1.0-cp311-cp311-win_amd64.whl\r\n    fe76d75b345dc045acdbc006adcb197cc680754afd6c259de60d358d60c93736  numpy-2.1.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    f358ea9e47eb3c2d6eba121ab512dfff38a88db719c38d1e67349af210bc7529  numpy-2.1.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    dd94ce596bda40a9618324547cfaaf6650b1a24f5390350142499aa4e34e53d1  numpy-2.1.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    b47c551c6724960479cefd7353656498b86e7232429e3a41ab83be4da1b109e8  numpy-2.1.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    a0756a179afa766ad7cb6f036de622e8a8f16ffdd55aa31f296c870b5679d745  numpy-2.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    24003ba8ff22ea29a8c306e61d316ac74111cebf942afbf692df65509a05f111  numpy-2.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b34fa5e3b5d6dc7e0a4243fa0f81367027cb6f4a7215a17852979634b5544ee0  numpy-2.1.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    c4f982715e65036c34897eb598d64aef15150c447be2cfc6643ec7a11af06574  numpy-2.1.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    c4cd94dfefbefec3f8b544f61286584292d740e6e9d4677769bc76b8f41deb02  numpy-2.1.0-cp312-cp312-win32.whl\r\n    a0cdef204199278f5c461a0bed6ed2e052998276e6d8ab2963d5b5c39a0500bc  numpy-2.1.0-cp312-cp312-win_amd64.whl\r\n    8ab81ccd753859ab89e67199b9da62c543850f819993761c1e94a75a814ed667  numpy-2.1.0-cp313-cp313-macosx_10_13_x86_64.whl\r\n    442596f01913656d579309edcd179a2a2f9977d9a14ff41d042475280fc7f34e  numpy-2.1.0-cp313-cp313-macosx_11_0_arm64.whl\r\n    848c6b5cad9898e4b9ef251b6f934fa34630371f2e916261070a4eb9092ffd33  numpy-2.1.0-cp313-cp313-macosx_14_0_arm64.whl\r\n    54c6a63e9d81efe64bfb7bcb0ec64332a87d0b87575f6009c8ba67ea6374770b  numpy-2.1.0-cp313-cp313-macosx_14_0_x86_64.whl\r\n    652e92fc409e278abdd61e9505649e3938f6d04ce7ef1953f2ec598a50e7c195  numpy-2.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0ab32eb9170bf8ffcbb14f11613f4a0b108d3ffee0832457c5d4808233ba8977  numpy-2.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8fb49a0ba4d8f41198ae2d52118b050fd34dace4b8f3fb0ee34e23eb4ae775b1  numpy-2.1.0-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    44e44973262dc3ae79e9063a1284a73e09d01b894b534a769732ccd46c28cc62  numpy-2.1.0-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    ab83adc099ec62e044b1fbb3a05499fa1e99f6d53a1dde102b2d85eff66ed324  numpy-2.1.0-cp313-cp313-win32.whl\r\n    de844aaa4815b78f6023832590d77da0e3b6805c644c33ce94a1e449f16d6ab5  numpy-2.1.0-cp313-cp313-win_amd64.whl\r\n    343e3e152bf5a087511cd325e3b7ecfd5b92d369e80e74c12cd87826e263ec06  numpy-2.1.0-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    f07fa2f15dabe91259828ce7d71b5ca9e2eb7c8c26baa822c825ce43552f4883  numpy-2.1.0-cp313-cp313t-macosx_11_0_arm64.whl\r\n    5474dad8c86ee9ba9bb776f4b99ef2d41b3b8f4e0d199d4f7304728ed34d0300  numpy-2.1.0-cp313-cp313t-macosx_14_0_arm64.whl\r\n    1f817c71683fd1bb5cff1529a1d085a57f02ccd2ebc5cd2c566f9a01118e3b7d  numpy-2.1.0-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    3a3336fbfa0d38d3deacd3fe7f3d07e13597f29c13abf4d15c3b6dc2291cbbdd  numpy-2.1.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7a894c51fd8c4e834f00ac742abad73fc485df1062f1b875661a3c1e1fb1c2f6  numpy-2.1.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9156ca1f79fc4acc226696e95bfcc2b486f165a6a59ebe22b2c1f82ab190384a  numpy-2.1.0-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    624884b572dff8ca8f60fab591413f077471de64e376b17d291b19f56504b2bb  numpy-2.1.0-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    15ef8b2177eeb7e37dd5ef4016f30b7659c57c2c0b57a779f1d537ff33a72c7b  numpy-2.1.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    e5f0642cdf4636198a4990de7a71b693d824c56a757862230454629cf62e323d  numpy-2.1.0-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    f15976718c004466406342789f31b6673776360f3b1e3c575f25302d7e789575  numpy-2.1.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6c1de77ded79fef664d5098a66810d4d27ca0224e9051906e634b3f7ead134c2  numpy-2.1.0-pp310-pypy310_pp73-win_amd64.whl\r\n    7dc90da0081f7e1da49ec4e398ede6a8e9cc4f5ebe5f9e06b443ed889ee9aaa2  numpy-2.1.0.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/170776414/reactions",
      "total_count": 77,
      "+1": 21,
      "-1": 0,
      "laugh": 6,
      "hooray": 16,
      "confused": 0,
      "heart": 12,
      "rocket": 20,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/169682490",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/169682490/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/169682490/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.1.0rc1",
    "id": 169682490,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84KHSY6",
    "tag_name": "v2.1.0rc1",
    "target_commitish": "main",
    "name": "2.1.0rc1 (Aug 11, 2024)",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-08-11T16:05:21Z",
    "published_at": "2024-08-11T18:55:00Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/185305606",
        "id": 185305606,
        "node_id": "RA_kwDOAA3dP84LC4oG",
        "name": "2.1.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 51800,
        "download_count": 5,
        "created_at": "2024-08-11T18:54:31Z",
        "updated_at": "2024-08-11T18:54:32Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0rc1/2.1.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/185305457",
        "id": 185305457,
        "node_id": "RA_kwDOAA3dP84LC4lx",
        "name": "numpy-2.1.0rc1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18868567,
        "download_count": 22,
        "created_at": "2024-08-11T18:52:59Z",
        "updated_at": "2024-08-11T18:53:46Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0rc1/numpy-2.1.0rc1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/185305622",
        "id": 185305622,
        "node_id": "RA_kwDOAA3dP84LC4oW",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 23694,
        "download_count": 7,
        "created_at": "2024-08-11T18:54:48Z",
        "updated_at": "2024-08-11T18:54:49Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.1.0rc1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.1.0rc1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.1.0rc1",
    "body": "# NumPy 2.1.0 Release Notes\r\n\r\nNumPy 2.1.0 provides support for the upcoming Python 3.13 release and\r\ndrops support for Python 3.9. In addition to the usual bug fixes and\r\nupdated Python support, it helps get us back into our usual release\r\ncycle after the extended development of 2.0. The highlights for this\r\nrelease are:\r\n\r\n-   Support for the array-api 2023.12 standard.\r\n-   Support for Python 3.13.\r\n-   Preliminary support for free threaded Python 3.13.\r\n\r\nPython versions 3.10-3.13 are supported in this release.\r\n\r\n## New functions\r\n\r\n### New function `numpy.unstack`\r\n\r\nA new function `np.unstack(array, axis=...)` was added, which splits an\r\narray into a tuple of arrays along an axis. It serves as the inverse of\r\n[numpy.stack]{.title-ref}.\r\n\r\n([gh-26579](https://github.com/numpy/numpy/pull/26579))\r\n\r\n## Deprecations\r\n\r\n-   The `fix_imports` keyword argument in `numpy.save` is deprecated.\r\n    Since NumPy 1.17, `numpy.save` uses a pickle protocol that no longer\r\n    supports Python 2, and ignored `fix_imports` keyword. This keyword\r\n    is kept only for backward compatibility. It is now deprecated.\r\n\r\n    ([gh-26452](https://github.com/numpy/numpy/pull/26452))\r\n\r\n-   Passing non-integer inputs as the first argument of\r\n    [bincount]{.title-ref} is now deprecated, because such inputs are\r\n    silently cast to integers with no warning about loss of precision.\r\n\r\n    ([gh-27076](https://github.com/numpy/numpy/pull/27076))\r\n\r\n## Expired deprecations\r\n\r\n-   Scalars and 0D arrays are disallowed for `numpy.nonzero` and\r\n    `numpy.ndarray.nonzero`.\r\n\r\n    ([gh-26268](https://github.com/numpy/numpy/pull/26268))\r\n\r\n-   `set_string_function` internal function was removed and\r\n    `PyArray_SetStringFunction` was stubbed out.\r\n\r\n    ([gh-26611](https://github.com/numpy/numpy/pull/26611))\r\n\r\n## C API changes\r\n\r\n### API symbols now hidden but customizable\r\n\r\nNumPy now defaults to hide the API symbols it adds to allow all NumPy\r\nAPI usage. This means that by default you cannot dynamically fetch the\r\nNumPy API from another library (this was never possible on windows).\r\n\r\nIf you are experiencing linking errors related to `PyArray_API` or\r\n`PyArray_RUNTIME_VERSION`, you can define the `NPY_API_SYMBOL_ATTRIBUTE`\r\nto opt-out of this change.\r\n\r\nIf you are experiencing problems due to an upstream header including\r\nNumPy, the solution is to make sure you\r\n`#include \"numpy/ndarrayobject.h\"` before their header and import NumPy\r\nyourself based on `including-the-c-api`.\r\n\r\n([gh-26103](https://github.com/numpy/numpy/pull/26103))\r\n\r\n### Many shims removed from npy_3kcompat.h\r\n\r\nMany of the old shims and helper functions were removed from\r\n`npy_3kcompat.h`. If you find yourself in need of these, vendor the\r\nprevious version of the file into your codebase.\r\n\r\n([gh-26842](https://github.com/numpy/numpy/pull/26842))\r\n\r\n### New `PyUFuncObject` field `process_core_dims_func`\r\n\r\nThe field `process_core_dims_func` was added to the structure\r\n`PyUFuncObject`. For generalized ufuncs, this field can be set to a\r\nfunction of type `PyUFunc_ProcessCoreDimsFunc` that will be called when\r\nthe ufunc is called. It allows the ufunc author to check that core\r\ndimensions satisfy additional constraints, and to set output core\r\ndimension sizes if they have not been provided.\r\n\r\n([gh-26908](https://github.com/numpy/numpy/pull/26908))\r\n\r\n## New Features\r\n\r\n-   `numpy.reshape` and `numpy.ndarray.reshape` now support `shape` and\r\n    `copy` arguments.\r\n\r\n    ([gh-26292](https://github.com/numpy/numpy/pull/26292))\r\n\r\n-   NumPy now supports DLPack v1, support for older versions will be\r\n    deprecated in the future.\r\n\r\n    ([gh-26501](https://github.com/numpy/numpy/pull/26501))\r\n\r\n-   `numpy.asanyarray` now supports `copy` and `device` arguments,\r\n    matching `numpy.asarray`.\r\n\r\n    ([gh-26580](https://github.com/numpy/numpy/pull/26580))\r\n\r\n-   `numpy.printoptions`, `numpy.get_printoptions`, and\r\n    `numpy.set_printoptions` now support a new option, `override_repr`,\r\n    for defining custom `repr(array)` behavior.\r\n\r\n    ([gh-26611](https://github.com/numpy/numpy/pull/26611))\r\n\r\n-   `numpy.cumulative_sum` and `numpy.cumulative_prod` were added as\r\n    Array API compatible alternatives for `numpy.cumsum` and\r\n    `numpy.cumprod`. The new functions can include a fixed initial\r\n    (zeros for `sum` and ones for `prod`) in the result.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n-   `numpy.clip` now supports `max` and `min` keyword arguments which\r\n    are meant to replace `a_min` and `a_max`. Also, for `np.clip(a)` or\r\n    `np.clip(a, None, None)` a copy of the input array will be returned\r\n    instead of raising an error.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n-   `numpy.astype` now supports `device` argument.\r\n\r\n    ([gh-26724](https://github.com/numpy/numpy/pull/26724))\r\n\r\n### `f2py` can generate freethreading-compatible C extensions\r\n\r\nPass `--freethreading-compatible` to the f2py CLI tool to produce a C\r\nextension marked as compatible with the free threading CPython\r\ninterpreter. Doing so prevents the interpreter from re-enabling the GIL\r\nat runtime when it imports the C extension. Note that `f2py` does not\r\nanalyze fortran code for thread safety, so you must verify that the\r\nwrapped fortran code is thread safe before marking the extension as\r\ncompatible.\r\n\r\n([gh-26981](https://github.com/numpy/numpy/pull/26981))\r\n\r\n## Improvements\r\n\r\n### `histogram` auto-binning now returns bin sizes \\>=1 for integer input data\r\n\r\nFor integer input data, bin sizes smaller than 1 result in spurious\r\nempty bins. This is now avoided when the number of bins is computed\r\nusing one of the algorithms provided by `histogram_bin_edges`.\r\n\r\n([gh-12150](https://github.com/numpy/numpy/pull/12150))\r\n\r\n### `ndarray` shape-type parameter is now covariant and bound to `tuple[int, ...]`\r\n\r\nStatic typing for `ndarray` is a long-term effort that continues with\r\nthis change. It is a generic type with type parameters for the shape and\r\nthe data type. Previously, the shape type parameter could be any value.\r\nThis change restricts it to a tuple of ints, as one would expect from\r\nusing `ndarray.shape`. Further, the shape-type parameter has been\r\nchanged from invariant to covariant. This change also applies to the\r\nsubtypes of `ndarray`, e.g. `numpy.ma.MaskedArray`. See the [typing\r\ndocs](https://typing.readthedocs.io/en/latest/reference/generics.html#variance-of-generic-types)\r\nfor more information.\r\n\r\n([gh-26081](https://github.com/numpy/numpy/pull/26081))\r\n\r\n### `np.quantile` with method `closest_observation` chooses nearest even order statistic\r\n\r\nThis changes the definition of nearest for border cases from the nearest\r\nodd order statistic to nearest even order statistic. The numpy\r\nimplementation now matches other reference implementations.\r\n\r\n([gh-26656](https://github.com/numpy/numpy/pull/26656))\r\n\r\n### `lapack_lite` is now thread safe\r\n\r\nNumPy provides a minimal low-performance version of LAPACK named\r\n`lapack_lite` that can be used if no BLAS/LAPACK system is detected at\r\nbuild time.\r\n\r\nUntil now, `lapack_lite` was not thread safe. Single-threaded use cases\r\ndid not hit any issues, but running linear algebra operations in\r\nmultiple threads could lead to errors, incorrect results, or segfaults\r\ndue to data races.\r\n\r\nWe have added a global lock, serializing access to `lapack_lite` in\r\nmultiple threads.\r\n\r\n([gh-26750](https://github.com/numpy/numpy/pull/26750))\r\n\r\n### The `numpy.printoptions` context manager is now thread and async-safe\r\n\r\nIn prior versions of NumPy, the printoptions were defined using a\r\ncombination of Python and C global variables. We have refactored so the\r\nstate is stored in a python `ContextVar`, making the context manager\r\nthread and async-safe.\r\n\r\n([gh-26846](https://github.com/numpy/numpy/pull/26846))\r\n\r\n## Performance improvements and changes\r\n\r\n-   `numpy.save` now uses pickle protocol version 4 for saving arrays\r\n    with object dtype, which allows for pickle objects larger than 4GB\r\n    and improves saving speed by about 5% for large arrays.\r\n\r\n    ([gh-26388](https://github.com/numpy/numpy/pull/26388))\r\n\r\n-   OpenBLAS on x86_64 and i686 is built with fewer kernels. Based on\r\n    benchmarking, there are 5 clusters of performance around these\r\n    kernels: `PRESCOTT NEHALEM SANDYBRIDGE HASWELL SKYLAKEX`.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   OpenBLAS on windows is linked without quadmath, simplifying\r\n    licensing\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n-   Due to a regression in OpenBLAS on windows, the performance\r\n    improvements when using multiple threads for OpenBLAS 0.3.26 were\r\n    reverted.\r\n\r\n    ([gh-27147](https://github.com/numpy/numpy/pull/27147))\r\n\r\n### `ma.cov` and `ma.corrcoef` are now significantly faster\r\n\r\nThe private function has been refactored along with `ma.cov` and\r\n`ma.corrcoef`. They are now significantly faster, particularly on large,\r\nmasked arrays.\r\n\r\n([gh-26285](https://github.com/numpy/numpy/pull/26285))\r\n\r\n## Changes\r\n\r\n-   As `numpy.vecdot` is now a ufunc it has a less precise signature.\r\n    This is due to the limitations of ufunc\\'s typing stub.\r\n\r\n    ([gh-26313](https://github.com/numpy/numpy/pull/26313))\r\n\r\n-   `numpy.floor`, `numpy.ceil`, and `numpy.trunc` now won\\'t perform\r\n    casting to a floating dtype for integer and boolean dtype input\r\n    arrays.\r\n\r\n    ([gh-26766](https://github.com/numpy/numpy/pull/26766))\r\n\r\n### `ma.corrcoef` may return a slightly different result\r\n\r\nA pairwise observation approach is currently used in `ma.corrcoef` to\r\ncalculate the standard deviations for each pair of variables. This has\r\nbeen changed as it is being used to normalise the covariance, estimated\r\nusing `ma.cov`, which does not consider the observations for each\r\nvariable in a pairwise manner, rendering it unnecessary. The\r\nnormalisation has been replaced by the more appropriate standard\r\ndeviation for each variable, which significantly reduces the wall time,\r\nbut will return slightly different estimates of the correlation\r\ncoefficients in cases where the observations between a pair of variables\r\nare not aligned. However, it will return the same estimates in all other\r\ncases, including returning the same correlation matrix as `corrcoef`\r\nwhen using a masked array with no masked values.\r\n\r\n([gh-26285](https://github.com/numpy/numpy/pull/26285))\r\n\r\n### Cast-safety fixes in `copyto` and `full`\r\n\r\n`copyto` now uses NEP 50 correctly and applies this to its cast safety.\r\nPython integer to NumPy integer casts and Python float to NumPy float\r\ncasts are now considered \\\"safe\\\" even if assignment may fail or\r\nprecision may be lost. This means the following examples change\r\nslightly:\r\n\r\n-   \r\n\r\n    `np.copyto(int8_arr, 1000)` previously performed an unsafe/same-kind cast\r\n\r\n    :   of the Python integer. It will now always raise, to achieve an\r\n        unsafe cast you must pass an array or NumPy scalar.\r\n\r\n-   `np.copyto(uint8_arr, 1000, casting=\"safe\")` will raise an\r\n    OverflowError rather than a TypeError due to same-kind casting.\r\n\r\n-   `np.copyto(float32_arr, 1e300, casting=\"safe\")` will overflow to\r\n    `inf` (float32 cannot hold `1e300`) rather raising a TypeError.\r\n\r\nFurther, only the dtype is used when assigning NumPy scalars (or 0-d\r\narrays), meaning that the following behaves differently:\r\n\r\n-   `np.copyto(float32_arr, np.float64(3.0), casting=\"safe\")` raises.\r\n-   `np.coptyo(int8_arr, np.int64(100), casting=\"safe\")` raises.\r\n    Previously, NumPy checked whether the 100 fits the `int8_arr`.\r\n\r\nThis aligns `copyto`, `full`, and `full_like` with the correct NumPy 2\r\nbehavior.\r\n\r\n([gh-27091](https://github.com/numpy/numpy/pull/27091))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    8ac48250d6b96fce749fbd0fcf464ff9  numpy-2.1.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    13f92a9f7ed33d71ccfb742de0e3fec9  numpy-2.1.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    ba9286f6bd7a238eaead5ae2111d23a8  numpy-2.1.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    dc2b6c2f586090bc80268a81afec4c6f  numpy-2.1.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    16a13eb5dfad8008baf937026fa2db62  numpy-2.1.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c5d5697af3047b8a3dc7a5d6ca86ec86  numpy-2.1.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0e48596167a215333f277ff29ea29c45  numpy-2.1.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    381957df326f45c0fba0b64a00a043ac  numpy-2.1.0rc1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    676fd27cea96af93142b4b420d9cb8af  numpy-2.1.0rc1-cp310-cp310-win32.whl\r\n    b30bff4e8846c52e58fab9564b422ed2  numpy-2.1.0rc1-cp310-cp310-win_amd64.whl\r\n    4ee7c88591a445b3b5969999eeb7b0a7  numpy-2.1.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    556393087caa0bb6eec1a76dfe2cad32  numpy-2.1.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    4e2b2eb39fc3a6ca28048588fc6a5338  numpy-2.1.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    34f5ab41c4c6a3ecbf0cc0b108a63942  numpy-2.1.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    689944e33b04a11878aecaf59611341b  numpy-2.1.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5d2a53263c7daa9a3b9a89a4dc8ef3ac  numpy-2.1.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    29e27f96f56d0d1b59f9b261ed6fe438  numpy-2.1.0rc1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    f07177a3b6779e6747137e2173a545de  numpy-2.1.0rc1-cp311-cp311-win32.whl\r\n    f2d1f68c8c0455cba32be4aa50f5afed  numpy-2.1.0rc1-cp311-cp311-win_amd64.whl\r\n    8500240d88e6e3afc281c562af083fd7  numpy-2.1.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    3280b4ad3a5ceb814d739a9c980d16d6  numpy-2.1.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    77a6339def5185efa262658c51d6e44e  numpy-2.1.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    2e3a71b9ef1e60ce37949af87475f5f7  numpy-2.1.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    3c1877cd6108cb502ac1df39cfec86d0  numpy-2.1.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ae1a9945726e7d970ee0b6232d5d9b4d  numpy-2.1.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f1a71557d35d8b2f87f277e85c958b2b  numpy-2.1.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    b1ba7049684a7d674c006325b4606dd1  numpy-2.1.0rc1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    5944d81459d443a72346e7ea767b72a2  numpy-2.1.0rc1-cp312-cp312-win32.whl\r\n    f8b17b8f9bddb1c21844ae2475f72389  numpy-2.1.0rc1-cp312-cp312-win_amd64.whl\r\n    084ecd080c6871ed034ef69cda7573de  numpy-2.1.0rc1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    dbeca273db0240ca7fe395611f0c23c8  numpy-2.1.0rc1-cp313-cp313-macosx_11_0_arm64.whl\r\n    242794f34818844e0fe695ec42c62dbe  numpy-2.1.0rc1-cp313-cp313-macosx_14_0_arm64.whl\r\n    3f1c04457ce363250ac5d37935172527  numpy-2.1.0rc1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    2ce171281092e5f5d9f3d1ce8a615a94  numpy-2.1.0rc1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    95416f883c14a10fca22007594c94a94  numpy-2.1.0rc1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    36c07d317516f84cb376cc475b3ed13d  numpy-2.1.0rc1-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    e7c1f9c2964e4d71878a1654194452b2  numpy-2.1.0rc1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    ea27f5a8b6dfa219b630aee52e621c8c  numpy-2.1.0rc1-cp313-cp313-win32.whl\r\n    1821d7e0980f297296509090cfd9c288  numpy-2.1.0rc1-cp313-cp313-win_amd64.whl\r\n    1b7f8160179aef59822e3eb43cb8a210  numpy-2.1.0rc1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    fed8d00d6819c467ef97e0b7611624cd  numpy-2.1.0rc1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    f58df469b6ec5e1755b1572702b56716  numpy-2.1.0rc1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    fe13066a540c68598b1180bec61e8e30  numpy-2.1.0rc1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    67d51902daf5bc9de69c6e46dfea9a64  numpy-2.1.0rc1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8409acd1916df8f8630260207a5b4eec  numpy-2.1.0rc1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e64a5ccac64641cbbbd2caa652ff815a  numpy-2.1.0rc1-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    488776d734d4eddc9c1540bf862106bb  numpy-2.1.0rc1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    fbc57a82683e2c9697a6992290ebe337  numpy-2.1.0rc1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    ed26d5d79acc222e107900668edcd01f  numpy-2.1.0rc1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    c29f8c6a55c1ac9e5c693f63ec17f251  numpy-2.1.0rc1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4beab0a7bde06687f699e75cd04ec024  numpy-2.1.0rc1-pp310-pypy310_pp73-win_amd64.whl\r\n    88e72b72f2859ff084eb3863fac3ac20  numpy-2.1.0rc1.tar.gz\r\n\r\n### SHA256\r\n\r\n    590acae9e4b0baa895850c0edab988c329a196bacc7326f3249fa5fe7b94e5a8  numpy-2.1.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    61cf71f62033987ed49b78a19465f40fcbf6f7e94674eda21096ebde6935c2e0  numpy-2.1.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    0c489f6c47bbed44918c9c8036a679614920da2a45f481d0eca2ad168ca5327f  numpy-2.1.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    4c33387be8eadc07d0834e0b9e2ead53117fe76ab2dadd37ee80d1df80be4c05  numpy-2.1.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    f412923d4ce1ec29aa3cf7752598e5eb154f549cfbf62d7c6f3cc76cb25b32e0  numpy-2.1.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    06156c55771da4952a2432aa457cd96159675dcab4336f5307bff042535cb6ea  numpy-2.1.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    be3ddd26a22d032914cfca5ef7db74f31adbd6c9d88a6f4e21ebd8e057d9474c  numpy-2.1.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    12b38b0f3ddc1342863a6849f4fcb3f506e1d21179ebd34b7aa55a30cb50899f  numpy-2.1.0rc1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    17581a2080012afe603c43005c9d050570e54683dde0d395e3edb4fa9c25f328  numpy-2.1.0rc1-cp310-cp310-win32.whl\r\n    8ee3ab33c02a0bd7d219a184c9bc43811de373551529981035673ca2a1ba7b93  numpy-2.1.0rc1-cp310-cp310-win_amd64.whl\r\n    2d3d1e61191e408a11658a64e9f9bb61741ad28c160576c95dac9df6f74713b4  numpy-2.1.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    4e08e733600647242a9046b6aff888e72fe8a846b00855e5136e7641b08d25d8  numpy-2.1.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    2b0e379a15c6b8eb69bb8170d10cfbb8a0dc9126b5402ee8860a2646f4111c3d  numpy-2.1.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    fea6d6939d9bf098d96c6d22bb3e4ff39f8eb3f0f26b52c8c69ba06845490095  numpy-2.1.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9a6bdc19830703eee91e7eb2d671b165febefbf5eec6a4f163d1833d23be17af  numpy-2.1.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    58a07f2947aa06ca03d922a86ac30e403ce8282cd15904606bac852bf29ea2ad  numpy-2.1.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    1a4f960e2e5c1084cf6b1d15482a5556ecc122855d631a2395063ab703d62fdd  numpy-2.1.0rc1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    f38fabd7b8d14fb7d63fbb2d07971d6edd518d2a43542c63c29164c901d2a758  numpy-2.1.0rc1-cp311-cp311-win32.whl\r\n    e82b8e0b88d493d4e882f18de30f679bf1197c82d8c799acb5fdb4068cadb945  numpy-2.1.0rc1-cp311-cp311-win_amd64.whl\r\n    dc2af0135139bbb26b1ea5bdc430e049edb745ae643cb898afb32549ce4801de  numpy-2.1.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    47f11bf152d8707217feb46e9662a8b1aa3554a8ee56b64d2aa99c3e9914f101  numpy-2.1.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    3b534c62b1887b4bfa80f633485f2a9338f5d46d720b6cc695d2ba8b38d98987  numpy-2.1.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    f4e07df8476545da7cf23f75811f4fc334b06fc50d8e945e897cfc00c8f89690  numpy-2.1.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c8458becc562ee35b30b5e53173933414cf42e56b3f4f3d80997bf0dda7308d1  numpy-2.1.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    524b5311d21741f0b3f48efcdd3442546be3b38507a4e3b0f5138e4340f5dee0  numpy-2.1.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7bcb4f360dc9e29b4f5f9fb36b35b429e731373843ccf39a22105bd809ef3138  numpy-2.1.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    5821c9831fad20cd1a8621a9ed483322ca97a9da9832690a4050ffedcb3e766b  numpy-2.1.0rc1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    1d9e0ddfb33a7a78fe92d49aaa2992a78ed5aff4cef7a21d8b1057cca075cc85  numpy-2.1.0rc1-cp312-cp312-win32.whl\r\n    86cc61c5479ed3b324011aa69484cae8f491b7f58dc0e54acf0894bdb4fae879  numpy-2.1.0rc1-cp312-cp312-win_amd64.whl\r\n    64e8de086d2e4dac41fa286412321469b4535677184e78cc78e5061b44f0e4bf  numpy-2.1.0rc1-cp313-cp313-macosx_10_13_x86_64.whl\r\n    e74dc488a27b90f31ab307b4cf3f07a45bb78a0e91cfb36d69c6eced4f36089b  numpy-2.1.0rc1-cp313-cp313-macosx_11_0_arm64.whl\r\n    f73e4fcf7455d3b734e6ecbafdbc12d3c1dd8f2146fd186e003ae1c8f00e5eed  numpy-2.1.0rc1-cp313-cp313-macosx_14_0_arm64.whl\r\n    e5a64ac6016839fd906b3d7cc1f7ecb145c7d44a310234b6843f3b23b8ec0651  numpy-2.1.0rc1-cp313-cp313-macosx_14_0_x86_64.whl\r\n    ccc68ee27362f8d3516deecffa124d1488ae20347628e357264e7e66dbdaba08  numpy-2.1.0rc1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d3d59479b98cc364b8a08ddd854c7817b5c578a521b56af5a96b3a9db18cc9b7  numpy-2.1.0rc1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    15c6bde88f242747258cfee803f3161b7a2c1ffead0817e409d95444a79b4029  numpy-2.1.0rc1-cp313-cp313-musllinux_1_1_x86_64.whl\r\n    3e9276bff9a57100b53e5f9c44469baca1e58ec612e5143db568d69ec27b65ea  numpy-2.1.0rc1-cp313-cp313-musllinux_1_2_aarch64.whl\r\n    53979581e6acdd75b7ce94e6d3b70994f9f8cf1021316d388a159f7f388bdc7f  numpy-2.1.0rc1-cp313-cp313-win32.whl\r\n    ca195cd9d1d84b3498532968237774a6e06e2a4afe706b87172f1d033b95e230  numpy-2.1.0rc1-cp313-cp313-win_amd64.whl\r\n    77fa9826cbc7273e4bc3b7aa289b86936c942fe2c91bc35617c2417e14421592  numpy-2.1.0rc1-cp313-cp313t-macosx_10_13_x86_64.whl\r\n    140c5ce21f1eccb254e550c8431825cb716eb76e896202cffa7a0d2a843506da  numpy-2.1.0rc1-cp313-cp313t-macosx_11_0_arm64.whl\r\n    713cb46d266514db773de52af677aa931cc896a4f5e52f494449c4ff53ce6051  numpy-2.1.0rc1-cp313-cp313t-macosx_14_0_arm64.whl\r\n    3f79d241e4833a2a570b6e6639d2114d497011e48a351798bba81fda51560ab7  numpy-2.1.0rc1-cp313-cp313t-macosx_14_0_x86_64.whl\r\n    48a724dbfad6f4933e2c8a22239980e1b5bc16868df3450cc4ebeb9522b7902f  numpy-2.1.0rc1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    06d14d20b7e98c8c06bb62e56f2b64747dd10c422bb8adbf1e6dd82cd8442e12  numpy-2.1.0rc1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    98a1486861fa3c603a5a3ccd56fc45b9756372bb30f6fb559b898fc2fad82e0d  numpy-2.1.0rc1-cp313-cp313t-musllinux_1_1_x86_64.whl\r\n    50b3dab872001b87052532bd4da3879fda856a2cf6c9418c19bfc94dc290e259  numpy-2.1.0rc1-cp313-cp313t-musllinux_1_2_aarch64.whl\r\n    14dea4f0d62ddd1a7f9d7b0003b35a537ac41a2b6205deec8c9c25a8e01748b4  numpy-2.1.0rc1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\r\n    4f9317da3aa64d0ee93950d3f319b3fe0169500e25c18223715cba39e89808bd  numpy-2.1.0rc1-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\r\n    0a5a25ab780b8c29e443824abefc6ca79047ceeb889a6f76d7b1953649498e93  numpy-2.1.0rc1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0816fd52956e14551d8d71319d4b4fcfa1bcb21641f2c603f4eb64c65b1e1009  numpy-2.1.0rc1-pp310-pypy310_pp73-win_amd64.whl\r\n    dc7ce867d277aa74555c67b93ef2a6f78bd7bd73e6c2bbafeb96f8bccd05b9d9  numpy-2.1.0rc1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/169682490/reactions",
      "total_count": 59,
      "+1": 23,
      "-1": 0,
      "laugh": 5,
      "hooray": 9,
      "confused": 0,
      "heart": 10,
      "rocket": 9,
      "eyes": 3
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/166405242",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/166405242/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/166405242/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.1",
    "id": 166405242,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84J6yR6",
    "tag_name": "v2.0.1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-07-20T18:47:58Z",
    "published_at": "2024-07-21T13:57:57Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/180916404",
        "id": 180916404,
        "node_id": "RA_kwDOAA3dP84KyJC0",
        "name": "2.0.1-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 3187,
        "download_count": 117,
        "created_at": "2024-07-21T13:56:03Z",
        "updated_at": "2024-07-21T13:56:03Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.1/2.0.1-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/180916410",
        "id": 180916410,
        "node_id": "RA_kwDOAA3dP84KyJC6",
        "name": "numpy-2.0.1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18872007,
        "download_count": 1348,
        "created_at": "2024-07-21T13:56:20Z",
        "updated_at": "2024-07-21T13:56:46Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.1/numpy-2.0.1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/180916450",
        "id": 180916450,
        "node_id": "RA_kwDOAA3dP84KyJDi",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 13380,
        "download_count": 164,
        "created_at": "2024-07-21T13:57:02Z",
        "updated_at": "2024-07-21T13:57:03Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.1",
    "body": "# NumPy 2.0.1 Release Notes\r\n\r\nNumPy 2.0.1 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 2.0.0 release. NumPy 2.0.1 is the last planned\r\nrelease in the 2.0.x series, 2.1.0rc1 should be out shortly.\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n**_NOTE:_**  Do not use the GitHub generated \"Source code\" files listed in the \"Assets\", they are garbage.\r\n\r\n## Improvements\r\n\r\n### `np.quantile` with method `closest_observation` chooses nearest even order statistic\r\n\r\nThis changes the definition of nearest for border cases from the nearest\r\nodd order statistic to nearest even order statistic. The numpy\r\nimplementation now matches other reference implementations.\r\n\r\n([gh-26656](https://github.com/numpy/numpy/pull/26656))\r\n\r\n## Contributors\r\n\r\nA total of 15 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   \\@vahidmech +\r\n-   Alex Herbert +\r\n-   Charles Harris\r\n-   Giovanni Del Monte +\r\n-   Leo Singer\r\n-   Lysandros Nikolaou\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Patrick J. Roddy +\r\n-   Raghuveer Devulapalli\r\n-   Ralf Gommers\r\n-   Rostan Tabet +\r\n-   Sebastian Berg\r\n-   Tyler Reddy\r\n-   Yannik Wicke +\r\n\r\n## Pull requests merged\r\n\r\nA total of 24 pull requests were merged for this release.\r\n\r\n-   [#26711](https://github.com/numpy/numpy/pull/26711): MAINT: prepare 2.0.x for further development\r\n-   [#26792](https://github.com/numpy/numpy/pull/26792): TYP: fix incorrect import in `ma/extras.pyi` stub\r\n-   [#26793](https://github.com/numpy/numpy/pull/26793): DOC: Mention \\'1.25\\' legacy printing mode in `set_printoptions`\r\n-   [#26794](https://github.com/numpy/numpy/pull/26794): DOC: Remove mention of NaN and NAN aliases from constants\r\n-   [#26821](https://github.com/numpy/numpy/pull/26821): BLD: Fix x86-simd-sort build failure on openBSD\r\n-   [#26822](https://github.com/numpy/numpy/pull/26822): BUG: Ensure output order follows input in numpy.fft\r\n-   [#26823](https://github.com/numpy/numpy/pull/26823): TYP: fix missing sys import in numeric.pyi\r\n-   [#26832](https://github.com/numpy/numpy/pull/26832): DOC: remove hack to override \\_add_newdocs_scalars\r\n-   [#26835](https://github.com/numpy/numpy/pull/26835): BUG: avoid side-effect of \\'include complex.h\\'\r\n-   [#26836](https://github.com/numpy/numpy/pull/26836): BUG: fix max_rows and chunked string/datetime reading in `loadtxt`\r\n-   [#26837](https://github.com/numpy/numpy/pull/26837): BUG: fix PyArray_ImportNumPyAPI under -Werror=strict-prototypes\r\n-   [#26856](https://github.com/numpy/numpy/pull/26856): DOC: Update some documentation\r\n-   [#26868](https://github.com/numpy/numpy/pull/26868): BUG: fancy indexing copy\r\n-   [#26869](https://github.com/numpy/numpy/pull/26869): BUG: Mismatched allocation domains in `PyArray_FillWithScalar`\r\n-   [#26870](https://github.com/numpy/numpy/pull/26870): BUG: Handle \\--f77flags and \\--f90flags for meson \\[wheel build\\]\r\n-   [#26887](https://github.com/numpy/numpy/pull/26887): BUG: Fix new DTypes and new string promotion when signature is\\...\r\n-   [#26888](https://github.com/numpy/numpy/pull/26888): BUG: remove numpy.f2py from excludedimports\r\n-   [#26959](https://github.com/numpy/numpy/pull/26959): BUG: Quantile closest_observation to round to nearest even order\r\n-   [#26960](https://github.com/numpy/numpy/pull/26960): BUG: Fix off-by-one error in amount of characters in strip\r\n-   [#26961](https://github.com/numpy/numpy/pull/26961): API: Partially revert unique with return_inverse\r\n-   [#26962](https://github.com/numpy/numpy/pull/26962): BUG,MAINT: Fix utf-8 character stripping memory access\r\n-   [#26963](https://github.com/numpy/numpy/pull/26963): BUG: Fix out-of-bound minimum offset for in1d table method\r\n-   [#26971](https://github.com/numpy/numpy/pull/26971): BUG: fix f2py tests to work with v2 API\r\n-   [#26995](https://github.com/numpy/numpy/pull/26995): BUG: Add object cast to avoid warning with limited API\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    a3e7d0f361ee7302448cae3c10844dd3  numpy-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    cff8546b69e43ae7b5050f05bdc25df2  numpy-2.0.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    1713d23342528f4f8f4027970f010068  numpy-2.0.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    20020d28606ea58f986a262daa6018f1  numpy-2.0.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    db22154ea943a707917aebc79e449bc5  numpy-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    fe86cd85f240216f64eb076a62a229d2  numpy-2.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e0ca08f85150af3cc6050d64e8c0bd27  numpy-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    b76f432906f62e31f0e09c41f3f08b4c  numpy-2.0.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    28e8109e4ef524fa5c272d6faec870ae  numpy-2.0.1-cp310-cp310-win32.whl\r\n    874beffaefdc73da42300ce691c2419c  numpy-2.0.1-cp310-cp310-win_amd64.whl\r\n    7bbe029f650c924e952da117842d456d  numpy-2.0.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    6d3d6ae26c520e93cef7f11ba3951f57  numpy-2.0.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    de6082d719437eb7468ae31c407c503e  numpy-2.0.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    d15a8d95661f8a1dfcc4eb089f9b46e8  numpy-2.0.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    c181105e074ee575ccf2c992e40f947a  numpy-2.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    00d22b299343fcdc78fbb0716ead6243  numpy-2.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d9c4f49dbedb3f3d0158f00db459bd25  numpy-2.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    63caa03e0625327ad3a756e01c83a6ca  numpy-2.0.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    99d01d768a115d448ca2b4680de15191  numpy-2.0.1-cp311-cp311-win32.whl\r\n    8d1a31eccc8b9f077312095b11f62cb2  numpy-2.0.1-cp311-cp311-win_amd64.whl\r\n    6cc86f7761a33941d8c1c552186e774b  numpy-2.0.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    67c48f352afff5f41108f1b9561d1d5c  numpy-2.0.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    1068d4eadcac6a869e0e457853b7e611  numpy-2.0.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    dfb667450315fddcf84381fc8ef16892  numpy-2.0.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    69822bbbbb65d8a7d00ae32b435f61cc  numpy-2.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    883ed6c41395fb2def6cc0d64dcb817f  numpy-2.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4b1e9fd464821a7d1de3a8ddf911311e  numpy-2.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    79e6557f40b8ed8f5973b404d98eab3d  numpy-2.0.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    85596f15d4cf85c2f78b4cc12c2cad1e  numpy-2.0.1-cp312-cp312-win32.whl\r\n    487c7c2944306f62b3770576ce903a91  numpy-2.0.1-cp312-cp312-win_amd64.whl\r\n    491093641afa21e65d6e629eb70571fc  numpy-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    5008b16c20f3d7e5a0c7764712f8908e  numpy-2.0.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    14633b898f863ea797c40ba1cf226c29  numpy-2.0.1-cp39-cp39-macosx_14_0_arm64.whl\r\n    9054ecb69d21b364e59e94aab24247cb  numpy-2.0.1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    be028cf4bb691921943939de17593dd7  numpy-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9c440ad02ff0a954f696637de37aab2d  numpy-2.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    27aec0d286eabe26d8e9149f4572dba1  numpy-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    b02eda82ee511ee27185c8a4073ea35c  numpy-2.0.1-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    cf579b902325e023b2dc444692eb5991  numpy-2.0.1-cp39-cp39-win32.whl\r\n    302c8c3118a5f55d9ef35ed8e517f6b1  numpy-2.0.1-cp39-cp39-win_amd64.whl\r\n    34c17fe980accfb76c6f348f85b3cfef  numpy-2.0.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    02676eb84379b0a223288d6fd9d76942  numpy-2.0.1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    b5300e6fe110bf69e1a8901c5c09e3f8  numpy-2.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    204a3ea7fb851e08d166c74f73f9b8a3  numpy-2.0.1-pp39-pypy39_pp73-win_amd64.whl\r\n    5df3c50fc124c3167404d396115898d0  numpy-2.0.1.tar.gz\r\n\r\n### SHA256\r\n\r\n    0fbb536eac80e27a2793ffd787895242b7f18ef792563d742c2d673bfcb75134  numpy-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    69ff563d43c69b1baba77af455dd0a839df8d25e8590e79c90fcbe1499ebde42  numpy-2.0.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    1b902ce0e0a5bb7704556a217c4f63a7974f8f43e090aff03fcf262e0b135e02  numpy-2.0.1-cp310-cp310-macosx_14_0_arm64.whl\r\n    f1659887361a7151f89e79b276ed8dff3d75877df906328f14d8bb40bb4f5101  numpy-2.0.1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    4658c398d65d1b25e1760de3157011a80375da861709abd7cef3bad65d6543f9  numpy-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4127d4303b9ac9f94ca0441138acead39928938660ca58329fe156f84b9f3015  numpy-2.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e5eeca8067ad04bc8a2a8731183d51d7cbaac66d86085d5f4766ee6bf19c7f87  numpy-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    9adbd9bb520c866e1bfd7e10e1880a1f7749f1f6e5017686a5fbb9b72cf69f82  numpy-2.0.1-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    7b9853803278db3bdcc6cd5beca37815b133e9e77ff3d4733c247414e78eb8d1  numpy-2.0.1-cp310-cp310-win32.whl\r\n    81b0893a39bc5b865b8bf89e9ad7807e16717f19868e9d234bdaf9b1f1393868  numpy-2.0.1-cp310-cp310-win_amd64.whl\r\n    75b4e316c5902d8163ef9d423b1c3f2f6252226d1aa5cd8a0a03a7d01ffc6268  numpy-2.0.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    6e4eeb6eb2fced786e32e6d8df9e755ce5be920d17f7ce00bc38fcde8ccdbf9e  numpy-2.0.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    a1e01dcaab205fbece13c1410253a9eea1b1c9b61d237b6fa59bcc46e8e89343  numpy-2.0.1-cp311-cp311-macosx_14_0_arm64.whl\r\n    a8fc2de81ad835d999113ddf87d1ea2b0f4704cbd947c948d2f5513deafe5a7b  numpy-2.0.1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    5a3d94942c331dd4e0e1147f7a8699a4aa47dffc11bf8a1523c12af8b2e91bbe  numpy-2.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    15eb4eca47d36ec3f78cde0a3a2ee24cf05ca7396ef808dda2c0ddad7c2bde67  numpy-2.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b83e16a5511d1b1f8a88cbabb1a6f6a499f82c062a4251892d9ad5d609863fb7  numpy-2.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    1f87fec1f9bc1efd23f4227becff04bd0e979e23ca50cc92ec88b38489db3b55  numpy-2.0.1-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    36d3a9405fd7c511804dc56fc32974fa5533bdeb3cd1604d6b8ff1d292b819c4  numpy-2.0.1-cp311-cp311-win32.whl\r\n    08458fbf403bff5e2b45f08eda195d4b0c9b35682311da5a5a0a0925b11b9bd8  numpy-2.0.1-cp311-cp311-win_amd64.whl\r\n    6bf4e6f4a2a2e26655717a1983ef6324f2664d7011f6ef7482e8c0b3d51e82ac  numpy-2.0.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    7d6fddc5fe258d3328cd8e3d7d3e02234c5d70e01ebe377a6ab92adb14039cb4  numpy-2.0.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    5daab361be6ddeb299a918a7c0864fa8618af66019138263247af405018b04e1  numpy-2.0.1-cp312-cp312-macosx_14_0_arm64.whl\r\n    ea2326a4dca88e4a274ba3a4405eb6c6467d3ffbd8c7d38632502eaae3820587  numpy-2.0.1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    529af13c5f4b7a932fb0e1911d3a75da204eff023ee5e0e79c1751564221a5c8  numpy-2.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6790654cb13eab303d8402354fabd47472b24635700f631f041bd0b65e37298a  numpy-2.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cbab9fc9c391700e3e1287666dfd82d8666d10e69a6c4a09ab97574c0b7ee0a7  numpy-2.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    99d0d92a5e3613c33a5f01db206a33f8fdf3d71f2912b0de1739894668b7a93b  numpy-2.0.1-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    173a00b9995f73b79eb0191129f2455f1e34c203f559dd118636858cc452a1bf  numpy-2.0.1-cp312-cp312-win32.whl\r\n    bb2124fdc6e62baae159ebcfa368708867eb56806804d005860b6007388df171  numpy-2.0.1-cp312-cp312-win_amd64.whl\r\n    bfc085b28d62ff4009364e7ca34b80a9a080cbd97c2c0630bb5f7f770dae9414  numpy-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    8fae4ebbf95a179c1156fab0b142b74e4ba4204c87bde8d3d8b6f9c34c5825ef  numpy-2.0.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    72dc22e9ec8f6eaa206deb1b1355eb2e253899d7347f5e2fae5f0af613741d06  numpy-2.0.1-cp39-cp39-macosx_14_0_arm64.whl\r\n    ec87f5f8aca726117a1c9b7083e7656a9d0d606eec7299cc067bb83d26f16e0c  numpy-2.0.1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    1f682ea61a88479d9498bf2091fdcd722b090724b08b31d63e022adc063bad59  numpy-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8efc84f01c1cd7e34b3fb310183e72fcdf55293ee736d679b6d35b35d80bba26  numpy-2.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3fdabe3e2a52bc4eff8dc7a5044342f8bd9f11ef0934fcd3289a788c0eb10018  numpy-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    24a0e1befbfa14615b49ba9659d3d8818a0f4d8a1c5822af8696706fbda7310c  numpy-2.0.1-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    f9cf5ea551aec449206954b075db819f52adc1638d46a6738253a712d553c7b4  numpy-2.0.1-cp39-cp39-win32.whl\r\n    e9e81fa9017eaa416c056e5d9e71be93d05e2c3c2ab308d23307a8bc4443c368  numpy-2.0.1-cp39-cp39-win_amd64.whl\r\n    61728fba1e464f789b11deb78a57805c70b2ed02343560456190d0501ba37b0f  numpy-2.0.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    12f5d865d60fb9734e60a60f1d5afa6d962d8d4467c120a1c0cda6eb2964437d  numpy-2.0.1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    eacf3291e263d5a67d8c1a581a8ebbcfd6447204ef58828caf69a5e3e8c75990  numpy-2.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    2c3a346ae20cfd80b6cfd3e60dc179963ef2ea58da5ec074fd3d9e7a1e7ba97f  numpy-2.0.1-pp39-pypy39_pp73-win_amd64.whl\r\n    485b87235796410c3519a699cfe1faab097e509e90ebb05dcd098db2ae87e7b3  numpy-2.0.1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/166405242/reactions",
      "total_count": 70,
      "+1": 31,
      "-1": 0,
      "laugh": 7,
      "hooray": 11,
      "confused": 0,
      "heart": 11,
      "rocket": 10,
      "eyes": 0
    },
    "mentions_count": 1
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/160709204",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/160709204/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/160709204/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.0",
    "id": 160709204,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84JlDpU",
    "tag_name": "v2.0.0",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-06-15T18:39:26Z",
    "published_at": "2024-06-16T14:06:53Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/174115607",
        "id": 174115607,
        "node_id": "RA_kwDOAA3dP84KYMsX",
        "name": "2.0.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 121468,
        "download_count": 119,
        "created_at": "2024-06-16T14:05:05Z",
        "updated_at": "2024-06-16T14:05:05Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0/2.0.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/174115733",
        "id": 174115733,
        "node_id": "RA_kwDOAA3dP84KYMuV",
        "name": "numpy-2.0.0.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18326228,
        "download_count": 1457,
        "created_at": "2024-06-16T14:06:19Z",
        "updated_at": "2024-06-16T14:06:44Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0/numpy-2.0.0.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/174115577",
        "id": 174115577,
        "node_id": "RA_kwDOAA3dP84KYMr5",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 74598,
        "download_count": 149,
        "created_at": "2024-06-16T14:04:41Z",
        "updated_at": "2024-06-16T14:04:42Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.0",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.0",
    "body": "# NumPy 2.0.0 Release Notes\r\n\r\nNumPy 2.0.0 is the first major release since 2006. It is the result of\r\n11 months of development since the last feature release and is the work\r\nof 212 contributors spread over 1078 pull requests. It contains a large\r\nnumber of exciting new features as well as changes to both the Python\r\nand C APIs.\r\n\r\nThis major release includes breaking changes that could not happen in a\r\nregular minor (feature) release - including an ABI break, changes to\r\ntype promotion rules, and API changes which may not have been emitting\r\ndeprecation warnings in 1.26.x. Key documents related to how to adapt to\r\nchanges in NumPy 2.0, in addition to these release notes, include:\r\n\r\n- The [numpy-2-migration-guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html)\r\n- The Numpy 2.0-specific advice in [for downstream package authors](https://numpy.org/devdocs/dev/depending_on_numpy.html)\r\n\r\n## Highlights\r\n\r\nHighlights of this release include:\r\n\r\n- New features:\r\n    - A new variable-length string dtype, `numpy.dtypes.StringDType` and a new\r\n      `numpy.strings` namespace with performant ufuncs for string operations,\r\n    - Support for `float32` and `longdouble` in all\r\n      `numpy.fft` functions,\r\n    - Support for the array API standard in the main `numpy`\r\n      namespace.\r\n- Performance improvements:\r\n    - Sorting functions `sort`, `argsort`,\r\n      `partition`, `argpartition` have been\r\n      accelerated through the use of the Intel x86-simd-sort and\r\n      Google Highway libraries, and may see large (hardware-specific)\r\n      speedups,\r\n    - macOS Accelerate support and binary wheels for macOS \\>=14, with\r\n      significant performance improvements for linear algebra\r\n      operations on macOS, and wheels that are about 3 times smaller,\r\n    - `numpy.char` fixed-length string operations have\r\n      been accelerated by implementing ufuncs that also support\r\n      `numpy.dtypes.StringDType` in addition to the\r\n      fixed-length string dtypes,\r\n    - A new tracing and introspection API,\r\n      `numpy.lib.introspect.opt_func_info`, to determine\r\n      which hardware-specific kernels are available and will be\r\n      dispatched to.\r\n    - `numpy.save` now uses pickle protocol version 4 for saving\r\n      arrays with object dtype, which allows for pickle objects larger\r\n      than 4GB and improves saving speed by about 5% for large arrays.\r\n- Python API improvements:\r\n    - A clear split between public and private API, with a new module\r\n      structure and each public function now available in a single place.\r\n    - Many removals of non-recommended functions and aliases. This\r\n      should make it easier to learn and use NumPy. The number of\r\n      objects in the main namespace decreased by \\~10% and in\r\n      `numpy.lib` by \\~80%.\r\n    - `Canonical dtype names and a new `numpy.isdtype` introspection\r\n      function,\r\n- C API improvements:\r\n    - A new public C API for creating custom dtypes,\r\n    - Many outdated functions and macros removed, and private\r\n      internals hidden to ease future extensibility,\r\n    - New, easier to use, initialization functions: `PyArray_ImportNumPyAPI`\r\n      and `PyUFunc_ImportUFuncAPI`.\r\n- Improved behavior:\r\n    - Improvements to type promotion behavior was changed by adopting NEP 50.\r\n      This fixes many user surprises about promotions which previously often\r\n      depended on data values of input arrays rather than only their dtypes.\r\n      Please see the NEP and the numpy-2-migration-guide for details as this\r\n      change can lead to changes in output dtypes and lower precision results\r\n      for mixed-dtype operations.\r\n    - The default integer type on Windows is now `int64` rather than\r\n      `int32`, matching the behavior on other platforms,\r\n    - The maximum number of array dimensions is changed from 32 to 64\r\n- Documentation:\r\n    - The reference guide navigation was significantly improved, and\r\n      there is now documentation on NumPy\\'s\r\n      module structure,\r\n    - The building from source documentation was completely rewritten,\r\n\r\nFurthermore there are many changes to NumPy internals, including\r\ncontinuing to migrate code from C to C++, that will make it easier to\r\nimprove and maintain NumPy in the future.\r\n\r\nThe \\\"no free lunch\\\" theorem dictates that there is a price to pay for\r\nall these API and behavior improvements and better future extensibility.\r\nThis price is:\r\n\r\n1.  Backwards compatibility. There are a significant number of breaking\r\n    changes to both the Python and C APIs. In the majority of cases,\r\n    there are clear error messages that will inform the user how to\r\n    adapt their code. However, there are also changes in behavior for\r\n    which it was not possible to give such an error message - these\r\n    cases are all covered in the Deprecation and Compatibility sections\r\n    below, and in the numpy-2-migration-guide.\r\n\r\n    Note that there is a `ruff` mode to auto-fix many things in Python\r\n    code.\r\n\r\n2.  Breaking changes to the NumPy ABI. As a result, binaries of packages\r\n    that use the NumPy C API and were built against a NumPy 1.xx release\r\n    will not work with NumPy 2.0. On import, such packages will see an\r\n    `ImportError` with a message about binary incompatibility.\r\n\r\n    It is possible to build binaries against NumPy 2.0 that will work at\r\n    runtime with both NumPy 2.0 and 1.x. See numpy-2-abi-handling for more\r\n    details.\r\n\r\n    **All downstream packages that depend on the NumPy ABI are advised\r\n    to do a new release built against NumPy 2.0 and verify that that\r\n    release works with both 2.0 and 1.26 - ideally in the period between\r\n    2.0.0rc1 (which will be ABI-stable) and the final 2.0.0 release to\r\n    avoid problems for their users.**\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n## NumPy 2.0 Python API removals\r\n\r\n-   `np.geterrobj`, `np.seterrobj` and the related ufunc keyword\r\n    argument `extobj=` have been removed. The preferred replacement for\r\n    all of these is using the context manager `with np.errstate():`.\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   `np.cast` has been removed. The literal replacement for\r\n    `np.cast[dtype](arg)` is `np.asarray(arg, dtype=dtype)`.\r\n\r\n-   `np.source` has been removed. The preferred replacement is\r\n    `inspect.getsource`.\r\n\r\n-   `np.lookfor` has been removed.\r\n\r\n    ([gh-24144](https://github.com/numpy/numpy/pull/24144))\r\n\r\n-   `numpy.who` has been removed. As an alternative for the removed\r\n    functionality, one can use a variable explorer that is available in\r\n    IDEs such as Spyder or Jupyter Notebook.\r\n\r\n    ([gh-24321](https://github.com/numpy/numpy/pull/24321))\r\n\r\n-   Warnings and exceptions present in `numpy.exceptions`,\r\n    e.g, `numpy.exceptions.ComplexWarning`, \r\n    `numpy.exceptions.VisibleDeprecationWarning`, are no\r\n    longer exposed in the main namespace.\r\n\r\n-   Multiple niche enums, expired members and functions have been\r\n    removed from the main namespace, such as: `ERR_*`, `SHIFT_*`,\r\n    `np.fastCopyAndTranspose`, `np.kernel_version`, `np.numarray`,\r\n    `np.oldnumeric` and `np.set_numeric_ops`.\r\n\r\n    ([gh-24316](https://github.com/numpy/numpy/pull/24316))\r\n\r\n-   Replaced `from ... import *` in the `numpy/__init__.py` with\r\n    explicit imports. As a result, these main namespace members got\r\n    removed: `np.FLOATING_POINT_SUPPORT`, `np.FPE_*`, `np.NINF`,\r\n    `np.PINF`, `np.NZERO`, `np.PZERO`, `np.CLIP`, `np.WRAP`, `np.WRAP`,\r\n    `np.RAISE`, `np.BUFSIZE`, `np.UFUNC_BUFSIZE_DEFAULT`,\r\n    `np.UFUNC_PYVALS_NAME`, `np.ALLOW_THREADS`, `np.MAXDIMS`,\r\n    `np.MAY_SHARE_EXACT`, `np.MAY_SHARE_BOUNDS`, `add_newdoc`,\r\n    `np.add_docstring` and `np.add_newdoc_ufunc`.\r\n\r\n    ([gh-24357](https://github.com/numpy/numpy/pull/24357))\r\n\r\n-   Alias `np.float_` has been removed. Use `np.float64` instead.\r\n\r\n-   Alias `np.complex_` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longfloat` has been removed. Use `np.longdouble` instead.\r\n\r\n-   Alias `np.singlecomplex` has been removed. Use `np.complex64`\r\n    instead.\r\n\r\n-   Alias `np.cfloat` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longcomplex` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.clongfloat` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.string_` has been removed. Use `np.bytes_` instead.\r\n\r\n-   Alias `np.unicode_` has been removed. Use `np.str_` instead.\r\n\r\n-   Alias `np.Inf` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.Infinity` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.NaN` has been removed. Use `np.nan` instead.\r\n\r\n-   Alias `np.infty` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.mat` has been removed. Use `np.asmatrix` instead.\r\n\r\n-   `np.issubclass_` has been removed. Use the `issubclass` builtin\r\n    instead.\r\n\r\n-   `np.asfarray` has been removed. Use `np.asarray` with a proper dtype\r\n    instead.\r\n\r\n-   `np.set_string_function` has been removed. Use `np.set_printoptions`\r\n    instead with a formatter for custom printing of NumPy objects.\r\n\r\n-   `np.tracemalloc_domain` is now only available from `np.lib`.\r\n\r\n-   `np.recfromcsv` and `recfromtxt` are now only available from\r\n    `np.lib.npyio`.\r\n\r\n-   `np.issctype`, `np.maximum_sctype`, `np.obj2sctype`,\r\n    `np.sctype2char`, `np.sctypes`, `np.issubsctype` were all removed\r\n    from the main namespace without replacement, as they where niche\r\n    members.\r\n\r\n-   Deprecated `np.deprecate` and `np.deprecate_with_doc` has been\r\n    removed from the main namespace. Use `DeprecationWarning` instead.\r\n\r\n-   Deprecated `np.safe_eval` has been removed from the main namespace.\r\n    Use `ast.literal_eval` instead.\r\n\r\n    ([gh-24376](https://github.com/numpy/numpy/pull/24376))\r\n\r\n-   `np.find_common_type` has been removed. Use `numpy.promote_types` or\r\n    `numpy.result_type` instead. To achieve semantics for the\r\n    `scalar_types` argument, use `numpy.result_type` and pass `0`,\r\n    `0.0`, or `0j` as a Python scalar instead.\r\n\r\n-   `np.round_` has been removed. Use `np.round` instead.\r\n\r\n-   `np.nbytes` has been removed. Use `np.dtype(<dtype>).itemsize`\r\n    instead.\r\n\r\n    ([gh-24477](https://github.com/numpy/numpy/pull/24477))\r\n\r\n-   `np.compare_chararrays` has been removed from the main namespace.\r\n    Use `np.char.compare_chararrays` instead.\r\n\r\n-   The `charrarray` in the main namespace has been deprecated. It can\r\n    be imported without a deprecation warning from `np.char.chararray`\r\n    for now, but we are planning to fully deprecate and remove\r\n    `chararray` in the future.\r\n\r\n-   `np.format_parser` has been removed from the main namespace. Use\r\n    `np.rec.format_parser` instead.\r\n\r\n    ([gh-24587](https://github.com/numpy/numpy/pull/24587))\r\n\r\n-   Support for seven data type string aliases has been removed from\r\n    `np.dtype`: `int0`, `uint0`, `void0`, `object0`, `str0`, `bytes0`\r\n    and `bool8`.\r\n\r\n    ([gh-24807](https://github.com/numpy/numpy/pull/24807))\r\n\r\n-   The experimental `numpy.array_api` submodule has been removed. Use\r\n    the main `numpy` namespace for regular usage instead, or the\r\n    separate `array-api-strict` package for the compliance testing use\r\n    case for which `numpy.array_api` was mostly used.\r\n\r\n    ([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n### `__array_prepare__` is removed\r\n\r\nUFuncs called `__array_prepare__` before running computations for normal\r\nufunc calls (not generalized ufuncs, reductions, etc.). The function was\r\nalso called instead of `__array_wrap__` on the results of some linear\r\nalgebra functions.\r\n\r\nIt is now removed. If you use it, migrate to `__array_ufunc__` or rely\r\non `__array_wrap__` which is called with a context in all cases,\r\nalthough only after the result array is filled. In those code paths,\r\n`__array_wrap__` will now be passed a base class, rather than a subclass\r\narray.\r\n\r\n([gh-25105](https://github.com/numpy/numpy/pull/25105))\r\n\r\n## Deprecations\r\n\r\n-   `np.compat` has been deprecated, as Python 2 is no longer supported.\r\n\r\n-   `numpy.int8` and similar classes will no longer support conversion\r\n    of out of bounds python integers to integer arrays. For example,\r\n    conversion of 255 to int8 will not return -1. `numpy.iinfo(dtype)`\r\n    can be used to check the machine limits for data types. For example,\r\n    `np.iinfo(np.uint16)` returns min = 0 and max = 65535.\r\n\r\n    `np.array(value).astype(dtype)` will give the desired result.\r\n\r\n-   `np.safe_eval` has been deprecated. `ast.literal_eval` should be\r\n    used instead.\r\n\r\n    ([gh-23830](https://github.com/numpy/numpy/pull/23830))\r\n\r\n-   `np.recfromcsv`, `np.recfromtxt`, `np.disp`, `np.get_array_wrap`,\r\n    `np.maximum_sctype`, `np.deprecate` and `np.deprecate_with_doc` have\r\n    been deprecated.\r\n\r\n    ([gh-24154](https://github.com/numpy/numpy/pull/24154))\r\n\r\n-   `np.trapz` has been deprecated. Use `np.trapezoid` or a\r\n    `scipy.integrate` function instead.\r\n\r\n-   `np.in1d` has been deprecated. Use `np.isin` instead.\r\n\r\n-   Alias `np.row_stack` has been deprecated. Use `np.vstack` directly.\r\n\r\n    ([gh-24445](https://github.com/numpy/numpy/pull/24445))\r\n\r\n-   `__array_wrap__` is now passed `arr, context, return_scalar` and\r\n    support for implementations not accepting all three are deprecated.\r\n    Its signature should be\r\n    `__array_wrap__(self, arr, context=None, return_scalar=False)`\r\n\r\n    ([gh-25409](https://github.com/numpy/numpy/pull/25409))\r\n\r\n-   Arrays of 2-dimensional vectors for `np.cross` have been deprecated.\r\n    Use arrays of 3-dimensional vectors instead.\r\n\r\n    ([gh-24818](https://github.com/numpy/numpy/pull/24818))\r\n\r\n-   `np.dtype(\"a\")` alias for `np.dtype(np.bytes_)` was deprecated. Use\r\n    `np.dtype(\"S\")` alias instead.\r\n\r\n    ([gh-24854](https://github.com/numpy/numpy/pull/24854))\r\n\r\n-   Use of keyword arguments `x` and `y` with functions\r\n    `assert_array_equal` and `assert_array_almost_equal` has been\r\n    deprecated. Pass the first two arguments as positional arguments\r\n    instead.\r\n\r\n    ([gh-24978](https://github.com/numpy/numpy/pull/24978))\r\n\r\n### `numpy.fft` deprecations for n-D transforms with None values in arguments\r\n\r\nUsing `fftn`, `ifftn`, `rfftn`, `irfftn`, `fft2`, `ifft2`, `rfft2` or\r\n`irfft2` with the `s` parameter set to a value that is not `None` and\r\nthe `axes` parameter set to `None` has been deprecated, in line with the\r\narray API standard. To retain current behaviour, pass a sequence \\[0,\r\n\\..., k-1\\] to `axes` for an array of dimension k.\r\n\r\nFurthermore, passing an array to `s` which contains `None` values is\r\ndeprecated as the parameter is documented to accept a sequence of\r\nintegers in both the NumPy docs and the array API specification. To use\r\nthe default behaviour of the corresponding 1-D transform, pass the value\r\nmatching the default for its `n` parameter. To use the default behaviour\r\nfor every axis, the `s` argument can be omitted.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### `np.linalg.lstsq` now defaults to a new `rcond` value\r\n\r\n`numpy.linalg.lstsq` now uses the new rcond value of the\r\nmachine precision times `max(M, N)`. Previously, the machine precision\r\nwas used but a FutureWarning was given to notify that this change will\r\nhappen eventually. That old behavior can still be achieved by passing\r\n`rcond=-1`.\r\n\r\n([gh-25721](https://github.com/numpy/numpy/pull/25721))\r\n\r\n## Expired deprecations\r\n\r\n-   The `np.core.umath_tests` submodule has been removed from the public\r\n    API. (Deprecated in NumPy 1.15)\r\n\r\n    ([gh-23809](https://github.com/numpy/numpy/pull/23809))\r\n\r\n-   The `PyDataMem_SetEventHook` deprecation has expired and it is\r\n    removed. Use `tracemalloc` and the `np.lib.tracemalloc_domain`\r\n    domain. (Deprecated in NumPy 1.23)\r\n\r\n    ([gh-23921](https://github.com/numpy/numpy/pull/23921))\r\n\r\n-   The deprecation of `set_numeric_ops` and the C functions\r\n    `PyArray_SetNumericOps` and `PyArray_GetNumericOps` has been expired\r\n    and the functions removed. (Deprecated in NumPy 1.16)\r\n\r\n    ([gh-23998](https://github.com/numpy/numpy/pull/23998))\r\n\r\n-   The `fasttake`, `fastclip`, and `fastputmask` `ArrFuncs` deprecation\r\n    is now finalized.\r\n\r\n-   The deprecated function `fastCopyAndTranspose` and its C counterpart\r\n    are now removed.\r\n\r\n-   The deprecation of `PyArray_ScalarFromObject` is now finalized.\r\n\r\n    ([gh-24312](https://github.com/numpy/numpy/pull/24312))\r\n\r\n-   `np.msort` has been removed. For a replacement, `np.sort(a, axis=0)`\r\n    should be used instead.\r\n\r\n    ([gh-24494](https://github.com/numpy/numpy/pull/24494))\r\n\r\n-   `np.dtype((\"f8\", 1)` will now return a shape 1 subarray dtype rather\r\n    than a non-subarray one.\r\n\r\n    ([gh-25761](https://github.com/numpy/numpy/pull/25761))\r\n\r\n-   Assigning to the `.data` attribute of an ndarray is disallowed and\r\n    will raise.\r\n\r\n-   `np.binary_repr(a, width)` will raise if width is too small.\r\n\r\n-   Using `NPY_CHAR` in `PyArray_DescrFromType()` will raise, use\r\n    `NPY_STRING` `NPY_UNICODE`, or `NPY_VSTRING` instead.\r\n\r\n    ([gh-25794](https://github.com/numpy/numpy/pull/25794))\r\n\r\n## Compatibility notes\r\n\r\n### `loadtxt` and `genfromtxt` default encoding changed\r\n\r\n`loadtxt` and `genfromtxt` now both default to `encoding=None` which may\r\nmainly modify how `converters` work. These will now be passed `str`\r\nrather than `bytes`. Pass the encoding explicitly to always get the new\r\nor old behavior. For `genfromtxt` the change also means that returned\r\nvalues will now be unicode strings rather than bytes.\r\n\r\n([gh-25158](https://github.com/numpy/numpy/pull/25158))\r\n\r\n### `f2py` compatibility notes\r\n\r\n-   `f2py` will no longer accept ambiguous `-m` and `.pyf` CLI\r\n    combinations. When more than one `.pyf` file is passed, an error is\r\n    raised. When both `-m` and a `.pyf` is passed, a warning is emitted\r\n    and the `-m` provided name is ignored.\r\n\r\n    ([gh-25181](https://github.com/numpy/numpy/pull/25181))\r\n\r\n-   The `f2py.compile()` helper has been removed because it leaked\r\n    memory, has been marked as experimental for several years now, and\r\n    was implemented as a thin `subprocess.run` wrapper. It was also one\r\n    of the test bottlenecks. See\r\n    [gh-25122](https://github.com/numpy/numpy/issues/25122) for the full\r\n    rationale. It also used several `np.distutils` features which are\r\n    too fragile to be ported to work with `meson`.\r\n\r\n-   Users are urged to replace calls to `f2py.compile` with calls to\r\n    `subprocess.run(\"python\", \"-m\", \"numpy.f2py\",...` instead, and to\r\n    use environment variables to interact with `meson`. [Native\r\n    files](https://mesonbuild.com/Machine-files.html) are also an\r\n    option.\r\n\r\n    ([gh-25193](https://github.com/numpy/numpy/pull/25193))\r\n\r\n### Minor changes in behavior of sorting functions\r\n\r\nDue to algorithmic changes and use of SIMD code, sorting functions with\r\nmethods that aren\\'t stable may return slightly different results in\r\n2.0.0 compared to 1.26.x. This includes the default method of\r\n`numpy.argsort` and `numpy.argpartition`.\r\n\r\n### Removed ambiguity when broadcasting in `np.solve`\r\n\r\nThe broadcasting rules for `np.solve(a, b)` were ambiguous when `b` had\r\n1 fewer dimensions than `a`. This has been resolved in a\r\nbackward-incompatible way and is now compliant with the Array API. The\r\nold behaviour can be reconstructed by using\r\n`np.solve(a, b[..., None])[..., 0]`.\r\n\r\n([gh-25914](https://github.com/numpy/numpy/pull/25914))\r\n\r\n### Modified representation for `Polynomial`\r\n\r\nThe representation method for\r\n`numpy.polynomial.polynomial.Polynomial` was updated to\r\ninclude the domain in the representation. The plain text and latex\r\nrepresentations are now consistent. For example the output of\r\n`str(np.polynomial.Polynomial([1, 1], domain=[.1, .2]))` used to be\r\n`1.0 + 1.0 x`, but now is `1.0 + 1.0 (-3.0000000000000004 + 20.0 x)`.\r\n\r\n([gh-21760](https://github.com/numpy/numpy/pull/21760))\r\n\r\n## C API changes\r\n\r\n-   The `PyArray_CGT`, `PyArray_CLT`, `PyArray_CGE`, `PyArray_CLE`,\r\n    `PyArray_CEQ`, `PyArray_CNE` macros have been removed.\r\n\r\n-   `PyArray_MIN` and `PyArray_MAX` have been moved from\r\n    `ndarraytypes.h` to `npy_math.h`.\r\n\r\n    ([gh-24258](https://github.com/numpy/numpy/pull/24258))\r\n\r\n-   A C API for working with `numpy.dtypes.StringDType`\r\n    arrays has been exposed. This includes functions for acquiring and\r\n    releasing mutexes which lock access to the string data, as well as\r\n    packing and unpacking UTF-8 bytestreams from array entries.\r\n\r\n-   `NPY_NTYPES` has been renamed to `NPY_NTYPES_LEGACY` as it does not\r\n    include new NumPy built-in DTypes. In particular the new string\r\n    DType will likely not work correctly with code that handles legacy\r\n    DTypes.\r\n\r\n    ([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n-   The C-API now only exports the static inline function versions of\r\n    the array accessors (previously this depended on using \\\"deprecated\r\n    API\\\"). While we discourage it, the struct fields can still be used\r\n    directly.\r\n\r\n    ([gh-25789](https://github.com/numpy/numpy/pull/25789))\r\n\r\n-   NumPy now defines `PyArray_Pack` to set an individual memory address.\r\n    Unlike `PyArray_SETITEM` this function is equivalent to setting an\r\n    individual array item and does not require a NumPy array input.\r\n\r\n    ([gh-25954](https://github.com/numpy/numpy/pull/25954))\r\n\r\n-   The `->f` slot has been removed from `PyArray_Descr`. If you use this slot,\r\n    replace accessing it with `PyDataType_GetArrFuncs` (see its documentation\r\n    and the `numpy-2-migration-guide`). In some cases using other functions\r\n    like `PyArray_GETITEM` may be an alternatives.\r\n\r\n-   `PyArray_GETITEM` and `PyArray_SETITEM` now require the import of\r\n    the NumPy API table to be used and are no longer defined in\r\n    `ndarraytypes.h`.\r\n\r\n    ([gh-25812](https://github.com/numpy/numpy/pull/25812))\r\n\r\n-   Due to runtime dependencies, the definition for functionality\r\n    accessing the dtype flags was moved from `numpy/ndarraytypes.h` and\r\n    is only available after including `numpy/ndarrayobject.h` as it\r\n    requires `import_array()`. This includes `PyDataType_FLAGCHK`,\r\n    `PyDataType_REFCHK` and `NPY_BEGIN_THREADS_DESCR`.\r\n\r\n-   The dtype flags on `PyArray_Descr` must now be accessed through the\r\n    `PyDataType_FLAGS` inline function to be compatible with both 1.x\r\n    and 2.x. This function is defined in `npy_2_compat.h` to allow\r\n    backporting. Most or all users should use `PyDataType_FLAGCHK` which\r\n    is available on 1.x and does not require backporting. Cython users\r\n    should use Cython 3. Otherwise access will go through Python unless\r\n    they use `PyDataType_FLAGCHK` instead.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Datetime functionality exposed in the C API and Cython bindings\r\n\r\nThe functions `NpyDatetime_ConvertDatetime64ToDatetimeStruct`,\r\n`NpyDatetime_ConvertDatetimeStructToDatetime64`,\r\n`NpyDatetime_ConvertPyDateTimeToDatetimeStruct`,\r\n`NpyDatetime_GetDatetimeISO8601StrLen`,\r\n`NpyDatetime_MakeISO8601Datetime`, and\r\n`NpyDatetime_ParseISO8601Datetime` have been added to the C API to\r\nfacilitate converting between strings, Python datetimes, and NumPy\r\ndatetimes in external libraries.\r\n\r\n([gh-21199](https://github.com/numpy/numpy/pull/21199))\r\n\r\n### Const correctness for the generalized ufunc C API\r\n\r\nThe NumPy C API\\'s functions for constructing generalized ufuncs\r\n(`PyUFunc_FromFuncAndData`, `PyUFunc_FromFuncAndDataAndSignature`,\r\n`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`) take `types` and\r\n`data` arguments that are not modified by NumPy\\'s internals. Like the\r\n`name` and `doc` arguments, third-party Python extension modules are\r\nlikely to supply these arguments from static constants. The `types` and\r\n`data` arguments are now const-correct: they are declared as\r\n`const char *types` and `void *const *data`, respectively. C code should\r\nnot be affected, but C++ code may be.\r\n\r\n([gh-23847](https://github.com/numpy/numpy/pull/23847))\r\n\r\n### Larger `NPY_MAXDIMS` and `NPY_MAXARGS`, `NPY_RAVEL_AXIS` introduced\r\n\r\n`NPY_MAXDIMS` is now 64, you may want to review its use. This is usually\r\nused in a stack allocation, where the increase should be safe. However,\r\nwe do encourage generally to remove any use of `NPY_MAXDIMS` and\r\n`NPY_MAXARGS` to eventually allow removing the constraint completely.\r\nFor the conversion helper and C-API functions mirroring Python ones such as\r\n`take`, `NPY_MAXDIMS` was used to mean `axis=None`. Such usage must be replaced\r\nwith `NPY_RAVEL_AXIS`. See also `migration_maxdims`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### `NPY_MAXARGS` not constant and `PyArrayMultiIterObject` size change\r\n\r\nSince `NPY_MAXARGS` was increased, it is now a runtime constant and not\r\ncompile-time constant anymore. We expect almost no users to notice this.\r\nBut if used for stack allocations it now must be replaced with a custom\r\nconstant using `NPY_MAXARGS` as an additional runtime check.\r\n\r\nThe `sizeof(PyArrayMultiIterObject)` no longer includes the full size of\r\nthe object. We expect nobody to notice this change. It was necessary to\r\navoid issues with Cython.\r\n\r\n([gh-25271](https://github.com/numpy/numpy/pull/25271))\r\n\r\n### Required changes for custom legacy user dtypes\r\n\r\nIn order to improve our DTypes it is unfortunately necessary to break\r\nthe ABI, which requires some changes for dtypes registered with\r\n`PyArray_RegisterDataType`. Please see the documentation of\r\n`PyArray_RegisterDataType` for how to adapt your code and achieve\r\ncompatibility with both 1.x and 2.x.\r\n\r\n([gh-25792](https://github.com/numpy/numpy/pull/25792))\r\n\r\n### New Public DType API\r\n\r\nThe C implementation of the NEP 42 DType API is now public. While the\r\nDType API has shipped in NumPy for a few versions, it was only usable in\r\nsessions with a special environment variable set. It is now possible to\r\nwrite custom DTypes outside of NumPy using the new DType API and the\r\nnormal `import_array()` mechanism for importing the numpy C API.\r\n\r\nSee `dtype-api` for more details about the API. As always with a new feature,\r\nplease report any bugs you run into implementing or using a new DType. It is\r\nlikely that downstream C code that works with dtypes will need to be updated to\r\nwork correctly with new DTypes.\r\n\r\n([gh-25754](https://github.com/numpy/numpy/pull/25754))\r\n\r\n### New C-API import functions\r\n\r\nWe have now added `PyArray_ImportNumPyAPI` and `PyUFunc_ImportUFuncAPI`\r\nas static inline functions to import the NumPy C-API tables. The new\r\nfunctions have two advantages over `import_array` and `import_ufunc`:\r\n\r\n-   They check whether the import was already performed and are\r\n    light-weight if not, allowing to add them judiciously (although this\r\n    is not preferable in most cases).\r\n-   The old mechanisms were macros rather than functions which included\r\n    a `return` statement.\r\n\r\nThe `PyArray_ImportNumPyAPI()` function is included in `npy_2_compat.h`\r\nfor simpler backporting.\r\n\r\n([gh-25866](https://github.com/numpy/numpy/pull/25866))\r\n\r\n### Structured dtype information access through functions\r\n\r\nThe dtype structures fields `c_metadata`, `names`, `fields`, and\r\n`subarray` must now be accessed through new functions following the same\r\nnames, such as `PyDataType_NAMES`. Direct access of the fields is not\r\nvalid as they do not exist for all `PyArray_Descr` instances. The\r\n`metadata` field is kept, but the macro version should also be\r\npreferred.\r\n\r\n([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n### Descriptor `elsize` and `alignment` access\r\n\r\nUnless compiling only with NumPy 2 support, the `elsize` and `aligment`\r\nfields must now be accessed via `PyDataType_ELSIZE`,\r\n`PyDataType_SET_ELSIZE`, and `PyDataType_ALIGNMENT`. In cases where the\r\ndescriptor is attached to an array, we advise using `PyArray_ITEMSIZE`\r\nas it exists on all NumPy versions. Please see\r\n`migration_c_descr` for more information.\r\n\r\n([gh-25943](https://github.com/numpy/numpy/pull/25943))\r\n\r\n## NumPy 2.0 C API removals\r\n\r\n-   `npy_interrupt.h` and the corresponding macros like `NPY_SIGINT_ON`\r\n    have been removed. We recommend querying `PyErr_CheckSignals()` or\r\n    `PyOS_InterruptOccurred()` periodically (these do currently require\r\n    holding the GIL though).\r\n\r\n-   The `noprefix.h` header has been removed. Replace missing symbols\r\n    with their prefixed counterparts (usually an added `NPY_` or\r\n    `npy_`).\r\n\r\n    ([gh-23919](https://github.com/numpy/numpy/pull/23919))\r\n\r\n-   `PyUFunc_GetPyVals`, `PyUFunc_handlefperr`, and `PyUFunc_checkfperr`\r\n    have been removed. If needed, a new backwards compatible function to\r\n    raise floating point errors could be restored. Reason for removal:\r\n    there are no known users and the functions would have made\r\n    `with np.errstate()` fixes much more difficult).\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   The `numpy/old_defines.h` which was part of the API deprecated since\r\n    NumPy 1.7 has been removed. This removes macros of the form\r\n    `PyArray_CONSTANT`. The\r\n    [replace_old_macros.sed](https://github.com/numpy/numpy/blob/main/tools/replace_old_macros.sed)\r\n    script may be useful to convert them to the `NPY_CONSTANT` version.\r\n\r\n    ([gh-24011](https://github.com/numpy/numpy/pull/24011))\r\n\r\n-   The `legacy_inner_loop_selector` member of the ufunc struct is\r\n    removed to simplify improvements to the dispatching system. There\r\n    are no known users overriding or directly accessing this member.\r\n\r\n    ([gh-24271](https://github.com/numpy/numpy/pull/24271))\r\n\r\n-   `NPY_INTPLTR` has been removed to avoid confusion (see `intp`\r\n    redefinition).\r\n\r\n    ([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n-   The advanced indexing `MapIter` and related API has been removed.\r\n    The (truly) public part of it was not well tested and had only one\r\n    known user (Theano). Making it private will simplify improvements to\r\n    speed up `ufunc.at`, make advanced indexing more maintainable, and\r\n    was important for increasing the maximum number of dimensions of\r\n    arrays to 64. Please let us know if this API is important to you so\r\n    we can find a solution together.\r\n\r\n    ([gh-25138](https://github.com/numpy/numpy/pull/25138))\r\n\r\n-   The `NPY_MAX_ELSIZE` macro has been removed, as it only ever\r\n    reflected builtin numeric types and served no internal purpose.\r\n\r\n    ([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n-   `PyArray_REFCNT` and `NPY_REFCOUNT` are removed. Use `Py_REFCNT`\r\n    instead.\r\n\r\n    ([gh-25156](https://github.com/numpy/numpy/pull/25156))\r\n\r\n-   `PyArrayFlags_Type` and `PyArray_NewFlagsObject` as well as\r\n    `PyArrayFlagsObject` are private now. There is no known use-case;\r\n    use the Python API if needed.\r\n\r\n-   `PyArray_MoveInto`, `PyArray_CastTo`, `PyArray_CastAnyTo` are\r\n    removed use `PyArray_CopyInto` and if absolutely needed\r\n    `PyArray_CopyAnyInto` (the latter does a flat copy).\r\n\r\n-   `PyArray_FillObjectArray` is removed, its only true use was for\r\n    implementing `np.empty`. Create a new empty array or use\r\n    `PyArray_FillWithScalar()` (decrefs existing objects).\r\n\r\n-   `PyArray_CompareUCS4` and `PyArray_CompareString` are removed. Use\r\n    the standard C string comparison functions.\r\n\r\n-   `PyArray_ISPYTHON` is removed as it is misleading, has no known\r\n    use-cases, and is easy to replace.\r\n\r\n-   `PyArray_FieldNames` is removed, as it is unclear what it would be\r\n    useful for. It also has incorrect semantics in some possible\r\n    use-cases.\r\n\r\n-   `PyArray_TypestrConvert` is removed, since it seems a misnomer and\r\n    unlikely to be used by anyone. If you know the size or are limited\r\n    to few types, just use it explicitly, otherwise go via Python\r\n    strings.\r\n\r\n    ([gh-25292](https://github.com/numpy/numpy/pull/25292))\r\n\r\n-   `PyDataType_GetDatetimeMetaData` is removed, it did not actually do\r\n    anything since at least NumPy 1.7.\r\n\r\n    ([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n-   `PyArray_GetCastFunc` is removed. Note that custom legacy user\r\n    dtypes can still provide a castfunc as their implementation, but any\r\n    access to them is now removed. The reason for this is that NumPy\r\n    never used these internally for many years. If you use simple\r\n    numeric types, please just use C casts directly. In case you require\r\n    an alternative, please let us know so we can create new API such as\r\n    `PyArray_CastBuffer()` which could use old or new cast functions\r\n    depending on the NumPy version.\r\n\r\n    ([gh-25161](https://github.com/numpy/numpy/pull/25161))\r\n\r\n## New Features\r\n\r\n### `np.add` was extended to work with `unicode` and `bytes` dtypes.\r\n\r\n> ([gh-24858](https://github.com/numpy/numpy/pull/24858))\r\n\r\n### A new `bitwise_count` function\r\n\r\nThis new function counts the number of 1-bits in a number.\r\n`numpy.bitwise_count` works on all the numpy integer types\r\nand integer-like objects.\r\n\r\n``` python\r\n>>> a = np.array([2**i - 1 for i in range(16)])\r\n>>> np.bitwise_count(a)\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15],\r\n      dtype=uint8)\r\n```\r\n\r\n([gh-19355](https://github.com/numpy/numpy/pull/19355))\r\n\r\n### macOS Accelerate support, including the ILP64\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, or if no explicit BLAS library selection is done, the 13.3+\r\nversion will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\nBinary wheels are also available. On macOS \\>=14.0, users who install\r\nNumPy from PyPI will get wheels built against Accelerate rather than\r\nOpenBLAS.\r\n\r\n([gh-25255](https://github.com/numpy/numpy/pull/25255))\r\n\r\n### Option to use weights for quantile and percentile functions\r\n\r\nA `weights` keyword is now available for `numpy.quantile`, `numpy.percentile`,\r\n`numpy.nanquantile` and `numpy.nanpercentile`. Only `method=\"inverted_cdf\"`\r\nsupports weights.\r\n\r\n([gh-24254](https://github.com/numpy/numpy/pull/24254))\r\n\r\n### Improved CPU optimization tracking\r\n\r\nA new tracer mechanism is available which enables tracking of the\r\nenabled targets for each optimized function (i.e., that uses\r\nhardware-specific SIMD instructions) in the NumPy library. With this\r\nenhancement, it becomes possible to precisely monitor the enabled CPU\r\ndispatch targets for the dispatched functions.\r\n\r\nA new function named `opt_func_info` has been added to the new namespace\r\n`numpy.lib.introspect`, offering this tracing capability.  This function allows\r\nyou to retrieve information about the enabled targets based on function names\r\nand data type signatures.\r\n\r\n([gh-24420](https://github.com/numpy/numpy/pull/24420))\r\n\r\n### A new Meson backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python \\>=3.12.\r\nFor older Python versions, `f2py` will still default to\r\n`--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other C interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in C and Fortran, not in\r\nPython and Fortran.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n### A new `strict` option for several testing functions\r\n\r\nThe `strict` keyword is now available for `numpy.testing.assert_allclose`,\r\n`numpy.testing.assert_equal`, and `numpy.testing.assert_array_less`. Setting\r\n`strict=True` will disable the broadcasting behaviour for scalars and ensure\r\nthat input arrays have the same data type.\r\n\r\n([gh-24680](https://github.com/numpy/numpy/pull/24680),\r\n[gh-24770](https://github.com/numpy/numpy/pull/24770),\r\n[gh-24775](https://github.com/numpy/numpy/pull/24775))\r\n\r\n### Add `np.core.umath.find` and `np.core.umath.rfind` UFuncs\r\n\r\nAdd two `find` and `rfind` UFuncs that operate on unicode or byte\r\nstrings and are used in `np.char`. They operate similar to `str.find`\r\nand `str.rfind`.\r\n\r\n([gh-24868](https://github.com/numpy/numpy/pull/24868))\r\n\r\n### `diagonal` and `trace` for `numpy.linalg`\r\n\r\n`numpy.linalg.diagonal` and `numpy.linalg.trace` have been added, which are\r\narray API standard-compatible variants of `numpy.diagonal` and `numpy.trace`.\r\nThey differ in the default axis selection which define 2-D sub-arrays.\r\n\r\n([gh-24887](https://github.com/numpy/numpy/pull/24887))\r\n\r\n### New `long` and `ulong` dtypes\r\n\r\n`numpy.long` and `numpy.ulong` have been added as NumPy integers mapping to\r\nC\\'s `long` and `unsigned long`. Prior to NumPy 1.24, `numpy.long` was an alias\r\nto Python\\'s `int`.\r\n\r\n([gh-24922](https://github.com/numpy/numpy/pull/24922))\r\n\r\n### `svdvals` for `numpy.linalg`\r\n\r\n`numpy.linalg.svdvals` has been added. It computes singular values for (a stack\r\nof) matrices. Executing `np.svdvals(x)` is the same as calling `np.svd(x,\r\ncompute_uv=False, hermitian=False)`. This function is compatible with the array\r\nAPI standard.\r\n\r\n([gh-24940](https://github.com/numpy/numpy/pull/24940))\r\n\r\n### A new `isdtype` function\r\n\r\n`numpy.isdtype` was added to provide a canonical way to classify NumPy\\'s\r\ndtypes in compliance with the array API standard.\r\n\r\n([gh-25054](https://github.com/numpy/numpy/pull/25054))\r\n\r\n### A new `astype` function\r\n\r\n`numpy.astype` was added to provide an array API standard-compatible\r\nalternative to the `numpy.ndarray.astype` method.\r\n\r\n([gh-25079](https://github.com/numpy/numpy/pull/25079))\r\n\r\n### Array API compatible functions\\' aliases\r\n\r\n13 aliases for existing functions were added to improve compatibility\r\nwith the array API standard:\r\n\r\n-   Trigonometry: `acos`, `acosh`, `asin`, `asinh`, `atan`, `atanh`,\r\n    `atan2`.\r\n-   Bitwise: `bitwise_left_shift`, `bitwise_invert`,\r\n    `bitwise_right_shift`.\r\n-   Misc: `concat`, `permute_dims`, `pow`.\r\n-   In `numpy.linalg`: `tensordot`, `matmul`.\r\n\r\n([gh-25086](https://github.com/numpy/numpy/pull/25086))\r\n\r\n### New `unique_*` functions\r\n\r\nThe `numpy.unique_all`, `numpy.unique_counts`, `numpy.unique_inverse`, and\r\n`numpy.unique_values` functions have been added. They provide functionality of\r\n`numpy.unique` with different sets of flags. They are array API\r\nstandard-compatible, and because the number of arrays they return does not\r\ndepend on the values of input arguments, they are easier to target for JIT\r\ncompilation.\r\n\r\n([gh-25088](https://github.com/numpy/numpy/pull/25088))\r\n\r\n### Matrix transpose support for ndarrays\r\n\r\nNumPy now offers support for calculating the matrix transpose of an\r\narray (or stack of arrays). The matrix transpose is equivalent to\r\nswapping the last two axes of an array. Both `np.ndarray` and\r\n`np.ma.MaskedArray` now expose a `.mT` attribute, and there is a\r\nmatching new `numpy.matrix_transpose` function.\r\n\r\n([gh-23762](https://github.com/numpy/numpy/pull/23762))\r\n\r\n### Array API compatible functions for `numpy.linalg`\r\n\r\nSix new functions and two aliases were added to improve compatibility\r\nwith the Array API standard for \\`numpy.linalg\\`:\r\n\r\n-   `numpy.linalg.matrix_norm` - Computes the matrix norm of\r\n    a matrix (or a stack of matrices).\r\n\r\n-   `numpy.linalg.vector_norm` - Computes the vector norm of\r\n    a vector (or batch of vectors).\r\n\r\n-   `numpy.vecdot` - Computes the (vector) dot product of\r\n    two arrays.\r\n\r\n-   `numpy.linalg.vecdot` - An alias for\r\n    `numpy.vecdot`.\r\n\r\n-   `numpy.linalg.matrix_transpose` - An alias for\r\n    `numpy.matrix_transpose`.\r\n\r\n    ([gh-25155](https://github.com/numpy/numpy/pull/25155))\r\n\r\n-   `numpy.linalg.outer` has been added. It computes the\r\n    outer product of two vectors. It differs from\r\n    `numpy.outer` by accepting one-dimensional arrays only.\r\n    This function is compatible with the array API standard.\r\n\r\n    ([gh-25101](https://github.com/numpy/numpy/pull/25101))\r\n\r\n-   `numpy.linalg.cross` has been added. It computes the\r\n    cross product of two (arrays of) 3-dimensional vectors. It differs\r\n    from `numpy.cross` by accepting three-dimensional\r\n    vectors only. This function is compatible with the array API\r\n    standard.\r\n\r\n    ([gh-25145](https://github.com/numpy/numpy/pull/25145))\r\n\r\n### A `correction` argument for `var` and `std`\r\n\r\nA `correction` argument was added to `numpy.var` and `numpy.std`, which is an\r\narray API standard compatible alternative to `ddof`. As both arguments serve a\r\nsimilar purpose, only one of them can be provided at the same time.\r\n\r\n([gh-25169](https://github.com/numpy/numpy/pull/25169))\r\n\r\n### `ndarray.device` and `ndarray.to_device`\r\n\r\nAn `ndarray.device` attribute and `ndarray.to_device` method were added\r\nto `numpy.ndarray` for array API standard compatibility.\r\n\r\nAdditionally, `device` keyword-only arguments were added to:\r\n`numpy.asarray`, `numpy.arange`, `numpy.empty`, `numpy.empty_like`,\r\n`numpy.eye`, `numpy.full`, `numpy.full_like`, `numpy.linspace`, `numpy.ones`,\r\n`numpy.ones_like`, `numpy.zeros`, and `numpy.zeros_like`.\r\n\r\nFor all these new arguments, only `device=\"cpu\"` is supported.\r\n\r\n([gh-25233](https://github.com/numpy/numpy/pull/25233))\r\n\r\n### StringDType has been added to NumPy\r\n\r\nWe have added a new variable-width UTF-8 encoded string data type, implementing\r\na \\\"NumPy array of Python strings\\\", including support for a user-provided\r\nmissing data sentinel. It is intended as a drop-in replacement for arrays of\r\nPython strings and missing data sentinels using the object dtype. See \r\n[NEP 55](https://numpy.org/neps/nep-0055-string_dtype.html) and the documentation\r\nof stringdtype for more details.\r\n\r\n([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n### New keywords for `cholesky` and `pinv`\r\n\r\nThe `upper` and `rtol` keywords were added to\r\n`numpy.linalg.cholesky` and `numpy.linalg.pinv`,\r\nrespectively, to improve array API standard compatibility.\r\n\r\nFor `numpy.linalg.pinv`, if neither `rcond` nor `rtol` is\r\nspecified, the `rcond`\\'s default is used. We plan to deprecate and\r\nremove `rcond` in the future.\r\n\r\n([gh-25388](https://github.com/numpy/numpy/pull/25388))\r\n\r\n### New keywords for `sort`, `argsort` and `linalg.matrix_rank`\r\n\r\nNew keyword parameters were added to improve array API standard\r\ncompatibility:\r\n\r\n-   `rtol` was added to `numpy.linalg.matrix_rank`.\r\n-   `stable` was added to `numpy.sort` and\r\n    `numpy.argsort`.\r\n\r\n([gh-25437](https://github.com/numpy/numpy/pull/25437))\r\n\r\n### New `numpy.strings` namespace for string ufuncs\r\n\r\nNumPy now implements some string operations as ufuncs. The old `np.char`\r\nnamespace is still available, and where possible the string manipulation\r\nfunctions in that namespace have been updated to use the new ufuncs,\r\nsubstantially improving their performance.\r\n\r\nWhere possible, we suggest updating code to use functions in\r\n`np.strings` instead of `np.char`. In the future we may deprecate\r\n`np.char` in favor of `np.strings`.\r\n\r\n([gh-25463](https://github.com/numpy/numpy/pull/25463))\r\n\r\n### `numpy.fft` support for different precisions and in-place calculations\r\n\r\nThe various FFT routines in `numpy.fft` now do their\r\ncalculations natively in float, double, or long double precision,\r\ndepending on the input precision, instead of always calculating in\r\ndouble precision. Hence, the calculation will now be less precise for\r\nsingle and more precise for long double precision. The data type of the\r\noutput array will now be adjusted accordingly.\r\n\r\nFurthermore, all FFT routines have gained an `out` argument that can be\r\nused for in-place calculations.\r\n\r\n([gh-25536](https://github.com/numpy/numpy/pull/25536))\r\n\r\n### configtool and pkg-config support\r\n\r\nA new `numpy-config` CLI script is available that can be queried for the\r\nNumPy version and for compile flags needed to use the NumPy C API. This\r\nwill allow build systems to better support the use of NumPy as a\r\ndependency. Also, a `numpy.pc` pkg-config file is now included with\r\nNumpy. In order to find its location for use with `PKG_CONFIG_PATH`, use\r\n`numpy-config --pkgconfigdir`.\r\n\r\n([gh-25730](https://github.com/numpy/numpy/pull/25730))\r\n\r\n### Array API standard support in the main namespace\r\n\r\nThe main `numpy` namespace now supports the array API standard. See\r\n`array-api-standard-compatibility` for\r\ndetails.\r\n\r\n([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n## Improvements\r\n\r\n### Strings are now supported by `any`, `all`, and the logical ufuncs.\r\n\r\n> ([gh-25651](https://github.com/numpy/numpy/pull/25651))\r\n\r\n### Integer sequences as the shape argument for `memmap`\r\n\r\n`numpy.memmap` can now be created with any integer sequence\r\nas the `shape` argument, such as a list or numpy array of integers.\r\nPreviously, only the types of tuple and int could be used without\r\nraising an error.\r\n\r\n([gh-23729](https://github.com/numpy/numpy/pull/23729))\r\n\r\n### `errstate` is now faster and context safe\r\n\r\nThe `numpy.errstate` context manager/decorator is now faster\r\nand safer. Previously, it was not context safe and had (rare) issues\r\nwith thread-safety.\r\n\r\n([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n### AArch64 quicksort speed improved by using Highway\\'s VQSort\r\n\r\nThe first introduction of the Google Highway library, using VQSort on\r\nAArch64. Execution time is improved by up to 16x in some cases, see the\r\nPR for benchmark results. Extensions to other platforms will be done in\r\nthe future.\r\n\r\n([gh-24018](https://github.com/numpy/numpy/pull/24018))\r\n\r\n### Complex types - underlying C type changes\r\n\r\n-   The underlying C types for all of NumPy\\'s complex types have been\r\n    changed to use C99 complex types.\r\n\r\n-   While this change does not affect the memory layout of complex\r\n    types, it changes the API to be used to directly retrieve or write\r\n    the real or complex part of the complex number, since direct field\r\n    access (as in `c.real` or `c.imag`) is no longer an option. You can\r\n    now use utilities provided in `numpy/npy_math.h` to do these\r\n    operations, like this:\r\n\r\n    ``` c\r\n    npy_cdouble c;\r\n    npy_csetreal(&c, 1.0);\r\n    npy_csetimag(&c, 0.0);\r\n    printf(\"%d + %di\\n\", npy_creal(c), npy_cimag(c));\r\n    ```\r\n\r\n-   To ease cross-version compatibility, equivalent macros and a\r\n    compatibility layer have been added which can be used by downstream\r\n    packages to continue to support both NumPy 1.x and 2.x. See\r\n    `complex-numbers` for more info.\r\n\r\n-   `numpy/npy_common.h` now includes `complex.h`, which means that\r\n    `complex` is now a reserved keyword.\r\n\r\n([gh-24085](https://github.com/numpy/numpy/pull/24085))\r\n\r\n### `iso_c_binding` support and improved common blocks for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n`f2py` now handles `common` blocks which have `kind` specifications from\r\nmodules. This further expands the usability of intrinsics like\r\n`iso_fortran_env` and `iso_c_binding`.\r\n\r\n([gh-25186](https://github.com/numpy/numpy/pull/25186))\r\n\r\n### Call `str` automatically on third argument to functions like `assert_equal`\r\n\r\nThe third argument to functions like\r\n`numpy.testing.assert_equal` now has `str` called on it\r\nautomatically. This way it mimics the built-in `assert` statement, where\r\n`assert_equal(a, b, obj)` works like `assert a == b, obj`.\r\n\r\n([gh-24877](https://github.com/numpy/numpy/pull/24877))\r\n\r\n### Support for array-like `atol`/`rtol` in `isclose`, `allclose`\r\n\r\nThe keywords `atol` and `rtol` in `numpy.isclose` and\r\n`numpy.allclose` now accept both scalars and arrays. An\r\narray, if given, must broadcast to the shapes of the first two array\r\narguments.\r\n\r\n([gh-24878](https://github.com/numpy/numpy/pull/24878))\r\n\r\n### Consistent failure messages in test functions\r\n\r\nPreviously, some `numpy.testing` assertions printed messages\r\nthat referred to the actual and desired results as `x` and `y`. Now,\r\nthese values are consistently referred to as `ACTUAL` and `DESIRED`.\r\n\r\n([gh-24931](https://github.com/numpy/numpy/pull/24931))\r\n\r\n### n-D FFT transforms allow `s[i] == -1`\r\n\r\nThe `numpy.fft.fftn`, `numpy.fft.ifftn`,\r\n`numpy.fft.rfftn`, `numpy.fft.irfftn`,\r\n`numpy.fft.fft2`, `numpy.fft.ifft2`,\r\n`numpy.fft.rfft2` and `numpy.fft.irfft2`\r\nfunctions now use the whole input array along the axis `i` if\r\n`s[i] == -1`, in line with the array API standard.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### Guard PyArrayScalar_VAL and PyUnicodeScalarObject for the limited API\r\n\r\n`PyUnicodeScalarObject` holds a `PyUnicodeObject`, which is not\r\navailable when using `Py_LIMITED_API`. Add guards to hide it and\r\nconsequently also make the `PyArrayScalar_VAL` macro hidden.\r\n\r\n([gh-25531](https://github.com/numpy/numpy/pull/25531))\r\n\r\n## Changes\r\n\r\n-   `np.gradient()` now returns a tuple rather than a list making the\r\n    return value immutable.\r\n\r\n    ([gh-23861](https://github.com/numpy/numpy/pull/23861))\r\n\r\n-   Being fully context and thread-safe, `np.errstate` can only be\r\n    entered once now.\r\n\r\n-   `np.setbufsize` is now tied to `np.errstate()`: leaving an\r\n    `np.errstate` context will also reset the `bufsize`.\r\n\r\n    ([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n-   A new public `np.lib.array_utils` submodule has been introduced and\r\n    it currently contains three functions: `byte_bounds` (moved from\r\n    `np.lib.utils`), `normalize_axis_tuple` and `normalize_axis_index`.\r\n\r\n    ([gh-24540](https://github.com/numpy/numpy/pull/24540))\r\n\r\n-   Introduce `numpy.bool` as the new canonical name for\r\n    NumPy\\'s boolean dtype, and make `numpy.bool\\_` an alias\r\n    to it. Note that until NumPy 1.24, `np.bool` was an alias to\r\n    Python\\'s builtin `bool`. The new name helps with array API standard\r\n    compatibility and is a more intuitive name.\r\n\r\n    ([gh-25080](https://github.com/numpy/numpy/pull/25080))\r\n\r\n-   The `dtype.flags` value was previously stored as a signed integer.\r\n    This means that the aligned dtype struct flag lead to negative flags\r\n    being set (-128 rather than 128). This flag is now stored unsigned\r\n    (positive). Code which checks flags manually may need to adapt. This\r\n    may include code compiled with Cython 0.29.x.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Representation of NumPy scalars changed\r\n\r\nAs per NEP 51, the scalar representation has been updated to include the type\r\ninformation to avoid confusion with Python scalars.\r\n\r\nScalars are now printed as `np.float64(3.0)` rather than just `3.0`.\r\nThis may disrupt workflows that store representations of numbers (e.g.,\r\nto files) making it harder to read them. They should be stored as\r\nexplicit strings, for example by using `str()` or `f\"{scalar!s}\"`. For\r\nthe time being, affected users can use\r\n`np.set_printoptions(legacy=\"1.25\")` to get the old behavior (with\r\npossibly a few exceptions). Documentation of downstream projects may\r\nrequire larger updates, if code snippets are tested. We are working on\r\ntooling for\r\n[doctest-plus](https://github.com/scientific-python/pytest-doctestplus/issues/107)\r\nto facilitate updates.\r\n\r\n([gh-22449](https://github.com/numpy/numpy/pull/22449))\r\n\r\n### Truthiness of NumPy strings changed\r\n\r\nNumPy strings previously were inconsistent about how they defined if the\r\nstring is `True` or `False` and the definition did not match the one\r\nused by Python. Strings are now considered `True` when they are\r\nnon-empty and `False` when they are empty. This changes the following\r\ndistinct cases:\r\n\r\n-   Casts from string to boolean were previously roughly equivalent to\r\n    `string_array.astype(np.int64).astype(bool)`, meaning that only\r\n    valid integers could be cast. Now a string of `\"0\"` will be\r\n    considered `True` since it is not empty. If you need the old\r\n    behavior, you may use the above step (casting to integer first) or\r\n    `string_array == \"0\"` (if the input is only ever `0` or `1`). To get\r\n    the new result on old NumPy versions use `string_array != \"\"`.\r\n-   `np.nonzero(string_array)` previously ignored whitespace so that a\r\n    string only containing whitespace was considered `False`. Whitespace\r\n    is now considered `True`.\r\n\r\nThis change does not affect `np.loadtxt`, `np.fromstring`, or\r\n`np.genfromtxt`. The first two still use the integer definition, while\r\n`genfromtxt` continues to match for `\"true\"` (ignoring case). However,\r\nif `np.bool_` is used as a converter the result will change.\r\n\r\nThe change does affect `np.fromregex` as it uses direct assignments.\r\n\r\n([gh-23871](https://github.com/numpy/numpy/pull/23871))\r\n\r\n### A `mean` keyword was added to var and std function\r\n\r\nOften when the standard deviation is needed the mean is also needed. The\r\nsame holds for the variance and the mean. Until now the mean is then\r\ncalculated twice, the change introduced here for the `numpy.var` and\r\n`numpy.std` functions allows for passing in a precalculated mean as an keyword\r\nargument. See the docstrings for details and an example illustrating the\r\nspeed-up.\r\n\r\n([gh-24126](https://github.com/numpy/numpy/pull/24126))\r\n\r\n### Remove datetime64 deprecation warning when constructing with timezone\r\n\r\nThe `numpy.datetime64` method now issues a UserWarning rather than a\r\nDeprecationWarning whenever a timezone is included in the datetime string that\r\nis provided.\r\n\r\n([gh-24193](https://github.com/numpy/numpy/pull/24193))\r\n\r\n### Default integer dtype is now 64-bit on 64-bit Windows\r\n\r\nThe default NumPy integer is now 64-bit on all 64-bit systems as the\r\nhistoric 32-bit default on Windows was a common source of issues. Most\r\nusers should not notice this. The main issues may occur with code\r\ninterfacing with libraries written in a compiled language like C. For\r\nmore information see `migration_windows_int64`.\r\n\r\n([gh-24224](https://github.com/numpy/numpy/pull/24224))\r\n\r\n### Renamed `numpy.core` to `numpy._core`\r\n\r\nAccessing `numpy.core` now emits a DeprecationWarning. In practice we\r\nhave found that most downstream usage of `numpy.core` was to access\r\nfunctionality that is available in the main `numpy` namespace. If for\r\nsome reason you are using functionality in `numpy.core` that is not\r\navailable in the main `numpy` namespace, this means you are likely using\r\nprivate NumPy internals. You can still access these internals via\r\n`numpy._core` without a deprecation warning but we do not provide any\r\nbackward compatibility guarantees for NumPy internals. Please open an\r\nissue if you think a mistake was made and something needs to be made\r\npublic.\r\n\r\n([gh-24634](https://github.com/numpy/numpy/pull/24634))\r\n\r\nThe \\\"relaxed strides\\\" debug build option, which was previously enabled\r\nthrough the `NPY_RELAXED_STRIDES_DEBUG` environment variable or the\r\n`-Drelaxed-strides-debug` config-settings flag has been removed.\r\n\r\n([gh-24717](https://github.com/numpy/numpy/pull/24717))\r\n\r\n### Redefinition of `np.intp`/`np.uintp` (almost never a change)\r\n\r\nDue to the actual use of these types almost always matching the use of\r\n`size_t`/`Py_ssize_t` this is now the definition in C. Previously, it\r\nmatched `intptr_t` and `uintptr_t` which would often have been subtly\r\nincorrect. This has no effect on the vast majority of machines since the\r\nsize of these types only differ on extremely niche platforms.\r\n\r\nHowever, it means that:\r\n\r\n-   Pointers may not necessarily fit into an `intp` typed array anymore.\r\n    The `p` and `P` character codes can still be used, however.\r\n-   Creating `intptr_t` or `uintptr_t` typed arrays in C remains\r\n    possible in a cross-platform way via `PyArray_DescrFromType('p')`.\r\n-   The new character codes `nN` were introduced.\r\n-   It is now correct to use the Python C-API functions when parsing to\r\n    `npy_intp` typed arguments.\r\n\r\n([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n### `numpy.fft.helper` made private\r\n\r\n`numpy.fft.helper` was renamed to `numpy.fft._helper` to indicate that\r\nit is a private submodule. All public functions exported by it should be\r\naccessed from `numpy.fft`.\r\n\r\n([gh-24945](https://github.com/numpy/numpy/pull/24945))\r\n\r\n### `numpy.linalg.linalg` made private\r\n\r\n`numpy.linalg.linalg` was renamed to `numpy.linalg._linalg` to indicate\r\nthat it is a private submodule. All public functions exported by it\r\nshould be accessed from `numpy.linalg`.\r\n\r\n([gh-24946](https://github.com/numpy/numpy/pull/24946))\r\n\r\n### Out-of-bound axis not the same as `axis=None`\r\n\r\nIn some cases `axis=32` or for concatenate any large value was the same\r\nas `axis=None`. Except for `concatenate` this was deprecate. Any out of\r\nbound axis value will now error, make sure to use `axis=None`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### New `copy` keyword meaning for `array` and `asarray` constructors\r\n\r\nNow `numpy.array` and `numpy.asarray` support\r\nthree values for `copy` parameter:\r\n\r\n-   `None` - A copy will only be made if it is necessary.\r\n-   `True` - Always make a copy.\r\n-   `False` - Never make a copy. If a copy is required a `ValueError` is\r\n    raised.\r\n\r\nThe meaning of `False` changed as it now raises an exception if a copy\r\nis needed.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### The `__array__` special method now takes a `copy` keyword argument.\r\n\r\nNumPy will pass `copy` to the `__array__` special method in situations\r\nwhere it would be set to a non-default value (e.g. in a call to\r\n`np.asarray(some_object, copy=False)`). Currently, if an unexpected\r\nkeyword argument error is raised after this, NumPy will print a warning\r\nand re-try without the `copy` keyword argument. Implementations of\r\nobjects implementing the `__array__` protocol should accept a `copy`\r\nkeyword argument with the same meaning as when passed to\r\n`numpy.array` or `numpy.asarray`.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### Cleanup of initialization of `numpy.dtype` with strings with commas\r\n\r\nThe interpretation of strings with commas is changed slightly, in that a\r\ntrailing comma will now always create a structured dtype. E.g., where\r\npreviously `np.dtype(\"i\")` and `np.dtype(\"i,\")` were treated as\r\nidentical, now `np.dtype(\"i,\")` will create a structured dtype, with a\r\nsingle field. This is analogous to `np.dtype(\"i,i\")` creating a\r\nstructured dtype with two fields, and makes the behaviour consistent\r\nwith that expected of tuples.\r\n\r\nAt the same time, the use of single number surrounded by parenthesis to\r\nindicate a sub-array shape, like in `np.dtype(\"(2)i,\")`, is deprecated.\r\nInstead; one should use `np.dtype(\"(2,)i\")` or `np.dtype(\"2i\")`.\r\nEventually, using a number in parentheses will raise an exception, like\r\nis the case for initializations without a comma, like\r\n`np.dtype(\"(2)i\")`.\r\n\r\n([gh-25434](https://github.com/numpy/numpy/pull/25434))\r\n\r\n### Change in how complex sign is calculated\r\n\r\nFollowing the array API standard, the complex sign is now calculated as\r\n`z / |z|` (instead of the rather less logical case where the sign of the\r\nreal part was taken, unless the real part was zero, in which case the\r\nsign of the imaginary part was returned). Like for real numbers, zero is\r\nreturned if `z==0`.\r\n\r\n([gh-25441](https://github.com/numpy/numpy/pull/25441))\r\n\r\n### Return types of functions that returned a list of arrays\r\n\r\nFunctions that returned a list of ndarrays have been changed to return a\r\ntuple of ndarrays instead. Returning tuples consistently whenever a\r\nsequence of arrays is returned makes it easier for JIT compilers like\r\nNumba, as well as for static type checkers in some cases, to support\r\nthese functions. Changed functions are: `numpy.atleast_1d`, `numpy.atleast_2d`,\r\n`numpy.atleast_3d`, `numpy.broadcast_arrays`, `numpy.meshgrid`,\r\n`numpy.ogrid`, `numpy.histogramdd`.\r\n\r\n### `np.unique` `return_inverse` shape for multi-dimensional inputs\r\n\r\nWhen multi-dimensional inputs are passed to `np.unique` with\r\n`return_inverse=True`, the `unique_inverse` output is now shaped such\r\nthat the input can be reconstructed directly using\r\n`np.take(unique, unique_inverse)` when `axis=None`, and\r\n`np.take_along_axis(unique, unique_inverse, axis=axis)` otherwise.\r\n\r\n([gh-25553](https://github.com/numpy/numpy/pull/25553),\r\n[gh-25570](https://github.com/numpy/numpy/pull/25570))\r\n\r\n### `any` and `all` return booleans for object arrays\r\n\r\nThe `any` and `all` functions and methods now return booleans also for\r\nobject arrays. Previously, they did a reduction which behaved like the\r\nPython `or` and `and` operators which evaluates to one of the arguments.\r\nYou can use `np.logical_or.reduce` and `np.logical_and.reduce` to\r\nachieve the previous behavior.\r\n\r\n([gh-25712](https://github.com/numpy/numpy/pull/25712))\r\n\r\n### `np.can_cast` cannot be called on Python int, float, or complex\r\n\r\n`np.can_cast` cannot be called with Python int, float, or complex\r\ninstances anymore. This is because NEP 50 means that the result of\r\n`can_cast` must not depend on the value passed in. Unfortunately, for\r\nPython scalars whether a cast should be considered `\"same_kind\"` or\r\n`\"safe\"` may depend on the context and value so that this is currently\r\nnot implemented. In some cases, this means you may have to add a\r\nspecific path for: `if type(obj) in (int, float, complex): ...`.\r\n\r\n([gh-26393](https://github.com/numpy/numpy/pull/26393))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    fcda027f9735771088e607161c913094  numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    1c381a5af3e6b945c6937ab3c6e2de09  numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    6258de3c0599f8e3674e11898f2dd71c  numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    aa4d28b404566dc9f5c34a31c6cd7b23  numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    6b83ba81bdc750ef9924e3dc6f7c93be  numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3d129fe67d99e0aad451742abb963ffa  numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    24a060577965bd2a573ed87cbd207b4c  numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    b00832f558669aacf855c4f5e9cf31d1  numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    cfe7420d294c583b90cfe07b730136dc  numpy-2.0.0-cp310-cp310-win32.whl\r\n    cff9da6b9fe5ad3b05dd3526dff00ac2  numpy-2.0.0-cp310-cp310-win_amd64.whl\r\n    f390e03564df5ea37a97ac10cf0cbb00  numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    a006b081decba286a321de67a1abe246  numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    6aea3e8589e33349b8170524af5a2e44  numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    eea8146c5dc2a306333bfea1f01f7a37  numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    e96c2af477c970c8ff50ecb5d1cf754f  numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d065256e02a1d410d0db2577bb8fd9a4  numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    98c570b79459342c219590c5af38d527  numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    dc435751cb926f53a9fc457f35146527  numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    aaa4b435d29022ceacb4e3dcbd43d11a  numpy-2.0.0-cp311-cp311-win32.whl\r\n    9ff8be4f581d86b2f181fe905491b19b  numpy-2.0.0-cp311-cp311-win_amd64.whl\r\n    1c9519c5e6a0c5a99715e51ac3b7c932  numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    b0f26e8728523d716f5165953b35244f  numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    029703d0ff0e96c603c91f611926ef17  numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    2231ecbb380c70ddf462e9671d06612c  numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    4153b50c1a3647ca58f1084fcaf3e4c6  numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    82cba3915234f8018fd754ffc45e95b0  numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    249047dd7255a5fcf5c45614ba211e10  numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    f7581ebfe0c9d4ae4f3b6ea09c19eea7  numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    8a0dbcd919d1d959f1846a00ebb05162  numpy-2.0.0-cp312-cp312-win32.whl\r\n    22aabdfd85ed34f02a7cdacff399c5d9  numpy-2.0.0-cp312-cp312-win_amd64.whl\r\n    1fce84122c393e05b69e2ec53ecd1137  numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    81e4c1152274d85813bf14814ad4d359  numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    5eab1a2b427b590d2bc9d8ecd330fc21  numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl\r\n    ab967929693baf2d2bfb00c53413ad2b  numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl\r\n    85d2971cd78800663766f46ba312d356  numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7e831fcf9cff5317429786a3bd123671  numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    03a6426ca86ad53567e3ef61bc766013  numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    b30af2d2b99468538f45e6769f9fee2b  numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    cc9a8db8d131fb5a387e2c1342ab0065  numpy-2.0.0-cp39-cp39-win32.whl\r\n    9843951308fa31c5e36c4c6a0b090308  numpy-2.0.0-cp39-cp39-win_amd64.whl\r\n    5021eb5e225bff3e05a38a565daf8852  numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    99186fe49ac7931d3e92e8993c2faa92  numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    c39f0ab6e07d42708550899951b852b8  numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cbf151633948e90c93dd988777750961  numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl\r\n    a180aaba9982c6e15da6db62dab5eb4e  numpy-2.0.0.tar.gz\r\n\r\n### SHA256\r\n\r\n    04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f  numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2  numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238  numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl\r\n    8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514  numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl\r\n    79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196  numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1  numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc  numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787  numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl\r\n    cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98  numpy-2.0.0-cp310-cp310-win32.whl\r\n    ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b  numpy-2.0.0-cp310-cp310-win_amd64.whl\r\n    ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5  numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289  numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609  numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl\r\n    b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871  numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl\r\n    5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4  numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581  numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995  numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f  numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl\r\n    2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f  numpy-2.0.0-cp311-cp311-win32.whl\r\n    fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c  numpy-2.0.0-cp311-cp311-win_amd64.whl\r\n    354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f  numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85  numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2  numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl\r\n    84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e  numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl\r\n    c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2  numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a  numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95  numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9  numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl\r\n    c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54  numpy-2.0.0-cp312-cp312-win32.whl\r\n    a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df  numpy-2.0.0-cp312-cp312-win_amd64.whl\r\n    e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de  numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb  numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f  numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl\r\n    3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86  numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl\r\n    1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a  numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d  numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4  numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44  numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl\r\n    63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275  numpy-2.0.0-cp39-cp39-win32.whl\r\n    3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65  numpy-2.0.0-cp39-cp39-win_amd64.whl\r\n    9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6  numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a  numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad  numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9  numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl\r\n    cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864  numpy-2.0.0.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/160709204/reactions",
      "total_count": 360,
      "+1": 81,
      "-1": 0,
      "laugh": 0,
      "hooray": 142,
      "confused": 0,
      "heart": 50,
      "rocket": 82,
      "eyes": 5
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/155399074",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/155399074/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/155399074/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.0rc2",
    "id": 155399074,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84JQzOi",
    "tag_name": "v2.0.0rc2",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-05-11T20:04:08Z",
    "published_at": "2024-05-12T14:14:01Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/167470311",
        "id": 167470311,
        "node_id": "RA_kwDOAA3dP84J-2Tn",
        "name": "2.0.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 117255,
        "download_count": 18,
        "created_at": "2024-05-12T14:05:24Z",
        "updated_at": "2024-05-12T14:05:24Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc2/2.0.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/167470110",
        "id": 167470110,
        "node_id": "RA_kwDOAA3dP84J-2Qe",
        "name": "numpy-2.0.0rc2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18323588,
        "download_count": 188,
        "created_at": "2024-05-12T14:04:09Z",
        "updated_at": "2024-05-12T14:04:35Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc2/numpy-2.0.0rc2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/167470259",
        "id": 167470259,
        "node_id": "RA_kwDOAA3dP84J-2Sz",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 74605,
        "download_count": 26,
        "created_at": "2024-05-12T14:04:56Z",
        "updated_at": "2024-05-12T14:04:57Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.0rc2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.0rc2",
    "body": "# NumPy 2.0.0 Release Notes\r\n\r\n>**Note**\r\n>\r\n>The release of 2.0 is in progress and the current release overview and\r\n>highlights are still in a draft state. However, the highlights should\r\n>already list the most significant changes detailed in the full notes\r\n>below, and those full notes should be complete (if not copy-edited well\r\n>enough yet).\r\n\r\nNumPy 2.0.0 is the first major release since 2006. It is the result of\r\n11 months of development since the last feature release and is the work\r\nof 198 contributors spread over 1041 pull requests. It contains a large\r\nnumber of exciting new features as well as changes to both the Python\r\nand C APIs.\r\n\r\nThis major release includes breaking changes that could not happen in a\r\nregular minor (feature) release - including an ABI break, changes to\r\ntype promotion rules, and API changes which may not have been emitting\r\ndeprecation warnings in 1.26.x. Key documents related to how to adapt to\r\nchanges in NumPy 2.0, in addition to these release notes, include:\r\n\r\n- The [numpy-2-migration-guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html)\r\n- The Numpy 2.0-specific advice in [for dpwmstream package authors](https://numpy.org/devdocs/dev/depending_on_numpy.html)\r\n\r\n## Highlights\r\n\r\nHighlights of this release include:\r\n\r\n- New features:\r\n    - A new variable-length string dtype, `numpy.dtypes.StringDType` and a new\r\n      `numpy.strings` namespace with performant ufuncs for string operations,\r\n    - Support for `float32` and `longdouble` in all\r\n      `numpy.fft` functions,\r\n    - Support for the array API standard in the main `numpy`\r\n      namespace.\r\n- Performance improvements:\r\n    - Sorting functions `sort`, `argsort`,\r\n      `partition`, `argpartition` have been\r\n      accelerated through the use of the Intel x86-simd-sort and\r\n      Google Highway libraries, and may see large (hardware-specific)\r\n      speedups,\r\n    - macOS Accelerate support and binary wheels for macOS \\>=14, with\r\n      significant performance improvements for linear algebra\r\n      operations on macOS, and wheels that are about 3 times smaller,\r\n    - `numpy.char` fixed-length string operations have\r\n      been accelerated by implementing ufuncs that also support\r\n      `numpy.dtypes.StringDType` in addition to the\r\n      fixed-length string dtypes,\r\n    - A new tracing and introspection API,\r\n      `numpy.lib.introspect.opt_func_info`, to determine\r\n      which hardware-specific kernels are available and will be\r\n      dispatched to.\r\n- Python API improvements:\r\n    - A clear split between public and private API, with a new module\r\n      structure and each public function now available in a single place.\r\n    - Many removals of non-recommended functions and aliases. This\r\n      should make it easier to learn and use NumPy. The number of\r\n      objects in the main namespace decreased by \\~10% and in\r\n      `numpy.lib` by \\~80%.\r\n    - `Canonical dtype names and a new `numpy.isdtype` introspection\r\n      function,\r\n- C API improvements:\r\n    - A new public C API for creating custom dtypes,\r\n    - Many outdated functions and macros removed, and private\r\n      internals hidden to ease future extensibility,\r\n    - New, easier to use, initialization functions: `PyArray_ImportNumPyAPI`\r\n      and `PyUFunc_ImportUFuncAPI`.\r\n- Improved behavior:\r\n    - Improvements to type promotion behavior was changed by adopting NEP 50.\r\n      This fixes many user surprises about promotions which previously often\r\n      depended on data values of input arrays rather than only their dtypes.\r\n      Please see the NEP and the numpy-2-migration-guide for details as this\r\n      change can lead to changes in output dtypes and lower precision results\r\n      for mixed-dtype operations.\r\n    - The default integer type on Windows is now `int64` rather than\r\n      `int32`, matching the behavior on other platforms,\r\n    - The maximum number of array dimensions is changed from 32 to 64\r\n- Documentation:\r\n    - The reference guide navigation was significantly improved, and\r\n      there is now documentation on NumPy\\'s\r\n      module structure,\r\n    - The building from source documentation was completely rewritten,\r\n\r\nFurthermore there are many changes to NumPy internals, including\r\ncontinuing to migrate code from C to C++, that will make it easier to\r\nimprove and maintain NumPy in the future.\r\n\r\nThe \\\"no free lunch\\\" theorem dictates that there is a price to pay for\r\nall these API and behavior improvements and better future extensibility.\r\nThis price is:\r\n\r\n1.  Backwards compatibility. There are a significant number of breaking\r\n    changes to both the Python and C APIs. In the majority of cases,\r\n    there are clear error messages that will inform the user how to\r\n    adapt their code. However, there are also changes in behavior for\r\n    which it was not possible to give such an error message - these\r\n    cases are all covered in the Deprecation and Compatibility sections\r\n    below, and in the numpy-2-migration-guide.\r\n\r\n    Note that there is a `ruff` mode to auto-fix many things in Python\r\n    code.\r\n\r\n2.  Breaking changes to the NumPy ABI. As a result, binaries of packages\r\n    that use the NumPy C API and were built against a NumPy 1.xx release\r\n    will not work with NumPy 2.0. On import, such packages will see an\r\n    `ImportError` with a message about binary incompatibility.\r\n\r\n    It is possible to build binaries against NumPy 2.0 that will work at\r\n    runtime with both NumPy 2.0 and 1.x. See numpy-2-abi-handling for more\r\n    details.\r\n\r\n    **All downstream packages that depend on the NumPy ABI are advised\r\n    to do a new release built against NumPy 2.0 and verify that that\r\n    release works with both 2.0 and 1.26 - ideally in the period between\r\n    2.0.0rc1 (which will be ABI-stable) and the final 2.0.0 release to\r\n    avoid problems for their users.**\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n## NumPy 2.0 Python API removals\r\n\r\n-   `np.geterrobj`, `np.seterrobj` and the related ufunc keyword\r\n    argument `extobj=` have been removed. The preferred replacement for\r\n    all of these is using the context manager `with np.errstate():`.\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   `np.cast` has been removed. The literal replacement for\r\n    `np.cast[dtype](arg)` is `np.asarray(arg, dtype=dtype)`.\r\n\r\n-   `np.source` has been removed. The preferred replacement is\r\n    `inspect.getsource`.\r\n\r\n-   `np.lookfor` has been removed.\r\n\r\n    ([gh-24144](https://github.com/numpy/numpy/pull/24144))\r\n\r\n-   `numpy.who` has been removed. As an alternative for the removed\r\n    functionality, one can use a variable explorer that is available in\r\n    IDEs such as Spyder or Jupyter Notebook.\r\n\r\n    ([gh-24321](https://github.com/numpy/numpy/pull/24321))\r\n\r\n-   Multiple niche enums, expired members and functions have been\r\n    removed from the main namespace, such as: `ERR_*`, `SHIFT_*`,\r\n    `np.fastCopyAndTranspose`, `np.kernel_version`, `np.numarray`,\r\n    `np.oldnumeric` and `np.set_numeric_ops`.\r\n\r\n    ([gh-24316](https://github.com/numpy/numpy/pull/24316))\r\n\r\n-   Replaced `from ... import *` in the `numpy/__init__.py` with\r\n    explicit imports. As a result, these main namespace members got\r\n    removed: `np.FLOATING_POINT_SUPPORT`, `np.FPE_*`, `np.NINF`,\r\n    `np.PINF`, `np.NZERO`, `np.PZERO`, `np.CLIP`, `np.WRAP`, `np.WRAP`,\r\n    `np.RAISE`, `np.BUFSIZE`, `np.UFUNC_BUFSIZE_DEFAULT`,\r\n    `np.UFUNC_PYVALS_NAME`, `np.ALLOW_THREADS`, `np.MAXDIMS`,\r\n    `np.MAY_SHARE_EXACT`, `np.MAY_SHARE_BOUNDS`, `add_newdoc`,\r\n    `np.add_docstring` and `np.add_newdoc_ufunc`.\r\n\r\n    ([gh-24357](https://github.com/numpy/numpy/pull/24357))\r\n\r\n-   Alias `np.float_` has been removed. Use `np.float64` instead.\r\n\r\n-   Alias `np.complex_` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longfloat` has been removed. Use `np.longdouble` instead.\r\n\r\n-   Alias `np.singlecomplex` has been removed. Use `np.complex64`\r\n    instead.\r\n\r\n-   Alias `np.cfloat` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longcomplex` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.clongfloat` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.string_` has been removed. Use `np.bytes_` instead.\r\n\r\n-   Alias `np.unicode_` has been removed. Use `np.str_` instead.\r\n\r\n-   Alias `np.Inf` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.Infinity` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.NaN` has been removed. Use `np.nan` instead.\r\n\r\n-   Alias `np.infty` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.mat` has been removed. Use `np.asmatrix` instead.\r\n\r\n-   `np.issubclass_` has been removed. Use the `issubclass` builtin\r\n    instead.\r\n\r\n-   `np.asfarray` has been removed. Use `np.asarray` with a proper dtype\r\n    instead.\r\n\r\n-   `np.set_string_function` has been removed. Use `np.set_printoptions`\r\n    instead with a formatter for custom printing of NumPy objects.\r\n\r\n-   `np.tracemalloc_domain` is now only available from `np.lib`.\r\n\r\n-   `np.recfromcsv` and `recfromtxt` are now only available from\r\n    `np.lib.npyio`.\r\n\r\n-   `np.issctype`, `np.maximum_sctype`, `np.obj2sctype`,\r\n    `np.sctype2char`, `np.sctypes`, `np.issubsctype` were all removed\r\n    from the main namespace without replacement, as they where niche\r\n    members.\r\n\r\n-   Deprecated `np.deprecate` and `np.deprecate_with_doc` has been\r\n    removed from the main namespace. Use `DeprecationWarning` instead.\r\n\r\n-   Deprecated `np.safe_eval` has been removed from the main namespace.\r\n    Use `ast.literal_eval` instead.\r\n\r\n    ([gh-24376](https://github.com/numpy/numpy/pull/24376))\r\n\r\n-   `np.find_common_type` has been removed. Use `numpy.promote_types` or\r\n    `numpy.result_type` instead. To achieve semantics for the\r\n    `scalar_types` argument, use `numpy.result_type` and pass `0`,\r\n    `0.0`, or `0j` as a Python scalar instead.\r\n\r\n-   `np.round_` has been removed. Use `np.round` instead.\r\n\r\n-   `np.nbytes` has been removed. Use `np.dtype(<dtype>).itemsize`\r\n    instead.\r\n\r\n    ([gh-24477](https://github.com/numpy/numpy/pull/24477))\r\n\r\n-   `np.compare_chararrays` has been removed from the main namespace.\r\n    Use `np.char.compare_chararrays` instead.\r\n\r\n-   The `charrarray` in the main namespace has been deprecated. It can\r\n    be imported without a deprecation warning from `np.char.chararray`\r\n    for now, but we are planning to fully deprecate and remove\r\n    `chararray` in the future.\r\n\r\n-   `np.format_parser` has been removed from the main namespace. Use\r\n    `np.rec.format_parser` instead.\r\n\r\n    ([gh-24587](https://github.com/numpy/numpy/pull/24587))\r\n\r\n-   Support for seven data type string aliases has been removed from\r\n    `np.dtype`: `int0`, `uint0`, `void0`, `object0`, `str0`, `bytes0`\r\n    and `bool8`.\r\n\r\n    ([gh-24807](https://github.com/numpy/numpy/pull/24807))\r\n\r\n-   The experimental `numpy.array_api` submodule has been removed. Use\r\n    the main `numpy` namespace for regular usage instead, or the\r\n    separate `array-api-strict` package for the compliance testing use\r\n    case for which `numpy.array_api` was mostly used.\r\n\r\n    ([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n### `__array_prepare__` is removed\r\n\r\nUFuncs called `__array_prepare__` before running computations for normal\r\nufunc calls (not generalized ufuncs, reductions, etc.). The function was\r\nalso called instead of `__array_wrap__` on the results of some linear\r\nalgebra functions.\r\n\r\nIt is now removed. If you use it, migrate to `__array_ufunc__` or rely\r\non `__array_wrap__` which is called with a context in all cases,\r\nalthough only after the result array is filled. In those code paths,\r\n`__array_wrap__` will now be passed a base class, rather than a subclass\r\narray.\r\n\r\n([gh-25105](https://github.com/numpy/numpy/pull/25105))\r\n\r\n## Deprecations\r\n\r\n-   `np.compat` has been deprecated, as Python 2 is no longer supported.\r\n\r\n-   `np.safe_eval` has been deprecated. `ast.literal_eval` should be\r\n    used instead.\r\n\r\n    ([gh-23830](https://github.com/numpy/numpy/pull/23830))\r\n\r\n-   `np.recfromcsv`, `np.recfromtxt`, `np.disp`, `np.get_array_wrap`,\r\n    `np.maximum_sctype`, `np.deprecate` and `np.deprecate_with_doc` have\r\n    been deprecated.\r\n\r\n    ([gh-24154](https://github.com/numpy/numpy/pull/24154))\r\n\r\n-   `np.trapz` has been deprecated. Use `np.trapezoid` or a\r\n    `scipy.integrate` function instead.\r\n\r\n-   `np.in1d` has been deprecated. Use `np.isin` instead.\r\n\r\n-   Alias `np.row_stack` has been deprecated. Use `np.vstack` directly.\r\n\r\n    ([gh-24445](https://github.com/numpy/numpy/pull/24445))\r\n\r\n-   `__array_wrap__` is now passed `arr, context, return_scalar` and\r\n    support for implementations not accepting all three are deprecated.\r\n    Its signature should be\r\n    `__array_wrap__(self, arr, context=None, return_scalar=False)`\r\n\r\n    ([gh-25408](https://github.com/numpy/numpy/pull/25408))\r\n\r\n-   Arrays of 2-dimensional vectors for `np.cross` have been deprecated.\r\n    Use arrays of 3-dimensional vectors instead.\r\n\r\n    ([gh-24818](https://github.com/numpy/numpy/pull/24818))\r\n\r\n-   `np.dtype(\"a\")` alias for `np.dtype(np.bytes_)` was deprecated. Use\r\n    `np.dtype(\"S\")` alias instead.\r\n\r\n    ([gh-24854](https://github.com/numpy/numpy/pull/24854))\r\n\r\n-   Use of keyword arguments `x` and `y` with functions\r\n    `assert_array_equal` and `assert_array_almost_equal` has been\r\n    deprecated. Pass the first two arguments as positional arguments\r\n    instead.\r\n\r\n    ([gh-24978](https://github.com/numpy/numpy/pull/24978))\r\n\r\n### `numpy.fft` deprecations for n-D transforms with None values in arguments\r\n\r\nUsing `fftn`, `ifftn`, `rfftn`, `irfftn`, `fft2`, `ifft2`, `rfft2` or\r\n`irfft2` with the `s` parameter set to a value that is not `None` and\r\nthe `axes` parameter set to `None` has been deprecated, in line with the\r\narray API standard. To retain current behaviour, pass a sequence \\[0,\r\n\\..., k-1\\] to `axes` for an array of dimension k.\r\n\r\nFurthermore, passing an array to `s` which contains `None` values is\r\ndeprecated as the parameter is documented to accept a sequence of\r\nintegers in both the NumPy docs and the array API specification. To use\r\nthe default behaviour of the corresponding 1-D transform, pass the value\r\nmatching the default for its `n` parameter. To use the default behaviour\r\nfor every axis, the `s` argument can be omitted.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### `np.linalg.lstsq` now defaults to a new `rcond` value\r\n\r\n`numpy.linalg.lstsq` now uses the new rcond value of the\r\nmachine precision times `max(M, N)`. Previously, the machine precision\r\nwas used but a FutureWarning was given to notify that this change will\r\nhappen eventually. That old behavior can still be achieved by passing\r\n`rcond=-1`.\r\n\r\n([gh-25721](https://github.com/numpy/numpy/pull/25721))\r\n\r\n## Expired deprecations\r\n\r\n-   The `np.core.umath_tests` submodule has been removed from the public\r\n    API. (Deprecated in NumPy 1.15)\r\n\r\n    ([gh-23809](https://github.com/numpy/numpy/pull/23809))\r\n\r\n-   The `PyDataMem_SetEventHook` deprecation has expired and it is\r\n    removed. Use `tracemalloc` and the `np.lib.tracemalloc_domain`\r\n    domain. (Deprecated in NumPy 1.23)\r\n\r\n    ([gh-23921](https://github.com/numpy/numpy/pull/23921))\r\n\r\n-   The deprecation of `set_numeric_ops` and the C functions\r\n    `PyArray_SetNumericOps` and `PyArray_GetNumericOps` has been expired\r\n    and the functions removed. (Deprecated in NumPy 1.16)\r\n\r\n    ([gh-23998](https://github.com/numpy/numpy/pull/23998))\r\n\r\n-   The `fasttake`, `fastclip`, and `fastputmask` `ArrFuncs` deprecation\r\n    is now finalized.\r\n\r\n-   The deprecated function `fastCopyAndTranspose` and its C counterpart\r\n    are now removed.\r\n\r\n-   The deprecation of `PyArray_ScalarFromObject` is now finalized.\r\n\r\n    ([gh-24312](https://github.com/numpy/numpy/pull/24312))\r\n\r\n-   `np.msort` has been removed. For a replacement, `np.sort(a, axis=0)`\r\n    should be used instead.\r\n\r\n    ([gh-24494](https://github.com/numpy/numpy/pull/24494))\r\n\r\n-   `np.dtype((\"f8\", 1)` will now return a shape 1 subarray dtype rather\r\n    than a non-subarray one.\r\n\r\n    ([gh-25761](https://github.com/numpy/numpy/pull/25761))\r\n\r\n-   Assigning to the `.data` attribute of an ndarray is disallowed and\r\n    will raise.\r\n\r\n-   `np.binary_repr(a, width)` will raise if width is too small.\r\n\r\n-   Using `NPY_CHAR` in `PyArray_DescrFromType()` will raise, use\r\n    `NPY_STRING` `NPY_UNICODE`, or `NPY_VSTRING` instead.\r\n\r\n    ([gh-25794](https://github.com/numpy/numpy/pull/25794))\r\n\r\n## Compatibility notes\r\n\r\n### `loadtxt` and `genfromtxt` default encoding changed\r\n\r\n`loadtxt` and `genfromtxt` now both default to `encoding=None` which may\r\nmainly modify how `converters` work. These will now be passed `str`\r\nrather than `bytes`. Pass the encoding explicitly to always get the new\r\nor old behavior. For `genfromtxt` the change also means that returned\r\nvalues will now be unicode strings rather than bytes.\r\n\r\n([gh-25158](https://github.com/numpy/numpy/pull/25158))\r\n\r\n### `f2py` compatibility notes\r\n\r\n-   `f2py` will no longer accept ambiguous `-m` and `.pyf` CLI\r\n    combinations. When more than one `.pyf` file is passed, an error is\r\n    raised. When both `-m` and a `.pyf` is passed, a warning is emitted\r\n    and the `-m` provided name is ignored.\r\n\r\n    ([gh-25181](https://github.com/numpy/numpy/pull/25181))\r\n\r\n-   The `f2py.compile()` helper has been removed because it leaked\r\n    memory, has been marked as experimental for several years now, and\r\n    was implemented as a thin `subprocess.run` wrapper. It was also one\r\n    of the test bottlenecks. See\r\n    [gh-25122](https://github.com/numpy/numpy/issues/25122) for the full\r\n    rationale. It also used several `np.distutils` features which are\r\n    too fragile to be ported to work with `meson`.\r\n\r\n-   Users are urged to replace calls to `f2py.compile` with calls to\r\n    `subprocess.run(\"python\", \"-m\", \"numpy.f2py\",...` instead, and to\r\n    use environment variables to interact with `meson`. [Native\r\n    files](https://mesonbuild.com/Machine-files.html) are also an\r\n    option.\r\n\r\n    ([gh-25193](https://github.com/numpy/numpy/pull/25193))\r\n\r\n### Minor changes in behavior of sorting functions\r\n\r\nDue to algorithmic changes and use of SIMD code, sorting functions with\r\nmethods that aren\\'t stable may return slightly different results in\r\n2.0.0 compared to 1.26.x. This includes the default method of\r\n`numpy.argsort` and `numpy.argpartition`.\r\n\r\n### Removed ambiguity when broadcasting in `np.solve`\r\n\r\nThe broadcasting rules for `np.solve(a, b)` were ambiguous when `b` had\r\n1 fewer dimensions than `a`. This has been resolved in a\r\nbackward-incompatible way and is now compliant with the Array API. The\r\nold behaviour can be reconstructed by using\r\n`np.solve(a, b[..., None])[..., 0]`.\r\n\r\n([gh-25914](https://github.com/numpy/numpy/pull/25914))\r\n\r\n### Modified representation for `Polynomial`\r\n\r\nThe representation method for\r\n`numpy.polynomial.polynomial.Polynomial` was updated to\r\ninclude the domain in the representation. The plain text and latex\r\nrepresentations are now consistent. For example the output of\r\n`str(np.polynomial.Polynomial([1, 1], domain=[.1, .2]))` used to be\r\n`1.0 + 1.0 x`, but now is `1.0 + 1.0 (-3.0000000000000004 + 20.0 x)`.\r\n\r\n([gh-21760](https://github.com/numpy/numpy/pull/21760))\r\n\r\n## C API changes\r\n\r\n-   The `PyArray_CGT`, `PyArray_CLT`, `PyArray_CGE`, `PyArray_CLE`,\r\n    `PyArray_CEQ`, `PyArray_CNE` macros have been removed.\r\n\r\n-   `PyArray_MIN` and `PyArray_MAX` have been moved from\r\n    `ndarraytypes.h` to `npy_math.h`.\r\n\r\n    ([gh-24258](https://github.com/numpy/numpy/pull/24258))\r\n\r\n-   A C API for working with `numpy.dtypes.StringDType`\r\n    arrays has been exposed. This includes functions for acquiring and\r\n    releasing mutexes which lock access to the string data, as well as\r\n    packing and unpacking UTF-8 bytestreams from array entries.\r\n\r\n-   `NPY_NTYPES` has been renamed to `NPY_NTYPES_LEGACY` as it does not\r\n    include new NumPy built-in DTypes. In particular the new string\r\n    DType will likely not work correctly with code that handles legacy\r\n    DTypes.\r\n\r\n    ([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n-   The C-API now only exports the static inline function versions of\r\n    the array accessors (previously this depended on using \\\"deprecated\r\n    API\\\"). While we discourage it, the struct fields can still be used\r\n    directly.\r\n\r\n    ([gh-25789](https://github.com/numpy/numpy/pull/25789))\r\n\r\n-   NumPy now defines `PyArray_Pack` to set an individual memory address.\r\n    Unlike `PyArray_SETITEM` this function is equivalent to setting an\r\n    individual array item and does not require a NumPy array input.\r\n\r\n    ([gh-25954](https://github.com/numpy/numpy/pull/25954))\r\n\r\n-   The `->f` slot has been removed from `PyArray_Descr`. If you use this slot,\r\n    replace accessing it with `PyDataType_GetArrFuncs` (see its documentation\r\n    and the `numpy-2-migration-guide`). In some cases using other functions\r\n    like `PyArray_GETITEM` may be an alternatives.\r\n\r\n-   `PyArray_GETITEM` and `PyArray_SETITEM` now require the import of\r\n    the NumPy API table to be used and are no longer defined in\r\n    `ndarraytypes.h`.\r\n\r\n    ([gh-25812](https://github.com/numpy/numpy/pull/25812))\r\n\r\n-   Due to runtime dependencies, the definition for functionality\r\n    accessing the dtype flags was moved from `numpy/ndarraytypes.h` and\r\n    is only available after including `numpy/ndarrayobject.h` as it\r\n    requires `import_array()`. This includes `PyDataType_FLAGCHK`,\r\n    `PyDataType_REFCHK` and `NPY_BEGIN_THREADS_DESCR`.\r\n\r\n-   The dtype flags on `PyArray_Descr` must now be accessed through the\r\n    `PyDataType_FLAGS` inline function to be compatible with both 1.x\r\n    and 2.x. This function is defined in `npy_2_compat.h` to allow\r\n    backporting. Most or all users should use `PyDataType_FLAGCHK` which\r\n    is available on 1.x and does not require backporting. Cython users\r\n    should use Cython 3. Otherwise access will go through Python unless\r\n    they use `PyDataType_FLAGCHK` instead.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Datetime functionality exposed in the C API and Cython bindings\r\n\r\nThe functions `NpyDatetime_ConvertDatetime64ToDatetimeStruct`,\r\n`NpyDatetime_ConvertDatetimeStructToDatetime64`,\r\n`NpyDatetime_ConvertPyDateTimeToDatetimeStruct`,\r\n`NpyDatetime_GetDatetimeISO8601StrLen`,\r\n`NpyDatetime_MakeISO8601Datetime`, and\r\n`NpyDatetime_ParseISO8601Datetime` have been added to the C API to\r\nfacilitate converting between strings, Python datetimes, and NumPy\r\ndatetimes in external libraries.\r\n\r\n([gh-21199](https://github.com/numpy/numpy/pull/21199))\r\n\r\n### Const correctness for the generalized ufunc C API\r\n\r\nThe NumPy C API\\'s functions for constructing generalized ufuncs\r\n(`PyUFunc_FromFuncAndData`, `PyUFunc_FromFuncAndDataAndSignature`,\r\n`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`) take `types` and\r\n`data` arguments that are not modified by NumPy\\'s internals. Like the\r\n`name` and `doc` arguments, third-party Python extension modules are\r\nlikely to supply these arguments from static constants. The `types` and\r\n`data` arguments are now const-correct: they are declared as\r\n`const char *types` and `void *const *data`, respectively. C code should\r\nnot be affected, but C++ code may be.\r\n\r\n([gh-23847](https://github.com/numpy/numpy/pull/23847))\r\n\r\n### Larger `NPY_MAXDIMS` and `NPY_MAXARGS`, `NPY_RAVEL_AXIS` introduced\r\n\r\n`NPY_MAXDIMS` is now 64, you may want to review its use. This is usually\r\nused in a stack allocation, where the increase should be safe. However,\r\nwe do encourage generally to remove any use of `NPY_MAXDIMS` and\r\n`NPY_MAXARGS` to eventually allow removing the constraint completely.\r\nFor the conversion helper and C-API functions mirroring Python ones such as\r\n`take`, `NPY_MAXDIMS` was used to mean `axis=None`. Such usage must be replaced\r\nwith `NPY_RAVEL_AXIS`. See also `migration_maxdims`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### `NPY_MAXARGS` not constant and `PyArrayMultiIterObject` size change\r\n\r\nSince `NPY_MAXARGS` was increased, it is now a runtime constant and not\r\ncompile-time constant anymore. We expect almost no users to notice this.\r\nBut if used for stack allocations it now must be replaced with a custom\r\nconstant using `NPY_MAXARGS` as an additional runtime check.\r\n\r\nThe `sizeof(PyArrayMultiIterObject)` no longer includes the full size of\r\nthe object. We expect nobody to notice this change. It was necessary to\r\navoid issues with Cython.\r\n\r\n([gh-25271](https://github.com/numpy/numpy/pull/25271))\r\n\r\n### Required changes for custom legacy user dtypes\r\n\r\nIn order to improve our DTypes it is unfortunately necessary to break\r\nthe ABI, which requires some changes for dtypes registered with\r\n`PyArray_RegisterDataType`. Please see the documentation of\r\n`PyArray_RegisterDataType` for how to adapt your code and achieve\r\ncompatibility with both 1.x and 2.x.\r\n\r\n([gh-25792](https://github.com/numpy/numpy/pull/25792))\r\n\r\n### New Public DType API\r\n\r\nThe C implementation of the NEP 42 DType API is now public. While the\r\nDType API has shipped in NumPy for a few versions, it was only usable in\r\nsessions with a special environment variable set. It is now possible to\r\nwrite custom DTypes outside of NumPy using the new DType API and the\r\nnormal `import_array()` mechanism for importing the numpy C API.\r\n\r\nSee `dtype-api` for more details about the API. As always with a new feature,\r\nplease report any bugs you run into implementing or using a new DType. It is\r\nlikely that downstream C code that works with dtypes will need to be updated to\r\nwork correctly with new DTypes.\r\n\r\n([gh-25754](https://github.com/numpy/numpy/pull/25754))\r\n\r\n### New C-API import functions\r\n\r\nWe have now added `PyArray_ImportNumPyAPI` and `PyUFunc_ImportUFuncAPI`\r\nas static inline functions to import the NumPy C-API tables. The new\r\nfunctions have two advantages over `import_array` and `import_ufunc`:\r\n\r\n-   They check whether the import was already performed and are\r\n    light-weight if not, allowing to add them judiciously (although this\r\n    is not preferable in most cases).\r\n-   The old mechanisms were macros rather than functions which included\r\n    a `return` statement.\r\n\r\nThe `PyArray_ImportNumPyAPI()` function is included in `npy_2_compat.h`\r\nfor simpler backporting.\r\n\r\n([gh-25866](https://github.com/numpy/numpy/pull/25866))\r\n\r\n### Structured dtype information access through functions\r\n\r\nThe dtype structures fields `c_metadata`, `names`, `fields`, and\r\n`subarray` must now be accessed through new functions following the same\r\nnames, such as `PyDataType_NAMES`. Direct access of the fields is not\r\nvalid as they do not exist for all `PyArray_Descr` instances. The\r\n`metadata` field is kept, but the macro version should also be\r\npreferred.\r\n\r\n([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n### Descriptor `elsize` and `alignment` access\r\n\r\nUnless compiling only with NumPy 2 support, the `elsize` and `aligment`\r\nfields must now be accessed via `PyDataType_ELSIZE`,\r\n`PyDataType_SET_ELSIZE`, and `PyDataType_ALIGNMENT`. In cases where the\r\ndescriptor is attached to an array, we advise using `PyArray_ITEMSIZE`\r\nas it exists on all NumPy versions. Please see\r\n`migration_c_descr` for more information.\r\n\r\n([gh-25943](https://github.com/numpy/numpy/pull/25943))\r\n\r\n## NumPy 2.0 C API removals\r\n\r\n-   `npy_interrupt.h` and the corresponding macros like `NPY_SIGINT_ON`\r\n    have been removed. We recommend querying `PyErr_CheckSignals()` or\r\n    `PyOS_InterruptOccurred()` periodically (these do currently require\r\n    holding the GIL though).\r\n\r\n-   The `noprefix.h` header has been removed. Replace missing symbols\r\n    with their prefixed counterparts (usually an added `NPY_` or\r\n    `npy_`).\r\n\r\n    ([gh-23919](https://github.com/numpy/numpy/pull/23919))\r\n\r\n-   `PyUFunc_GetPyVals`, `PyUFunc_handlefperr`, and `PyUFunc_checkfperr`\r\n    have been removed. If needed, a new backwards compatible function to\r\n    raise floating point errors could be restored. Reason for removal:\r\n    there are no known users and the functions would have made\r\n    `with np.errstate()` fixes much more difficult).\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   The `numpy/old_defines.h` which was part of the API deprecated since\r\n    NumPy 1.7 has been removed. This removes macros of the form\r\n    `PyArray_CONSTANT`. The\r\n    [replace_old_macros.sed](https://github.com/numpy/numpy/blob/main/tools/replace_old_macros.sed)\r\n    script may be useful to convert them to the `NPY_CONSTANT` version.\r\n\r\n    ([gh-24011](https://github.com/numpy/numpy/pull/24011))\r\n\r\n-   The `legacy_inner_loop_selector` member of the ufunc struct is\r\n    removed to simplify improvements to the dispatching system. There\r\n    are no known users overriding or directly accessing this member.\r\n\r\n    ([gh-24271](https://github.com/numpy/numpy/pull/24271))\r\n\r\n-   `NPY_INTPLTR` has been removed to avoid confusion (see `intp`\r\n    redefinition).\r\n\r\n    ([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n-   The advanced indexing `MapIter` and related API has been removed.\r\n    The (truly) public part of it was not well tested and had only one\r\n    known user (Theano). Making it private will simplify improvements to\r\n    speed up `ufunc.at`, make advanced indexing more maintainable, and\r\n    was important for increasing the maximum number of dimensions of\r\n    arrays to 64. Please let us know if this API is important to you so\r\n    we can find a solution together.\r\n\r\n    ([gh-25138](https://github.com/numpy/numpy/pull/25138))\r\n\r\n-   The `NPY_MAX_ELSIZE` macro has been removed, as it only ever\r\n    reflected builtin numeric types and served no internal purpose.\r\n\r\n    ([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n-   `PyArray_REFCNT` and `NPY_REFCOUNT` are removed. Use `Py_REFCNT`\r\n    instead.\r\n\r\n    ([gh-25156](https://github.com/numpy/numpy/pull/25156))\r\n\r\n-   `PyArrayFlags_Type` and `PyArray_NewFlagsObject` as well as\r\n    `PyArrayFlagsObject` are private now. There is no known use-case;\r\n    use the Python API if needed.\r\n\r\n-   `PyArray_MoveInto`, `PyArray_CastTo`, `PyArray_CastAnyTo` are\r\n    removed use `PyArray_CopyInto` and if absolutely needed\r\n    `PyArray_CopyAnyInto` (the latter does a flat copy).\r\n\r\n-   `PyArray_FillObjectArray` is removed, its only true use was for\r\n    implementing `np.empty`. Create a new empty array or use\r\n    `PyArray_FillWithScalar()` (decrefs existing objects).\r\n\r\n-   `PyArray_CompareUCS4` and `PyArray_CompareString` are removed. Use\r\n    the standard C string comparison functions.\r\n\r\n-   `PyArray_ISPYTHON` is removed as it is misleading, has no known\r\n    use-cases, and is easy to replace.\r\n\r\n-   `PyArray_FieldNames` is removed, as it is unclear what it would be\r\n    useful for. It also has incorrect semantics in some possible\r\n    use-cases.\r\n\r\n-   `PyArray_TypestrConvert` is removed, since it seems a misnomer and\r\n    unlikely to be used by anyone. If you know the size or are limited\r\n    to few types, just use it explicitly, otherwise go via Python\r\n    strings.\r\n\r\n    ([gh-25292](https://github.com/numpy/numpy/pull/25292))\r\n\r\n-   `PyDataType_GetDatetimeMetaData` is removed, it did not actually do\r\n    anything since at least NumPy 1.7.\r\n\r\n    ([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n-   `PyArray_GetCastFunc` is removed. Note that custom legacy user\r\n    dtypes can still provide a castfunc as their implementation, but any\r\n    access to them is now removed. The reason for this is that NumPy\r\n    never used these internally for many years. If you use simple\r\n    numeric types, please just use C casts directly. In case you require\r\n    an alternative, please let us know so we can create new API such as\r\n    `PyArray_CastBuffer()` which could use old or new cast functions\r\n    depending on the NumPy version.\r\n\r\n    ([gh-25161](https://github.com/numpy/numpy/pull/25161))\r\n\r\n## New Features\r\n\r\n### `np.add` was extended to work with `unicode` and `bytes` dtypes.\r\n\r\n> ([gh-24858](https://github.com/numpy/numpy/pull/24858))\r\n\r\n### A new `bitwise_count` function\r\n\r\nThis new function counts the number of 1-bits in a number.\r\n`numpy.bitwise_count` works on all the numpy integer types\r\nand integer-like objects.\r\n\r\n``` python\r\n>>> a = np.array([2**i - 1 for i in range(16)])\r\n>>> np.bitwise_count(a)\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15],\r\n      dtype=uint8)\r\n```\r\n\r\n([gh-19355](https://github.com/numpy/numpy/pull/19355))\r\n\r\n### macOS Accelerate support, including the ILP64\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, or if no explicit BLAS library selection is done, the 13.3+\r\nversion will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\nBinary wheels are also available. On macOS \\>=14.0, users who install\r\nNumPy from PyPI will get wheels built against Accelerate rather than\r\nOpenBLAS.\r\n\r\n([gh-25255](https://github.com/numpy/numpy/pull/25255))\r\n\r\n### Option to use weights for quantile and percentile functions\r\n\r\nA `weights` keyword is now available for `numpy.quantile`, `numpy.percentile`,\r\n`numpy.nanquantile` and `numpy.nanpercentile`. Only `method=\"inverted_cdf\"`\r\nsupports weights.\r\n\r\n([gh-24254](https://github.com/numpy/numpy/pull/24254))\r\n\r\n### Improved CPU optimization tracking\r\n\r\nA new tracer mechanism is available which enables tracking of the\r\nenabled targets for each optimized function (i.e., that uses\r\nhardware-specific SIMD instructions) in the NumPy library. With this\r\nenhancement, it becomes possible to precisely monitor the enabled CPU\r\ndispatch targets for the dispatched functions.\r\n\r\nA new function named `opt_func_info` has been added to the new namespace\r\n`numpy.lib.introspect`, offering this tracing capability.  This function allows\r\nyou to retrieve information about the enabled targets based on function names\r\nand data type signatures.\r\n\r\n([gh-24420](https://github.com/numpy/numpy/pull/24420))\r\n\r\n### A new Meson backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python \\>=3.12.\r\nFor older Python versions, `f2py` will still default to\r\n`--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other C interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in C and Fortran, not in\r\nPython and Fortran.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n### A new `strict` option for several testing functions\r\n\r\nThe `strict` keyword is now available for `numpy.testing.assert_allclose`,\r\n`numpy.testing.assert_equal`, and `numpy.testing.assert_array_less`. Setting\r\n`strict=True` will disable the broadcasting behaviour for scalars and ensure\r\nthat input arrays have the same data type.\r\n\r\n([gh-24680](https://github.com/numpy/numpy/pull/24680),\r\n[gh-24770](https://github.com/numpy/numpy/pull/24770),\r\n[gh-24775](https://github.com/numpy/numpy/pull/24775))\r\n\r\n### Add `np.core.umath.find` and `np.core.umath.rfind` UFuncs\r\n\r\nAdd two `find` and `rfind` UFuncs that operate on unicode or byte\r\nstrings and are used in `np.char`. They operate similar to `str.find`\r\nand `str.rfind`.\r\n\r\n([gh-24868](https://github.com/numpy/numpy/pull/24868))\r\n\r\n### `diagonal` and `trace` for `numpy.linalg`\r\n\r\n`numpy.linalg.diagonal` and `numpy.linalg.trace` have been added, which are\r\narray API standard-compatible variants of `numpy.diagonal` and `numpy.trace`.\r\nThey differ in the default axis selection which define 2-D sub-arrays.\r\n\r\n([gh-24887](https://github.com/numpy/numpy/pull/24887))\r\n\r\n### New `long` and `ulong` dtypes\r\n\r\n`numpy.long` and `numpy.ulong` have been added as NumPy integers mapping to\r\nC\\'s `long` and `unsigned long`. Prior to NumPy 1.24, `numpy.long` was an alias\r\nto Python\\'s `int`.\r\n\r\n([gh-24922](https://github.com/numpy/numpy/pull/24922))\r\n\r\n### `svdvals` for `numpy.linalg`\r\n\r\n`numpy.linalg.svdvals` has been added. It computes singular values for (a stack\r\nof) matrices. Executing `np.svdvals(x)` is the same as calling `np.svd(x,\r\ncompute_uv=False, hermitian=False)`. This function is compatible with the array\r\nAPI standard.\r\n\r\n([gh-24940](https://github.com/numpy/numpy/pull/24940))\r\n\r\n### A new `isdtype` function\r\n\r\n`numpy.isdtype` was added to provide a canonical way to classify NumPy\\'s\r\ndtypes in compliance with the array API standard.\r\n\r\n([gh-25054](https://github.com/numpy/numpy/pull/25054))\r\n\r\n### A new `astype` function\r\n\r\n`numpy.astype` was added to provide an array API standard-compatible\r\nalternative to the `numpy.ndarray.astype` method.\r\n\r\n([gh-25079](https://github.com/numpy/numpy/pull/25079))\r\n\r\n### Array API compatible functions\\' aliases\r\n\r\n13 aliases for existing functions were added to improve compatibility\r\nwith the array API standard:\r\n\r\n-   Trigonometry: `acos`, `acosh`, `asin`, `asinh`, `atan`, `atanh`,\r\n    `atan2`.\r\n-   Bitwise: `bitwise_left_shift`, `bitwise_invert`,\r\n    `bitwise_right_shift`.\r\n-   Misc: `concat`, `permute_dims`, `pow`.\r\n-   In `numpy.linalg`: `tensordot`, `matmul`.\r\n\r\n([gh-25086](https://github.com/numpy/numpy/pull/25086))\r\n\r\n### New `unique_*` functions\r\n\r\nThe `numpy.unique_all`, `numpy.unique_counts`, `numpy.unique_inverse`, and\r\n`numpy.unique_values` functions have been added. They provide functionality of\r\n`numpy.unique` with different sets of flags. They are array API\r\nstandard-compatible, and because the number of arrays they return does not\r\ndepend on the values of input arguments, they are easier to target for JIT\r\ncompilation.\r\n\r\n([gh-25088](https://github.com/numpy/numpy/pull/25088))\r\n\r\n### Matrix transpose support for ndarrays\r\n\r\nNumPy now offers support for calculating the matrix transpose of an\r\narray (or stack of arrays). The matrix transpose is equivalent to\r\nswapping the last two axes of an array. Both `np.ndarray` and\r\n`np.ma.MaskedArray` now expose a `.mT` attribute, and there is a\r\nmatching new `numpy.matrix_transpose` function.\r\n\r\n([gh-23762](https://github.com/numpy/numpy/pull/23762))\r\n\r\n### Array API compatible functions for `numpy.linalg`\r\n\r\nSix new functions and two aliases were added to improve compatibility\r\nwith the Array API standard for \\`numpy.linalg\\`:\r\n\r\n-   `numpy.linalg.matrix_norm` - Computes the matrix norm of\r\n    a matrix (or a stack of matrices).\r\n\r\n-   `numpy.linalg.vector_norm` - Computes the vector norm of\r\n    a vector (or batch of vectors).\r\n\r\n-   `numpy.vecdot` - Computes the (vector) dot product of\r\n    two arrays.\r\n\r\n-   `numpy.linalg.vecdot` - An alias for\r\n    `numpy.vecdot`.\r\n\r\n-   `numpy.linalg.matrix_transpose` - An alias for\r\n    `numpy.matrix_transpose`.\r\n\r\n    ([gh-25155](https://github.com/numpy/numpy/pull/25155))\r\n\r\n-   `numpy.linalg.outer` has been added. It computes the\r\n    outer product of two vectors. It differs from\r\n    `numpy.outer` by accepting one-dimensional arrays only.\r\n    This function is compatible with the array API standard.\r\n\r\n    ([gh-25101](https://github.com/numpy/numpy/pull/25101))\r\n\r\n-   `numpy.linalg.cross` has been added. It computes the\r\n    cross product of two (arrays of) 3-dimensional vectors. It differs\r\n    from `numpy.cross` by accepting three-dimensional\r\n    vectors only. This function is compatible with the array API\r\n    standard.\r\n\r\n    ([gh-25145](https://github.com/numpy/numpy/pull/25145))\r\n\r\n### A `correction` argument for `var` and `std`\r\n\r\nA `correction` argument was added to `numpy.var` and `numpy.std`, which is an\r\narray API standard compatible alternative to `ddof`. As both arguments serve a\r\nsimilar purpose, only one of them can be provided at the same time.\r\n\r\n([gh-25169](https://github.com/numpy/numpy/pull/25169))\r\n\r\n### `ndarray.device` and `ndarray.to_device`\r\n\r\nAn `ndarray.device` attribute and `ndarray.to_device` method were added\r\nto `numpy.ndarray` for array API standard compatibility.\r\n\r\nAdditionally, `device` keyword-only arguments were added to:\r\n`numpy.asarray`, `numpy.arange`, `numpy.empty`, `numpy.empty_like`,\r\n`numpy.eye`, `numpy.full`, `numpy.full_like`, `numpy.linspace`, `numpy.ones`,\r\n`numpy.ones_like`, `numpy.zeros`, and `numpy.zeros_like`.\r\n\r\nFor all these new arguments, only `device=\"cpu\"` is supported.\r\n\r\n([gh-25233](https://github.com/numpy/numpy/pull/25233))\r\n\r\n### StringDType has been added to NumPy\r\n\r\nWe have added a new variable-width UTF-8 encoded string data type, implementing\r\na \\\"NumPy array of Python strings\\\", including support for a user-provided\r\nmissing data sentinel. It is intended as a drop-in replacement for arrays of\r\nPython strings and missing data sentinels using the object dtype. See \r\n[NEP 55](https://numpy.org/neps/nep-0055-string_dtype.html) and the documentation\r\nof stringdtype for more details.\r\n\r\n([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n### New keywords for `cholesky` and `pinv`\r\n\r\nThe `upper` and `rtol` keywords were added to\r\n`numpy.linalg.cholesky` and `numpy.linalg.pinv`,\r\nrespectively, to improve array API standard compatibility.\r\n\r\nFor `numpy.linalg.pinv`, if neither `rcond` nor `rtol` is\r\nspecified, the `rcond`\\'s default is used. We plan to deprecate and\r\nremove `rcond` in the future.\r\n\r\n([gh-25388](https://github.com/numpy/numpy/pull/25388))\r\n\r\n### New keywords for `sort`, `argsort` and `linalg.matrix_rank`\r\n\r\nNew keyword parameters were added to improve array API standard\r\ncompatibility:\r\n\r\n-   `rtol` was added to `numpy.linalg.matrix_rank`.\r\n-   `stable` was added to `numpy.sort` and\r\n    `numpy.argsort`.\r\n\r\n([gh-25437](https://github.com/numpy/numpy/pull/25437))\r\n\r\n### New `numpy.strings` namespace for string ufuncs\r\n\r\nNumPy now implements some string operations as ufuncs. The old `np.char`\r\nnamespace is still available, and where possible the string manipulation\r\nfunctions in that namespace have been updated to use the new ufuncs,\r\nsubstantially improving their performance.\r\n\r\nWhere possible, we suggest updating code to use functions in\r\n`np.strings` instead of `np.char`. In the future we may deprecate\r\n`np.char` in favor of `np.strings`.\r\n\r\n([gh-25463](https://github.com/numpy/numpy/pull/25463))\r\n\r\n### `numpy.fft` support for different precisions and in-place calculations\r\n\r\nThe various FFT routines in `numpy.fft` now do their\r\ncalculations natively in float, double, or long double precision,\r\ndepending on the input precision, instead of always calculating in\r\ndouble precision. Hence, the calculation will now be less precise for\r\nsingle and more precise for long double precision. The data type of the\r\noutput array will now be adjusted accordingly.\r\n\r\nFurthermore, all FFT routines have gained an `out` argument that can be\r\nused for in-place calculations.\r\n\r\n([gh-25536](https://github.com/numpy/numpy/pull/25536))\r\n\r\n### configtool and pkg-config support\r\n\r\nA new `numpy-config` CLI script is available that can be queried for the\r\nNumPy version and for compile flags needed to use the NumPy C API. This\r\nwill allow build systems to better support the use of NumPy as a\r\ndependency. Also, a `numpy.pc` pkg-config file is now included with\r\nNumpy. In order to find its location for use with `PKG_CONFIG_PATH`, use\r\n`numpy-config --pkgconfigdir`.\r\n\r\n([gh-25730](https://github.com/numpy/numpy/pull/25730))\r\n\r\n### Array API standard support in the main namespace\r\n\r\nThe main `numpy` namespace now supports the array API standard. See\r\n`array-api-standard-compatibility` for\r\ndetails.\r\n\r\n([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n## Improvements\r\n\r\n### Strings are now supported by `any`, `all`, and the logical ufuncs.\r\n\r\n> ([gh-25651](https://github.com/numpy/numpy/pull/25651))\r\n\r\n### Integer sequences as the shape argument for `memmap`\r\n\r\n`numpy.memmap` can now be created with any integer sequence\r\nas the `shape` argument, such as a list or numpy array of integers.\r\nPreviously, only the types of tuple and int could be used without\r\nraising an error.\r\n\r\n([gh-23729](https://github.com/numpy/numpy/pull/23729))\r\n\r\n### `errstate` is now faster and context safe\r\n\r\nThe `numpy.errstate` context manager/decorator is now faster\r\nand safer. Previously, it was not context safe and had (rare) issues\r\nwith thread-safety.\r\n\r\n([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n### AArch64 quicksort speed improved by using Highway\\'s VQSort\r\n\r\nThe first introduction of the Google Highway library, using VQSort on\r\nAArch64. Execution time is improved by up to 16x in some cases, see the\r\nPR for benchmark results. Extensions to other platforms will be done in\r\nthe future.\r\n\r\n([gh-24018](https://github.com/numpy/numpy/pull/24018))\r\n\r\n### Complex types - underlying C type changes\r\n\r\n-   The underlying C types for all of NumPy\\'s complex types have been\r\n    changed to use C99 complex types.\r\n\r\n-   While this change does not affect the memory layout of complex\r\n    types, it changes the API to be used to directly retrieve or write\r\n    the real or complex part of the complex number, since direct field\r\n    access (as in `c.real` or `c.imag`) is no longer an option. You can\r\n    now use utilities provided in `numpy/npy_math.h` to do these\r\n    operations, like this:\r\n\r\n    ``` c\r\n    npy_cdouble c;\r\n    npy_csetreal(&c, 1.0);\r\n    npy_csetimag(&c, 0.0);\r\n    printf(\"%d + %di\\n\", npy_creal(c), npy_cimag(c));\r\n    ```\r\n\r\n-   To ease cross-version compatibility, equivalent macros and a\r\n    compatibility layer have been added which can be used by downstream\r\n    packages to continue to support both NumPy 1.x and 2.x. See\r\n    `complex-numbers` for more info.\r\n\r\n-   `numpy/npy_common.h` now includes `complex.h`, which means that\r\n    `complex` is now a reserved keyword.\r\n\r\n([gh-24085](https://github.com/numpy/numpy/pull/24085))\r\n\r\n### `iso_c_binding` support and improved common blocks for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n`f2py` now handles `common` blocks which have `kind` specifications from\r\nmodules. This further expands the usability of intrinsics like\r\n`iso_fortran_env` and `iso_c_binding`.\r\n\r\n([gh-25186](https://github.com/numpy/numpy/pull/25186))\r\n\r\n### Call `str` automatically on third argument to functions like `assert_equal`\r\n\r\nThe third argument to functions like\r\n`numpy.testing.assert_equal` now has `str` called on it\r\nautomatically. This way it mimics the built-in `assert` statement, where\r\n`assert_equal(a, b, obj)` works like `assert a == b, obj`.\r\n\r\n([gh-24877](https://github.com/numpy/numpy/pull/24877))\r\n\r\n### Support for array-like `atol`/`rtol` in `isclose`, `allclose`\r\n\r\nThe keywords `atol` and `rtol` in `numpy.isclose` and\r\n`numpy.allclose` now accept both scalars and arrays. An\r\narray, if given, must broadcast to the shapes of the first two array\r\narguments.\r\n\r\n([gh-24878](https://github.com/numpy/numpy/pull/24878))\r\n\r\n### Consistent failure messages in test functions\r\n\r\nPreviously, some `numpy.testing` assertions printed messages\r\nthat referred to the actual and desired results as `x` and `y`. Now,\r\nthese values are consistently referred to as `ACTUAL` and `DESIRED`.\r\n\r\n([gh-24931](https://github.com/numpy/numpy/pull/24931))\r\n\r\n### n-D FFT transforms allow `s[i] == -1`\r\n\r\nThe `numpy.fft.fftn`, `numpy.fft.ifftn`,\r\n`numpy.fft.rfftn`, `numpy.fft.irfftn`,\r\n`numpy.fft.fft2`, `numpy.fft.ifft2`,\r\n`numpy.fft.rfft2` and `numpy.fft.irfft2`\r\nfunctions now use the whole input array along the axis `i` if\r\n`s[i] == -1`, in line with the array API standard.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### Guard PyArrayScalar_VAL and PyUnicodeScalarObject for the limited API\r\n\r\n`PyUnicodeScalarObject` holds a `PyUnicodeObject`, which is not\r\navailable when using `Py_LIMITED_API`. Add guards to hide it and\r\nconsequently also make the `PyArrayScalar_VAL` macro hidden.\r\n\r\n([gh-25531](https://github.com/numpy/numpy/pull/25531))\r\n\r\n## Changes\r\n\r\n-   `np.gradient()` now returns a tuple rather than a list making the\r\n    return value immutable.\r\n\r\n    ([gh-23861](https://github.com/numpy/numpy/pull/23861))\r\n\r\n-   Being fully context and thread-safe, `np.errstate` can only be\r\n    entered once now.\r\n\r\n-   `np.setbufsize` is now tied to `np.errstate()`: leaving an\r\n    `np.errstate` context will also reset the `bufsize`.\r\n\r\n    ([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n-   A new public `np.lib.array_utils` submodule has been introduced and\r\n    it currently contains three functions: `byte_bounds` (moved from\r\n    `np.lib.utils`), `normalize_axis_tuple` and `normalize_axis_index`.\r\n\r\n    ([gh-24540](https://github.com/numpy/numpy/pull/24540))\r\n\r\n-   Introduce `numpy.bool` as the new canonical name for\r\n    NumPy\\'s boolean dtype, and make `numpy.bool\\_` an alias\r\n    to it. Note that until NumPy 1.24, `np.bool` was an alias to\r\n    Python\\'s builtin `bool`. The new name helps with array API standard\r\n    compatibility and is a more intuitive name.\r\n\r\n    ([gh-25080](https://github.com/numpy/numpy/pull/25080))\r\n\r\n-   The `dtype.flags` value was previously stored as a signed integer.\r\n    This means that the aligned dtype struct flag lead to negative flags\r\n    being set (-128 rather than 128). This flag is now stored unsigned\r\n    (positive). Code which checks flags manually may need to adapt. This\r\n    may include code compiled with Cython 0.29.x.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Representation of NumPy scalars changed\r\n\r\nAs per NEP 51, the scalar representation has been updated to include the type\r\ninformation to avoid confusion with Python scalars.\r\n\r\nScalars are now printed as `np.float64(3.0)` rather than just `3.0`.\r\nThis may disrupt workflows that store representations of numbers (e.g.,\r\nto files) making it harder to read them. They should be stored as\r\nexplicit strings, for example by using `str()` or `f\"{scalar!s}\"`. For\r\nthe time being, affected users can use\r\n`np.set_printoptions(legacy=\"1.25\")` to get the old behavior (with\r\npossibly a few exceptions). Documentation of downstream projects may\r\nrequire larger updates, if code snippets are tested. We are working on\r\ntooling for\r\n[doctest-plus](https://github.com/scientific-python/pytest-doctestplus/issues/107)\r\nto facilitate updates.\r\n\r\n([gh-22449](https://github.com/numpy/numpy/pull/22449))\r\n\r\n### Truthiness of NumPy strings changed\r\n\r\nNumPy strings previously were inconsistent about how they defined if the\r\nstring is `True` or `False` and the definition did not match the one\r\nused by Python. Strings are now considered `True` when they are\r\nnon-empty and `False` when they are empty. This changes the following\r\ndistinct cases:\r\n\r\n-   Casts from string to boolean were previously roughly equivalent to\r\n    `string_array.astype(np.int64).astype(bool)`, meaning that only\r\n    valid integers could be cast. Now a string of `\"0\"` will be\r\n    considered `True` since it is not empty. If you need the old\r\n    behavior, you may use the above step (casting to integer first) or\r\n    `string_array == \"0\"` (if the input is only ever `0` or `1`). To get\r\n    the new result on old NumPy versions use `string_array != \"\"`.\r\n-   `np.nonzero(string_array)` previously ignored whitespace so that a\r\n    string only containing whitespace was considered `False`. Whitespace\r\n    is now considered `True`.\r\n\r\nThis change does not affect `np.loadtxt`, `np.fromstring`, or\r\n`np.genfromtxt`. The first two still use the integer definition, while\r\n`genfromtxt` continues to match for `\"true\"` (ignoring case). However,\r\nif `np.bool_` is used as a converter the result will change.\r\n\r\nThe change does affect `np.fromregex` as it uses direct assignments.\r\n\r\n([gh-23871](https://github.com/numpy/numpy/pull/23871))\r\n\r\n### A `mean` keyword was added to var and std function\r\n\r\nOften when the standard deviation is needed the mean is also needed. The\r\nsame holds for the variance and the mean. Until now the mean is then\r\ncalculated twice, the change introduced here for the `numpy.var` and\r\n`numpy.std` functions allows for passing in a precalculated mean as an keyword\r\nargument. See the docstrings for details and an example illustrating the\r\nspeed-up.\r\n\r\n([gh-24126](https://github.com/numpy/numpy/pull/24126))\r\n\r\n### Remove datetime64 deprecation warning when constructing with timezone\r\n\r\nThe `numpy.datetime64` method now issues a UserWarning rather than a\r\nDeprecationWarning whenever a timezone is included in the datetime string that\r\nis provided.\r\n\r\n([gh-24193](https://github.com/numpy/numpy/pull/24193))\r\n\r\n### Default integer dtype is now 64-bit on 64-bit Windows\r\n\r\nThe default NumPy integer is now 64-bit on all 64-bit systems as the\r\nhistoric 32-bit default on Windows was a common source of issues. Most\r\nusers should not notice this. The main issues may occur with code\r\ninterfacing with libraries written in a compiled language like C. For\r\nmore information see `migration_windows_int64`.\r\n\r\n([gh-24224](https://github.com/numpy/numpy/pull/24224))\r\n\r\n### Renamed `numpy.core` to `numpy._core`\r\n\r\nAccessing `numpy.core` now emits a DeprecationWarning. In practice we\r\nhave found that most downstream usage of `numpy.core` was to access\r\nfunctionality that is available in the main `numpy` namespace. If for\r\nsome reason you are using functionality in `numpy.core` that is not\r\navailable in the main `numpy` namespace, this means you are likely using\r\nprivate NumPy internals. You can still access these internals via\r\n`numpy._core` without a deprecation warning but we do not provide any\r\nbackward compatibility guarantees for NumPy internals. Please open an\r\nissue if you think a mistake was made and something needs to be made\r\npublic.\r\n\r\n([gh-24634](https://github.com/numpy/numpy/pull/24634))\r\n\r\nThe \\\"relaxed strides\\\" debug build option, which was previously enabled\r\nthrough the `NPY_RELAXED_STRIDES_DEBUG` environment variable or the\r\n`-Drelaxed-strides-debug` config-settings flag has been removed.\r\n\r\n([gh-24717](https://github.com/numpy/numpy/pull/24717))\r\n\r\n### Redefinition of `np.intp`/`np.uintp` (almost never a change)\r\n\r\nDue to the actual use of these types almost always matching the use of\r\n`size_t`/`Py_ssize_t` this is now the definition in C. Previously, it\r\nmatched `intptr_t` and `uintptr_t` which would often have been subtly\r\nincorrect. This has no effect on the vast majority of machines since the\r\nsize of these types only differ on extremely niche platforms.\r\n\r\nHowever, it means that:\r\n\r\n-   Pointers may not necessarily fit into an `intp` typed array anymore.\r\n    The `p` and `P` character codes can still be used, however.\r\n-   Creating `intptr_t` or `uintptr_t` typed arrays in C remains\r\n    possible in a cross-platform way via `PyArray_DescrFromType('p')`.\r\n-   The new character codes `nN` were introduced.\r\n-   It is now correct to use the Python C-API functions when parsing to\r\n    `npy_intp` typed arguments.\r\n\r\n([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n### `numpy.fft.helper` made private\r\n\r\n`numpy.fft.helper` was renamed to `numpy.fft._helper` to indicate that\r\nit is a private submodule. All public functions exported by it should be\r\naccessed from `numpy.fft`.\r\n\r\n([gh-24945](https://github.com/numpy/numpy/pull/24945))\r\n\r\n### `numpy.linalg.linalg` made private\r\n\r\n`numpy.linalg.linalg` was renamed to `numpy.linalg._linalg` to indicate\r\nthat it is a private submodule. All public functions exported by it\r\nshould be accessed from `numpy.linalg`.\r\n\r\n([gh-24946](https://github.com/numpy/numpy/pull/24946))\r\n\r\n### Out-of-bound axis not the same as `axis=None`\r\n\r\nIn some cases `axis=32` or for concatenate any large value was the same\r\nas `axis=None`. Except for `concatenate` this was deprecate. Any out of\r\nbound axis value will now error, make sure to use `axis=None`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### New `copy` keyword meaning for `array` and `asarray` constructors\r\n\r\nNow `numpy.array` and `numpy.asarray` support\r\nthree values for `copy` parameter:\r\n\r\n-   `None` - A copy will only be made if it is necessary.\r\n-   `True` - Always make a copy.\r\n-   `False` - Never make a copy. If a copy is required a `ValueError` is\r\n    raised.\r\n\r\nThe meaning of `False` changed as it now raises an exception if a copy\r\nis needed.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### The `__array__` special method now takes a `copy` keyword argument.\r\n\r\nNumPy will pass `copy` to the `__array__` special method in situations\r\nwhere it would be set to a non-default value (e.g. in a call to\r\n`np.asarray(some_object, copy=False)`). Currently, if an unexpected\r\nkeyword argument error is raised after this, NumPy will print a warning\r\nand re-try without the `copy` keyword argument. Implementations of\r\nobjects implementing the `__array__` protocol should accept a `copy`\r\nkeyword argument with the same meaning as when passed to\r\n`numpy.array` or `numpy.asarray`.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### Cleanup of initialization of `numpy.dtype` with strings with commas\r\n\r\nThe interpretation of strings with commas is changed slightly, in that a\r\ntrailing comma will now always create a structured dtype. E.g., where\r\npreviously `np.dtype(\"i\")` and `np.dtype(\"i,\")` were treated as\r\nidentical, now `np.dtype(\"i,\")` will create a structured dtype, with a\r\nsingle field. This is analogous to `np.dtype(\"i,i\")` creating a\r\nstructured dtype with two fields, and makes the behaviour consistent\r\nwith that expected of tuples.\r\n\r\nAt the same time, the use of single number surrounded by parenthesis to\r\nindicate a sub-array shape, like in `np.dtype(\"(2)i,\")`, is deprecated.\r\nInstead; one should use `np.dtype(\"(2,)i\")` or `np.dtype(\"2i\")`.\r\nEventually, using a number in parentheses will raise an exception, like\r\nis the case for initializations without a comma, like\r\n`np.dtype(\"(2)i\")`.\r\n\r\n([gh-25434](https://github.com/numpy/numpy/pull/25434))\r\n\r\n### Change in how complex sign is calculated\r\n\r\nFollowing the array API standard, the complex sign is now calculated as\r\n`z / |z|` (instead of the rather less logical case where the sign of the\r\nreal part was taken, unless the real part was zero, in which case the\r\nsign of the imaginary part was returned). Like for real numbers, zero is\r\nreturned if `z==0`.\r\n\r\n([gh-25441](https://github.com/numpy/numpy/pull/25441))\r\n\r\n### Return types of functions that returned a list of arrays\r\n\r\nFunctions that returned a list of ndarrays have been changed to return a\r\ntuple of ndarrays instead. Returning tuples consistently whenever a\r\nsequence of arrays is returned makes it easier for JIT compilers like\r\nNumba, as well as for static type checkers in some cases, to support\r\nthese functions. Changed functions are: `numpy.atleast_1d`, `numpy.atleast_2d`,\r\n`numpy.atleast_3d`, `numpy.broadcast_arrays`, `numpy.meshgrid`,\r\n`numpy.ogrid`, `numpy.histogramdd`.\r\n\r\n### `np.unique` `return_inverse` shape for multi-dimensional inputs\r\n\r\nWhen multi-dimensional inputs are passed to `np.unique` with\r\n`return_inverse=True`, the `unique_inverse` output is now shaped such\r\nthat the input can be reconstructed directly using\r\n`np.take(unique, unique_inverse)` when `axis=None`, and\r\n`np.take_along_axis(unique, unique_inverse, axis=axis)` otherwise.\r\n\r\n([gh-25553](https://github.com/numpy/numpy/pull/24126),\r\n[gh-25570](https://github.com/numpy/numpy/pull/25570))\r\n\r\n### `any` and `all` return booleans for object arrays\r\n\r\nThe `any` and `all` functions and methods now return booleans also for\r\nobject arrays. Previously, they did a reduction which behaved like the\r\nPython `or` and `and` operators which evaluates to one of the arguments.\r\nYou can use `np.logical_or.reduce` and `np.logical_and.reduce` to\r\nachieve the previous behavior.\r\n\r\n([gh-25712](https://github.com/numpy/numpy/pull/25712))\r\n\r\n### `np.can_cast` cannot be called on Python int, float, or complex\r\n\r\n`np.can_cast` cannot be called with Python int, float, or complex\r\ninstances anymore. This is because NEP 50 means that the result of\r\n`can_cast` must not depend on the value passed in. Unfortunately, for\r\nPython scalars whether a cast should be considered `\"same_kind\"` or\r\n`\"safe\"` may depend on the context and value so that this is currently\r\nnot implemented. In some cases, this means you may have to add a\r\nspecific path for: `if type(obj) in (int, float, complex): ...`.\r\n\r\n([gh-26393](https://github.com/numpy/numpy/pull/26393))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    68918d8a47bdb8032d3c29ba0b7aa922  numpy-2.0.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    28ef21e0db45a843901d5ecb203004f3  numpy-2.0.0rc2-cp310-cp310-macosx_11_0_arm64.whl\r\n    b0fbed65410612a81da2610887fcce7a  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_arm64.whl\r\n    0e263a8bb87d32496e6de1555b6de0d7  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    3700463b63c17514a42540f75f97e109  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    69c0e5b2a6054cee4cef3cfadf5bfc68  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8b6547f02d1fb76a3436900146509476  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    85008275bc2ebb5d540ec89d20f95d72  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    46d1b93d2f2a6985d6440e010fe231a6  numpy-2.0.0rc2-cp310-cp310-win32.whl\r\n    df23c9ab080e695009e6c9dfc5c9dfee  numpy-2.0.0rc2-cp310-cp310-win_amd64.whl\r\n    4f4ac0bbff2152b95851f720be6e04ff  numpy-2.0.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    df05a737d40018381c465e083fda65ba  numpy-2.0.0rc2-cp311-cp311-macosx_11_0_arm64.whl\r\n    9f3bbbce699559418b713f24bac5fd12  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_arm64.whl\r\n    ced25c7ad09b414f941584582c52ce54  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    b3af5409624e6aafb31107bd52bb8448  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2859530bd0234983dadaa51b44a09daf  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    de6b8fe89c20bd85652679bb4a4671ef  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    2f0f3fed01479ee14a05aa1fc960d33a  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    0542e8d87c48155e1c8534e2a39f5e7a  numpy-2.0.0rc2-cp311-cp311-win32.whl\r\n    b7f451c340e92eb3d8b31ea5390f7340  numpy-2.0.0rc2-cp311-cp311-win_amd64.whl\r\n    f41d4e26c72340801d6f2bb609edba46  numpy-2.0.0rc2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    1f8b24cc5b3006d778651e9ca9f7ed8c  numpy-2.0.0rc2-cp312-cp312-macosx_11_0_arm64.whl\r\n    5fd09e2e0fcb38fddac7b3ef1807ed82  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_arm64.whl\r\n    f6eca0f2a9c770f6c6a4ba551ad7e237  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    21b03eca64e88b952d843a70185e4144  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f7631a072b83fc080662c3f435ba6fd4  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    2a62e6cffd78fd3d35c9142d4c214c00  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    25467c8e576bbc140bafe38f3b1fdd60  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    b7d74f54199d7fa355ec4abc3f2cafff  numpy-2.0.0rc2-cp312-cp312-win32.whl\r\n    351eb69f9e0e69b06d13a8c03733e5e6  numpy-2.0.0rc2-cp312-cp312-win_amd64.whl\r\n    c774b6e40b62f0503788cd7042bf85a1  numpy-2.0.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    ef664eaadd0796fbc37fc3cc0c498c2e  numpy-2.0.0rc2-cp39-cp39-macosx_11_0_arm64.whl\r\n    f9a1d24dbeaa6433b827d82b9622b04b  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_arm64.whl\r\n    8ea2a873c471a5180d8a316c14abb09f  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_x86_64.whl\r\n    dce70c212e9c321ca189867f7ebc8e03  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    feacd9a21c6de648e8117bc1cc36fcc5  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cd34c2b0f9e25d80d2c4bd70717d565b  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    c1efda069b8c8826a6ba6d7a49ada148  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    4ef25fd7e575fa64d4c4e9dfdc1c9174  numpy-2.0.0rc2-cp39-cp39-win32.whl\r\n    d35cd476de68374a10d56737a882e735  numpy-2.0.0rc2-cp39-cp39-win_amd64.whl\r\n    b83c7ccda03ec1a1fec900c149bdc90d  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    0aff6e5f70e2d9fa299e3895294bd7a8  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    dd1c5bf6559fe41b21c81097e97232c3  numpy-2.0.0rc2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    ecab2eae88f6ba9421787655909045b7  numpy-2.0.0rc2-pp39-pypy39_pp73-win_amd64.whl\r\n    884d0fe28f77f07a3d51ba905ffdf0d3  numpy-2.0.0rc2.tar.gz\r\n\r\n### SHA256\r\n\r\n    53286933bf3be7a13459c7a7885ce0935aff56fe0baf280f0e6d80e75cc3ee3c  numpy-2.0.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2bc615498fce8e15b99c1b4d7e018ffebf7bd1a288665b3b916357bdf6725d6a  numpy-2.0.0rc2-cp310-cp310-macosx_11_0_arm64.whl\r\n    159d9c21a2989afdfebb638f60268becbc3da07eb224d9221a7c37255216feb6  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_arm64.whl\r\n    c58bc6aac83175dcfa02a0ef92b7a7fff5a0420014202f052a9af6214684e6ac  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_x86_64.whl\r\n    9b07a5c460941ae5ef8cde51c04b635af58abbbd55387ad6257dbdfda043290a  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0a49e876be11b4409eb3120841c7d2dba1f63549224f85fa4ab7ee83288c3b41  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    951164e9919664a3e5e605715809173b47f14329b586e24ec05e66ae516ce11b  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    201c0e05854d25f16b15851380c07d61aab34eef76a2acf1c3fcc4bda0879b0b  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    800ff28d0da25fca3f843c19035005b73c76350be7c6fa6061c8fcdd248aced9  numpy-2.0.0rc2-cp310-cp310-win32.whl\r\n    2a9a5ee4b090af548a1019bb76b53b02cb37f09dc002386349ee5e79ff54c40e  numpy-2.0.0rc2-cp310-cp310-win_amd64.whl\r\n    6d23b0db1fd4ad8225fd32f39036b07a5052398929a5af5291379bceac49d95a  numpy-2.0.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    a99ac361ddb0ef14894c3e7405aa98ffdfe6d0101b9f4a2e931f3912f3b43085  numpy-2.0.0rc2-cp311-cp311-macosx_11_0_arm64.whl\r\n    6aba1c147f69ee1fb8afb44e93178e92d2aa9a3bf5374b6f1cb53ee1cae1376d  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_arm64.whl\r\n    4f3a4c676ab4ce211e5886cb16cc282e9e18b352b2b1427bbb4c104f9d80f12a  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_x86_64.whl\r\n    12d3bf0cac2aec23e10b6927ee063aa6cf7ca8deba1d3c5702faa0ea5cfb8049  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a44b0ebf7ef61c289a33c76247874177c446083c5236c7e7e0595350883e0424  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0e146557fdede5a7434a788648e62a9e87db8c6e05136a92483e2c2180ad4bab  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    01ac116e2f053f283ac5292fcd146f8f223d4b6cd343beab341748818692a2de  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    74dcc392725837896532ec7d65506cbeaecee237871b36ae813521bc3e2c40ed  numpy-2.0.0rc2-cp311-cp311-win32.whl\r\n    225c2b3303eb2ebf745ab954ef8723cd60f64d926edd73dc963141538ddc48ed  numpy-2.0.0rc2-cp311-cp311-win_amd64.whl\r\n    32207294f21331ae0d7fd33dc9324447a8117d5af15a0895f39af3441d4af70e  numpy-2.0.0rc2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    a666cc3d55f301b86edc7f1eaef10ffa1f79206c4b196a1f2649f91c8a1b49b6  numpy-2.0.0rc2-cp312-cp312-macosx_11_0_arm64.whl\r\n    fa5485c565ca222ba69c5fe04ebd8a89f884615466d74e0856e03fff873bcc43  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_arm64.whl\r\n    2202abe3e8afb2b88102a75f1beb888f380c09d40898db0f1df5d847623701d5  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_x86_64.whl\r\n    6b93d6b401db67948a4997e2c45e958df65b98b1a9183e96e96e491f9fb3c2fe  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1691e64c838d33fdba59ac7043144194f8f847b5fec6f47ecd9e117418cc9bdc  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7288d8ac70be23ff29df8da51840aad8f7acd9120d27cd7a61488b96bc5ad68b  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    9dd61b79856aed44f818fffe1555fa7ef8f6ffa5b5211cde473e2e33f7a5bd92  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    83c76a11c5e5a343fb1cb87afec147d6bebac91758c9c9f01d2c692ae4750e27  numpy-2.0.0rc2-cp312-cp312-win32.whl\r\n    24bcf0cdd31debdcb80e1f3bb7dba224c9a93a66f48ff1b1df2cb9a53eede944  numpy-2.0.0rc2-cp312-cp312-win_amd64.whl\r\n    87172a69d7eafb00ea1b734dba9ffebb474505082078ec2d95b99918f14a0a0e  numpy-2.0.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    e13a1fa60a471b79a53de8abb87e1e0ad53e6899edee8a29b4db3edccee53d65  numpy-2.0.0rc2-cp39-cp39-macosx_11_0_arm64.whl\r\n    32725b717f902e7243d270e50ff9487a499820233b57c3e71b33f65a84707e38  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_arm64.whl\r\n    f8c7012dd6779f078e3f42e19a2204275abe4d68a80dc807a97caf42e825d9c3  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_x86_64.whl\r\n    a0202e282ec9d45fc6ddb85777fddeea1107fe4555be50dd22d044e7fe01860c  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5262d69981502ded9b397c3fd5a20a1f2c91a66b21325ddff5e6d88486eee6fa  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6fe254c271f8ce4c2e60250f8ee80684abd2be748af84312a05b7614c3ae3b8d  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    0a2cf839a7d6cc0b854ba81cdfee96aad2c7e4d558c7e23ca82d08e4f7d7daa7  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    9ea90fb601d5ac32ff7f9f0a3bf7ccab5971a0196364b9429734bd270cd2fa67  numpy-2.0.0rc2-cp39-cp39-win32.whl\r\n    9e00367261ee0347208a8bcc355b6470b084cb777c45141e098328b67b02c98b  numpy-2.0.0rc2-cp39-cp39-win_amd64.whl\r\n    da6ab9dab471668155e0b208ab710417a7407397794a88b3ccbece5bcf10091d  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    b3ba5f436c6de9b8829f231e9eb9e394aa819efce9eab697cd4e558b0b8c6cc8  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    d5211fd4e126699b16b8573eef007f25afb9459d966b35430908798b24298e3b  numpy-2.0.0rc2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0d5cfbf693408cf1ee72d79d36d51f7b63f5e46a5e9cf12f63d4ed07c0f876e0  numpy-2.0.0rc2-pp39-pypy39_pp73-win_amd64.whl\r\n    868e9edbee689d6fdb7957c0b790de2b2123e6feff5d66045d10760c521f2c00  numpy-2.0.0rc2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/155399074/reactions",
      "total_count": 84,
      "+1": 34,
      "-1": 0,
      "laugh": 0,
      "hooray": 17,
      "confused": 0,
      "heart": 13,
      "rocket": 15,
      "eyes": 5
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/149104130",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/149104130/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/149104130/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.0rc1",
    "id": 149104130,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84I4yYC",
    "tag_name": "v2.0.0rc1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-03-30T14:27:08Z",
    "published_at": "2024-03-30T16:54:21Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/159439430",
        "id": 159439430,
        "node_id": "RA_kwDOAA3dP84JgNpG",
        "name": "2.0.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 113407,
        "download_count": 24,
        "created_at": "2024-03-30T16:49:49Z",
        "updated_at": "2024-03-30T16:49:50Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc1/2.0.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/159439449",
        "id": 159439449,
        "node_id": "RA_kwDOAA3dP84JgNpZ",
        "name": "numpy-2.0.0rc1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18314779,
        "download_count": 461,
        "created_at": "2024-03-30T16:50:14Z",
        "updated_at": "2024-03-30T16:52:58Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc1/numpy-2.0.0rc1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/159439682",
        "id": 159439682,
        "node_id": "RA_kwDOAA3dP84JgNtC",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 74037,
        "download_count": 29,
        "created_at": "2024-03-30T16:53:59Z",
        "updated_at": "2024-03-30T16:54:00Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0rc1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.0rc1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.0rc1",
    "body": "# NumPy 2.0.0 Release Notes\r\n\r\n>**Note**\r\n>\r\n>The release of 2.0 is in progress and the current release overview and\r\n>highlights are still in a draft state. However, the highlights should\r\n>already list the most significant changes detailed in the full notes\r\n>below, and those full notes should be complete (if not copy-edited well\r\n>enough yet).\r\n\r\nNumPy 2.0.0 is the first major release since 2006. It is the result of\r\n10 months of development since the last feature release and is the work\r\nof 193 contributors spread over 1006 pull requests. It contains a large\r\nnumber of exciting new features as well as changes to both the Python\r\nand C APIs.\r\n\r\nThis major release includes breaking changes that could not happen in a\r\nregular minor (feature) release - including an ABI break, changes to\r\ntype promotion rules, and API changes which may not have been emitting\r\ndeprecation warnings in 1.26.x. Key documents related to how to adapt to\r\nchanges in NumPy 2.0, in addition to these release notes, include:\r\n\r\n- The [numpy-2-migration-guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html)\r\n- The Numpy 2.0-specific advice in [for dpwmstream package authors](https://numpy.org/devdocs/dev/depending_on_numpy.html)\r\n\r\n## Highlights\r\n\r\nHighlights of this release include:\r\n\r\n- New features:\r\n    - A new variable-length string dtype, `numpy.dtypes.StringDType` and a new\r\n      `numpy.strings` namespace with performant ufuncs for string operations,\r\n    - Support for `float32` and `longdouble` in all\r\n      `numpy.fft` functions,\r\n    - Support for the array API standard in the main `numpy`\r\n      namespace.\r\n- Performance improvements:\r\n    - Sorting functions `sort`, `argsort`,\r\n      `partition`, `argpartition` have been\r\n      accelerated through the use of the Intel x86-simd-sort and\r\n      Google Highway libraries, and may see large (hardware-specific)\r\n      speedups,\r\n    - macOS Accelerate support and binary wheels for macOS \\>=14, with\r\n      significant performance improvements for linear algebra\r\n      operations on macOS, and wheels that are about 3 times smaller,\r\n    - `numpy.char` fixed-length string operations have\r\n      been accelerated by implementing ufuncs that also support\r\n      `numpy.dtypes.StringDType` in addition to the\r\n      fixed-length string dtypes,\r\n    - A new tracing and introspection API,\r\n      `numpy.lib.introspect.opt_func_info`, to determine\r\n      which hardware-specific kernels are available and will be\r\n      dispatched to.\r\n- Python API improvements:\r\n    - A clear split between public and private API, with a new module\r\n      structure and each public function now available in a single place.\r\n    - Many removals of non-recommended functions and aliases. This\r\n      should make it easier to learn and use NumPy. The number of\r\n      objects in the main namespace decreased by \\~10% and in\r\n      `numpy.lib` by \\~80%.\r\n    - `Canonical dtype names and a new `numpy.isdtype` introspection\r\n      function,\r\n- C API improvements:\r\n    - A new public C API for creating custom dtypes,\r\n    - Many outdated functions and macros removed, and private\r\n      internals hidden to ease future extensibility,\r\n    - New, easier to use, initialization functions: `PyArray_ImportNumPyAPI`\r\n      and `PyUFunc_ImportUFuncAPI`.\r\n- Improved behavior:\r\n    - Improvements to type promotion behavior was changed by adopting NEP 50.\r\n      This fixes many user surprises about promotions which previously often\r\n      depended on data values of input arrays rather than only their dtypes.\r\n      Please see the NEP and the numpy-2-migration-guide for details as this\r\n      change can lead to changes in output dtypes and lower precision results\r\n      for mixed-dtype operations.\r\n    - The default integer type on Windows is now `int64` rather than\r\n      `int32`, matching the behavior on other platforms,\r\n    - The maximum number of array dimensions is changed from 32 to 64\r\n- Documentation:\r\n    - The reference guide navigation was significantly improved, and\r\n      there is now documentation on NumPy\\'s\r\n      module structure,\r\n    - The building from source documentation was completely rewritten,\r\n\r\nFurthermore there are many changes to NumPy internals, including\r\ncontinuing to migrate code from C to C++, that will make it easier to\r\nimprove and maintain NumPy in the future.\r\n\r\nThe \\\"no free lunch\\\" theorem dictates that there is a price to pay for\r\nall these API and behavior improvements and better future extensibility.\r\nThis price is:\r\n\r\n1.  Backwards compatibility. There are a significant number of breaking\r\n    changes to both the Python and C APIs. In the majority of cases,\r\n    there are clear error messages that will inform the user how to\r\n    adapt their code. However, there are also changes in behavior for\r\n    which it was not possible to give such an error message - these\r\n    cases are all covered in the Deprecation and Compatibility sections\r\n    below, and in the numpy-2-migration-guide.\r\n\r\n    Note that there is a `ruff` mode to auto-fix many things in Python\r\n    code.\r\n\r\n2.  Breaking changes to the NumPy ABI. As a result, binaries of packages\r\n    that use the NumPy C API and were built against a NumPy 1.xx release\r\n    will not work with NumPy 2.0. On import, such packages will see an\r\n    `ImportError` with a message about binary incompatibility.\r\n\r\n    It is possible to build binaries against NumPy 2.0 that will work at\r\n    runtime with both NumPy 2.0 and 1.x. See numpy-2-abi-handling for more\r\n    details.\r\n\r\n    **All downstream packages that depend on the NumPy ABI are advised\r\n    to do a new release built against NumPy 2.0 and verify that that\r\n    release works with both 2.0 and 1.26 - ideally in the period between\r\n    2.0.0rc1 (which will be ABI-stable) and the final 2.0.0 release to\r\n    avoid problems for their users.**\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n## NumPy 2.0 Python API removals\r\n\r\n-   `np.geterrobj`, `np.seterrobj` and the related ufunc keyword\r\n    argument `extobj=` have been removed. The preferred replacement for\r\n    all of these is using the context manager `with np.errstate():`.\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   `np.cast` has been removed. The literal replacement for\r\n    `np.cast[dtype](arg)` is `np.asarray(arg, dtype=dtype)`.\r\n\r\n-   `np.source` has been removed. The preferred replacement is\r\n    `inspect.getsource`.\r\n\r\n-   `np.lookfor` has been removed.\r\n\r\n    ([gh-24144](https://github.com/numpy/numpy/pull/24144))\r\n\r\n-   `numpy.who` has been removed. As an alternative for the removed\r\n    functionality, one can use a variable explorer that is available in\r\n    IDEs such as Spyder or Jupyter Notebook.\r\n\r\n    ([gh-24321](https://github.com/numpy/numpy/pull/24321))\r\n\r\n-   Multiple niche enums, expired members and functions have been\r\n    removed from the main namespace, such as: `ERR_*`, `SHIFT_*`,\r\n    `np.fastCopyAndTranspose`, `np.kernel_version`, `np.numarray`,\r\n    `np.oldnumeric` and `np.set_numeric_ops`.\r\n\r\n    ([gh-24316](https://github.com/numpy/numpy/pull/24316))\r\n\r\n-   Replaced `from ... import *` in the `numpy/__init__.py` with\r\n    explicit imports. As a result, these main namespace members got\r\n    removed: `np.FLOATING_POINT_SUPPORT`, `np.FPE_*`, `np.NINF`,\r\n    `np.PINF`, `np.NZERO`, `np.PZERO`, `np.CLIP`, `np.WRAP`, `np.WRAP`,\r\n    `np.RAISE`, `np.BUFSIZE`, `np.UFUNC_BUFSIZE_DEFAULT`,\r\n    `np.UFUNC_PYVALS_NAME`, `np.ALLOW_THREADS`, `np.MAXDIMS`,\r\n    `np.MAY_SHARE_EXACT`, `np.MAY_SHARE_BOUNDS`, `add_newdoc`,\r\n    `np.add_docstring` and `np.add_newdoc_ufunc`.\r\n\r\n    ([gh-24357](https://github.com/numpy/numpy/pull/24357))\r\n\r\n-   Alias `np.float_` has been removed. Use `np.float64` instead.\r\n\r\n-   Alias `np.complex_` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longfloat` has been removed. Use `np.longdouble` instead.\r\n\r\n-   Alias `np.singlecomplex` has been removed. Use `np.complex64`\r\n    instead.\r\n\r\n-   Alias `np.cfloat` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longcomplex` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.clongfloat` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.string_` has been removed. Use `np.bytes_` instead.\r\n\r\n-   Alias `np.unicode_` has been removed. Use `np.str_` instead.\r\n\r\n-   Alias `np.Inf` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.Infinity` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.NaN` has been removed. Use `np.nan` instead.\r\n\r\n-   Alias `np.infty` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.mat` has been removed. Use `np.asmatrix` instead.\r\n\r\n-   `np.issubclass_` has been removed. Use the `issubclass` builtin\r\n    instead.\r\n\r\n-   `np.asfarray` has been removed. Use `np.asarray` with a proper dtype\r\n    instead.\r\n\r\n-   `np.set_string_function` has been removed. Use `np.set_printoptions`\r\n    instead with a formatter for custom printing of NumPy objects.\r\n\r\n-   `np.tracemalloc_domain` is now only available from `np.lib`.\r\n\r\n-   `np.recfromcsv` and `recfromtxt` are now only available from\r\n    `np.lib.npyio`.\r\n\r\n-   `np.issctype`, `np.maximum_sctype`, `np.obj2sctype`,\r\n    `np.sctype2char`, `np.sctypes`, `np.issubsctype` were all removed\r\n    from the main namespace without replacement, as they where niche\r\n    members.\r\n\r\n-   Deprecated `np.deprecate` and `np.deprecate_with_doc` has been\r\n    removed from the main namespace. Use `DeprecationWarning` instead.\r\n\r\n-   Deprecated `np.safe_eval` has been removed from the main namespace.\r\n    Use `ast.literal_eval` instead.\r\n\r\n    ([gh-24376](https://github.com/numpy/numpy/pull/24376))\r\n\r\n-   `np.find_common_type` has been removed. Use `numpy.promote_types` or\r\n    `numpy.result_type` instead. To achieve semantics for the\r\n    `scalar_types` argument, use `numpy.result_type` and pass `0`,\r\n    `0.0`, or `0j` as a Python scalar instead.\r\n\r\n-   `np.round_` has been removed. Use `np.round` instead.\r\n\r\n-   `np.nbytes` has been removed. Use `np.dtype(<dtype>).itemsize`\r\n    instead.\r\n\r\n    ([gh-24477](https://github.com/numpy/numpy/pull/24477))\r\n\r\n-   `np.compare_chararrays` has been removed from the main namespace.\r\n    Use `np.char.compare_chararrays` instead.\r\n\r\n-   The `charrarray` in the main namespace has been deprecated. It can\r\n    be imported without a deprecation warning from `np.char.chararray`\r\n    for now, but we are planning to fully deprecate and remove\r\n    `chararray` in the future.\r\n\r\n-   `np.format_parser` has been removed from the main namespace. Use\r\n    `np.rec.format_parser` instead.\r\n\r\n    ([gh-24587](https://github.com/numpy/numpy/pull/24587))\r\n\r\n-   Support for seven data type string aliases has been removed from\r\n    `np.dtype`: `int0`, `uint0`, `void0`, `object0`, `str0`, `bytes0`\r\n    and `bool8`.\r\n\r\n    ([gh-24807](https://github.com/numpy/numpy/pull/24807))\r\n\r\n-   The experimental `numpy.array_api` submodule has been removed. Use\r\n    the main `numpy` namespace for regular usage instead, or the\r\n    separate `array-api-strict` package for the compliance testing use\r\n    case for which `numpy.array_api` was mostly used.\r\n\r\n    ([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n### `__array_prepare__` is removed\r\n\r\nUFuncs called `__array_prepare__` before running computations for normal\r\nufunc calls (not generalized ufuncs, reductions, etc.). The function was\r\nalso called instead of `__array_wrap__` on the results of some linear\r\nalgebra functions.\r\n\r\nIt is now removed. If you use it, migrate to `__array_ufunc__` or rely\r\non `__array_wrap__` which is called with a context in all cases,\r\nalthough only after the result array is filled. In those code paths,\r\n`__array_wrap__` will now be passed a base class, rather than a subclass\r\narray.\r\n\r\n([gh-25105](https://github.com/numpy/numpy/pull/25105))\r\n\r\n## Deprecations\r\n\r\n-   `np.compat` has been deprecated, as Python 2 is no longer supported.\r\n\r\n-   `np.safe_eval` has been deprecated. `ast.literal_eval` should be\r\n    used instead.\r\n\r\n    ([gh-23830](https://github.com/numpy/numpy/pull/23830))\r\n\r\n-   `np.recfromcsv`, `np.recfromtxt`, `np.disp`, `np.get_array_wrap`,\r\n    `np.maximum_sctype`, `np.deprecate` and `np.deprecate_with_doc` have\r\n    been deprecated.\r\n\r\n    ([gh-24154](https://github.com/numpy/numpy/pull/24154))\r\n\r\n-   `np.trapz` has been deprecated. Use `np.trapezoid` or a\r\n    `scipy.integrate` function instead.\r\n\r\n-   `np.in1d` has been deprecated. Use `np.isin` instead.\r\n\r\n-   Alias `np.row_stack` has been deprecated. Use `np.vstack` directly.\r\n\r\n    ([gh-24445](https://github.com/numpy/numpy/pull/24445))\r\n\r\n-   `__array_wrap__` is now passed `arr, context, return_scalar` and\r\n    support for implementations not accepting all three are deprecated.\r\n    Its signature should be\r\n    `__array_wrap__(self, arr, context=None, return_scalar=False)`\r\n\r\n    ([gh-25408](https://github.com/numpy/numpy/pull/25408))\r\n\r\n-   Arrays of 2-dimensional vectors for `np.cross` have been deprecated.\r\n    Use arrays of 3-dimensional vectors instead.\r\n\r\n    ([gh-24818](https://github.com/numpy/numpy/pull/24818))\r\n\r\n-   `np.dtype(\"a\")` alias for `np.dtype(np.bytes_)` was deprecated. Use\r\n    `np.dtype(\"S\")` alias instead.\r\n\r\n    ([gh-24854](https://github.com/numpy/numpy/pull/24854))\r\n\r\n-   Use of keyword arguments `x` and `y` with functions\r\n    `assert_array_equal` and `assert_array_almost_equal` has been\r\n    deprecated. Pass the first two arguments as positional arguments\r\n    instead.\r\n\r\n    ([gh-24978](https://github.com/numpy/numpy/pull/24978))\r\n\r\n### `numpy.fft` deprecations for n-D transforms with None values in arguments\r\n\r\nUsing `fftn`, `ifftn`, `rfftn`, `irfftn`, `fft2`, `ifft2`, `rfft2` or\r\n`irfft2` with the `s` parameter set to a value that is not `None` and\r\nthe `axes` parameter set to `None` has been deprecated, in line with the\r\narray API standard. To retain current behaviour, pass a sequence \\[0,\r\n\\..., k-1\\] to `axes` for an array of dimension k.\r\n\r\nFurthermore, passing an array to `s` which contains `None` values is\r\ndeprecated as the parameter is documented to accept a sequence of\r\nintegers in both the NumPy docs and the array API specification. To use\r\nthe default behaviour of the corresponding 1-D transform, pass the value\r\nmatching the default for its `n` parameter. To use the default behaviour\r\nfor every axis, the `s` argument can be omitted.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### `np.linalg.lstsq` now defaults to a new `rcond` value\r\n\r\n`numpy.linalg.lstsq` now uses the new rcond value of the\r\nmachine precision times `max(M, N)`. Previously, the machine precision\r\nwas used but a FutureWarning was given to notify that this change will\r\nhappen eventually. That old behavior can still be achieved by passing\r\n`rcond=-1`.\r\n\r\n([gh-25721](https://github.com/numpy/numpy/pull/25721))\r\n\r\n## Expired deprecations\r\n\r\n-   The `np.core.umath_tests` submodule has been removed from the public\r\n    API. (Deprecated in NumPy 1.15)\r\n\r\n    ([gh-23809](https://github.com/numpy/numpy/pull/23809))\r\n\r\n-   The `PyDataMem_SetEventHook` deprecation has expired and it is\r\n    removed. Use `tracemalloc` and the `np.lib.tracemalloc_domain`\r\n    domain. (Deprecated in NumPy 1.23)\r\n\r\n    ([gh-23921](https://github.com/numpy/numpy/pull/23921))\r\n\r\n-   The deprecation of `set_numeric_ops` and the C functions\r\n    `PyArray_SetNumericOps` and `PyArray_GetNumericOps` has been expired\r\n    and the functions removed. (Deprecated in NumPy 1.16)\r\n\r\n    ([gh-23998](https://github.com/numpy/numpy/pull/23998))\r\n\r\n-   The `fasttake`, `fastclip`, and `fastputmask` `ArrFuncs` deprecation\r\n    is now finalized.\r\n\r\n-   The deprecated function `fastCopyAndTranspose` and its C counterpart\r\n    are now removed.\r\n\r\n-   The deprecation of `PyArray_ScalarFromObject` is now finalized.\r\n\r\n    ([gh-24312](https://github.com/numpy/numpy/pull/24312))\r\n\r\n-   `np.msort` has been removed. For a replacement, `np.sort(a, axis=0)`\r\n    should be used instead.\r\n\r\n    ([gh-24494](https://github.com/numpy/numpy/pull/24494))\r\n\r\n-   `np.dtype((\"f8\", 1)` will now return a shape 1 subarray dtype rather\r\n    than a non-subarray one.\r\n\r\n    ([gh-25761](https://github.com/numpy/numpy/pull/25761))\r\n\r\n-   Assigning to the `.data` attribute of an ndarray is disallowed and\r\n    will raise.\r\n\r\n-   `np.binary_repr(a, width)` will raise if width is too small.\r\n\r\n-   Using `NPY_CHAR` in `PyArray_DescrFromType()` will raise, use\r\n    `NPY_STRING` `NPY_UNICODE`, or `NPY_VSTRING` instead.\r\n\r\n    ([gh-25794](https://github.com/numpy/numpy/pull/25794))\r\n\r\n## Compatibility notes\r\n\r\n### `loadtxt` and `genfromtxt` default encoding changed\r\n\r\n`loadtxt` and `genfromtxt` now both default to `encoding=None` which may\r\nmainly modify how `converters` work. These will now be passed `str`\r\nrather than `bytes`. Pass the encoding explicitly to always get the new\r\nor old behavior. For `genfromtxt` the change also means that returned\r\nvalues will now be unicode strings rather than bytes.\r\n\r\n([gh-25158](https://github.com/numpy/numpy/pull/25158))\r\n\r\n### `f2py` compatibility notes\r\n\r\n-   `f2py` will no longer accept ambiguous `-m` and `.pyf` CLI\r\n    combinations. When more than one `.pyf` file is passed, an error is\r\n    raised. When both `-m` and a `.pyf` is passed, a warning is emitted\r\n    and the `-m` provided name is ignored.\r\n\r\n    ([gh-25181](https://github.com/numpy/numpy/pull/25181))\r\n\r\n-   The `f2py.compile()` helper has been removed because it leaked\r\n    memory, has been marked as experimental for several years now, and\r\n    was implemented as a thin `subprocess.run` wrapper. It was also one\r\n    of the test bottlenecks. See\r\n    [gh-25122](https://github.com/numpy/numpy/issues/25122) for the full\r\n    rationale. It also used several `np.distutils` features which are\r\n    too fragile to be ported to work with `meson`.\r\n\r\n-   Users are urged to replace calls to `f2py.compile` with calls to\r\n    `subprocess.run(\"python\", \"-m\", \"numpy.f2py\",...` instead, and to\r\n    use environment variables to interact with `meson`. [Native\r\n    files](https://mesonbuild.com/Machine-files.html) are also an\r\n    option.\r\n\r\n    ([gh-25193](https://github.com/numpy/numpy/pull/25193))\r\n\r\n### Minor changes in behavior of sorting functions\r\n\r\nDue to algorithmic changes and use of SIMD code, sorting functions with\r\nmethods that aren\\'t stable may return slightly different results in\r\n2.0.0 compared to 1.26.x. This includes the default method of\r\n`numpy.argsort` and `numpy.argpartition`.\r\n\r\n### Removed ambiguity when broadcasting in `np.solve`\r\n\r\nThe broadcasting rules for `np.solve(a, b)` were ambiguous when `b` had\r\n1 fewer dimensions than `a`. This has been resolved in a\r\nbackward-incompatible way and is now compliant with the Array API. The\r\nold behaviour can be reconstructed by using\r\n`np.solve(a, b[..., None])[..., 0]`.\r\n\r\n([gh-25914](https://github.com/numpy/numpy/pull/25914))\r\n\r\n### Modified representation for `Polynomial`\r\n\r\nThe representation method for\r\n`numpy.polynomial.polynomial.Polynomial` was updated to\r\ninclude the domain in the representation. The plain text and latex\r\nrepresentations are now consistent. For example the output of\r\n`str(np.polynomial.Polynomial([1, 1], domain=[.1, .2]))` used to be\r\n`1.0 + 1.0 x`, but now is `1.0 + 1.0 (-3.0000000000000004 + 20.0 x)`.\r\n\r\n([gh-21760](https://github.com/numpy/numpy/pull/21760))\r\n\r\n## C API changes\r\n\r\n-   The `PyArray_CGT`, `PyArray_CLT`, `PyArray_CGE`, `PyArray_CLE`,\r\n    `PyArray_CEQ`, `PyArray_CNE` macros have been removed.\r\n\r\n-   `PyArray_MIN` and `PyArray_MAX` have been moved from\r\n    `ndarraytypes.h` to `npy_math.h`.\r\n\r\n    ([gh-24258](https://github.com/numpy/numpy/pull/24258))\r\n\r\n-   A C API for working with `numpy.dtypes.StringDType`\r\n    arrays has been exposed. This includes functions for acquiring and\r\n    releasing mutexes which lock access to the string data, as well as\r\n    packing and unpacking UTF-8 bytestreams from array entries.\r\n\r\n-   `NPY_NTYPES` has been renamed to `NPY_NTYPES_LEGACY` as it does not\r\n    include new NumPy built-in DTypes. In particular the new string\r\n    DType will likely not work correctly with code that handles legacy\r\n    DTypes.\r\n\r\n    ([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n-   The C-API now only exports the static inline function versions of\r\n    the array accessors (previously this depended on using \\\"deprecated\r\n    API\\\"). While we discourage it, the struct fields can still be used\r\n    directly.\r\n\r\n    ([gh-25789](https://github.com/numpy/numpy/pull/25789))\r\n\r\n-   NumPy now defines `PyArray_Pack` to set an individual memory address.\r\n    Unlike `PyArray_SETITEM` this function is equivalent to setting an\r\n    individual array item and does not require a NumPy array input.\r\n\r\n    ([gh-25954](https://github.com/numpy/numpy/pull/25954))\r\n\r\n-   The `->f` slot has been removed from `PyArray_Descr`. If you use this slot,\r\n    replace accessing it with `PyDataType_GetArrFuncs` (see its documentation\r\n    and the `numpy-2-migration-guide`). In some cases using other functions\r\n    like `PyArray_GETITEM` may be an alternatives.\r\n\r\n-   `PyArray_GETITEM` and `PyArray_SETITEM` now require the import of\r\n    the NumPy API table to be used and are no longer defined in\r\n    `ndarraytypes.h`.\r\n\r\n    ([gh-25812](https://github.com/numpy/numpy/pull/25812))\r\n\r\n-   Due to runtime dependencies, the definition for functionality\r\n    accessing the dtype flags was moved from `numpy/ndarraytypes.h` and\r\n    is only available after including `numpy/ndarrayobject.h` as it\r\n    requires `import_array()`. This includes `PyDataType_FLAGCHK`,\r\n    `PyDataType_REFCHK` and `NPY_BEGIN_THREADS_DESCR`.\r\n\r\n-   The dtype flags on `PyArray_Descr` must now be accessed through the\r\n    `PyDataType_FLAGS` inline function to be compatible with both 1.x\r\n    and 2.x. This function is defined in `npy_2_compat.h` to allow\r\n    backporting. Most or all users should use `PyDataType_FLAGCHK` which\r\n    is available on 1.x and does not require backporting. Cython users\r\n    should use Cython 3. Otherwise access will go through Python unless\r\n    they use `PyDataType_FLAGCHK` instead.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Datetime functionality exposed in the C API and Cython bindings\r\n\r\nThe functions `NpyDatetime_ConvertDatetime64ToDatetimeStruct`,\r\n`NpyDatetime_ConvertDatetimeStructToDatetime64`,\r\n`NpyDatetime_ConvertPyDateTimeToDatetimeStruct`,\r\n`NpyDatetime_GetDatetimeISO8601StrLen`,\r\n`NpyDatetime_MakeISO8601Datetime`, and\r\n`NpyDatetime_ParseISO8601Datetime` have been added to the C API to\r\nfacilitate converting between strings, Python datetimes, and NumPy\r\ndatetimes in external libraries.\r\n\r\n([gh-21199](https://github.com/numpy/numpy/pull/21199))\r\n\r\n### Const correctness for the generalized ufunc C API\r\n\r\nThe NumPy C API\\'s functions for constructing generalized ufuncs\r\n(`PyUFunc_FromFuncAndData`, `PyUFunc_FromFuncAndDataAndSignature`,\r\n`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`) take `types` and\r\n`data` arguments that are not modified by NumPy\\'s internals. Like the\r\n`name` and `doc` arguments, third-party Python extension modules are\r\nlikely to supply these arguments from static constants. The `types` and\r\n`data` arguments are now const-correct: they are declared as\r\n`const char *types` and `void *const *data`, respectively. C code should\r\nnot be affected, but C++ code may be.\r\n\r\n([gh-23847](https://github.com/numpy/numpy/pull/23847))\r\n\r\n### Larger `NPY_MAXDIMS` and `NPY_MAXARGS`, `NPY_RAVEL_AXIS` introduced\r\n\r\n`NPY_MAXDIMS` is now 64, you may want to review its use. This is usually\r\nused in a stack allocation, where the increase should be safe. However,\r\nwe do encourage generally to remove any use of `NPY_MAXDIMS` and\r\n`NPY_MAXARGS` to eventually allow removing the constraint completely.\r\nFor the conversion helper and C-API functions mirroring Python ones such as\r\n`take`, `NPY_MAXDIMS` was used to mean `axis=None`. Such usage must be replaced\r\nwith `NPY_RAVEL_AXIS`. See also `migration_maxdims`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### `NPY_MAXARGS` not constant and `PyArrayMultiIterObject` size change\r\n\r\nSince `NPY_MAXARGS` was increased, it is now a runtime constant and not\r\ncompile-time constant anymore. We expect almost no users to notice this.\r\nBut if used for stack allocations it now must be replaced with a custom\r\nconstant using `NPY_MAXARGS` as an additional runtime check.\r\n\r\nThe `sizeof(PyArrayMultiIterObject)` no longer includes the full size of\r\nthe object. We expect nobody to notice this change. It was necessary to\r\navoid issues with Cython.\r\n\r\n([gh-25271](https://github.com/numpy/numpy/pull/25271))\r\n\r\n### Required changes for custom legacy user dtypes\r\n\r\nIn order to improve our DTypes it is unfortunately necessary to break\r\nthe ABI, which requires some changes for dtypes registered with\r\n`PyArray_RegisterDataType`. Please see the documentation of\r\n`PyArray_RegisterDataType` for how to adapt your code and achieve\r\ncompatibility with both 1.x and 2.x.\r\n\r\n([gh-25792](https://github.com/numpy/numpy/pull/25792))\r\n\r\n### New Public DType API\r\n\r\nThe C implementation of the NEP 42 DType API is now public. While the\r\nDType API has shipped in NumPy for a few versions, it was only usable in\r\nsessions with a special environment variable set. It is now possible to\r\nwrite custom DTypes outside of NumPy using the new DType API and the\r\nnormal `import_array()` mechanism for importing the numpy C API.\r\n\r\nSee `dtype-api` for more details about the API. As always with a new feature,\r\nplease report any bugs you run into implementing or using a new DType. It is\r\nlikely that downstream C code that works with dtypes will need to be updated to\r\nwork correctly with new DTypes.\r\n\r\n([gh-25754](https://github.com/numpy/numpy/pull/25754))\r\n\r\n### New C-API import functions\r\n\r\nWe have now added `PyArray_ImportNumPyAPI` and `PyUFunc_ImportUFuncAPI`\r\nas static inline functions to import the NumPy C-API tables. The new\r\nfunctions have two advantages over `import_array` and `import_ufunc`:\r\n\r\n-   They check whether the import was already performed and are\r\n    light-weight if not, allowing to add them judiciously (although this\r\n    is not preferable in most cases).\r\n-   The old mechanisms were macros rather than functions which included\r\n    a `return` statement.\r\n\r\nThe `PyArray_ImportNumPyAPI()` function is included in `npy_2_compat.h`\r\nfor simpler backporting.\r\n\r\n([gh-25866](https://github.com/numpy/numpy/pull/25866))\r\n\r\n### Structured dtype information access through functions\r\n\r\nThe dtype structures fields `c_metadata`, `names`, `fields`, and\r\n`subarray` must now be accessed through new functions following the same\r\nnames, such as `PyDataType_NAMES`. Direct access of the fields is not\r\nvalid as they do not exist for all `PyArray_Descr` instances. The\r\n`metadata` field is kept, but the macro version should also be\r\npreferred.\r\n\r\n([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n### Descriptor `elsize` and `alignment` access\r\n\r\nUnless compiling only with NumPy 2 support, the `elsize` and `aligment`\r\nfields must now be accessed via `PyDataType_ELSIZE`,\r\n`PyDataType_SET_ELSIZE`, and `PyDataType_ALIGNMENT`. In cases where the\r\ndescriptor is attached to an array, we advise using `PyArray_ITEMSIZE`\r\nas it exists on all NumPy versions. Please see\r\n`migration_c_descr` for more information.\r\n\r\n([gh-25943](https://github.com/numpy/numpy/pull/25943))\r\n\r\n## NumPy 2.0 C API removals\r\n\r\n-   `npy_interrupt.h` and the corresponding macros like `NPY_SIGINT_ON`\r\n    have been removed. We recommend querying `PyErr_CheckSignals()` or\r\n    `PyOS_InterruptOccurred()` periodically (these do currently require\r\n    holding the GIL though).\r\n\r\n-   The `noprefix.h` header has been removed. Replace missing symbols\r\n    with their prefixed counterparts (usually an added `NPY_` or\r\n    `npy_`).\r\n\r\n    ([gh-23919](https://github.com/numpy/numpy/pull/23919))\r\n\r\n-   `PyUFunc_GetPyVals`, `PyUFunc_handlefperr`, and `PyUFunc_checkfperr`\r\n    have been removed. If needed, a new backwards compatible function to\r\n    raise floating point errors could be restored. Reason for removal:\r\n    there are no known users and the functions would have made\r\n    `with np.errstate()` fixes much more difficult).\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   The `numpy/old_defines.h` which was part of the API deprecated since\r\n    NumPy 1.7 has been removed. This removes macros of the form\r\n    `PyArray_CONSTANT`. The\r\n    [replace_old_macros.sed](https://github.com/numpy/numpy/blob/main/tools/replace_old_macros.sed)\r\n    script may be useful to convert them to the `NPY_CONSTANT` version.\r\n\r\n    ([gh-24011](https://github.com/numpy/numpy/pull/24011))\r\n\r\n-   The `legacy_inner_loop_selector` member of the ufunc struct is\r\n    removed to simplify improvements to the dispatching system. There\r\n    are no known users overriding or directly accessing this member.\r\n\r\n    ([gh-24271](https://github.com/numpy/numpy/pull/24271))\r\n\r\n-   `NPY_INTPLTR` has been removed to avoid confusion (see `intp`\r\n    redefinition).\r\n\r\n    ([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n-   The advanced indexing `MapIter` and related API has been removed.\r\n    The (truly) public part of it was not well tested and had only one\r\n    known user (Theano). Making it private will simplify improvements to\r\n    speed up `ufunc.at`, make advanced indexing more maintainable, and\r\n    was important for increasing the maximum number of dimensions of\r\n    arrays to 64. Please let us know if this API is important to you so\r\n    we can find a solution together.\r\n\r\n    ([gh-25138](https://github.com/numpy/numpy/pull/25138))\r\n\r\n-   The `NPY_MAX_ELSIZE` macro has been removed, as it only ever\r\n    reflected builtin numeric types and served no internal purpose.\r\n\r\n    ([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n-   `PyArray_REFCNT` and `NPY_REFCOUNT` are removed. Use `Py_REFCNT`\r\n    instead.\r\n\r\n    ([gh-25156](https://github.com/numpy/numpy/pull/25156))\r\n\r\n-   `PyArrayFlags_Type` and `PyArray_NewFlagsObject` as well as\r\n    `PyArrayFlagsObject` are private now. There is no known use-case;\r\n    use the Python API if needed.\r\n\r\n-   `PyArray_MoveInto`, `PyArray_CastTo`, `PyArray_CastAnyTo` are\r\n    removed use `PyArray_CopyInto` and if absolutely needed\r\n    `PyArray_CopyAnyInto` (the latter does a flat copy).\r\n\r\n-   `PyArray_FillObjectArray` is removed, its only true use was for\r\n    implementing `np.empty`. Create a new empty array or use\r\n    `PyArray_FillWithScalar()` (decrefs existing objects).\r\n\r\n-   `PyArray_CompareUCS4` and `PyArray_CompareString` are removed. Use\r\n    the standard C string comparison functions.\r\n\r\n-   `PyArray_ISPYTHON` is removed as it is misleading, has no known\r\n    use-cases, and is easy to replace.\r\n\r\n-   `PyArray_FieldNames` is removed, as it is unclear what it would be\r\n    useful for. It also has incorrect semantics in some possible\r\n    use-cases.\r\n\r\n-   `PyArray_TypestrConvert` is removed, since it seems a misnomer and\r\n    unlikely to be used by anyone. If you know the size or are limited\r\n    to few types, just use it explicitly, otherwise go via Python\r\n    strings.\r\n\r\n    ([gh-25292](https://github.com/numpy/numpy/pull/25292))\r\n\r\n-   `PyDataType_GetDatetimeMetaData` is removed, it did not actually do\r\n    anything since at least NumPy 1.7.\r\n\r\n    ([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n-   `PyArray_GetCastFunc` is removed. Note that custom legacy user\r\n    dtypes can still provide a castfunc as their implementation, but any\r\n    access to them is now removed. The reason for this is that NumPy\r\n    never used these internally for many years. If you use simple\r\n    numeric types, please just use C casts directly. In case you require\r\n    an alternative, please let us know so we can create new API such as\r\n    `PyArray_CastBuffer()` which could use old or new cast functions\r\n    depending on the NumPy version.\r\n\r\n    ([gh-25161](https://github.com/numpy/numpy/pull/25161))\r\n\r\n## New Features\r\n\r\n### `np.add` was extended to work with `unicode` and `bytes` dtypes.\r\n\r\n> ([gh-24858](https://github.com/numpy/numpy/pull/24858))\r\n\r\n### A new `bitwise_count` function\r\n\r\nThis new function counts the number of 1-bits in a number.\r\n`numpy.bitwise_count` works on all the numpy integer types\r\nand integer-like objects.\r\n\r\n``` python\r\n>>> a = np.array([2**i - 1 for i in range(16)])\r\n>>> np.bitwise_count(a)\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15],\r\n      dtype=uint8)\r\n```\r\n\r\n([gh-19355](https://github.com/numpy/numpy/pull/19355))\r\n\r\n### macOS Accelerate support, including the ILP64\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, or if no explicit BLAS library selection is done, the 13.3+\r\nversion will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\nBinary wheels are also available. On macOS \\>=14.0, users who install\r\nNumPy from PyPI will get wheels built against Accelerate rather than\r\nOpenBLAS.\r\n\r\n([gh-25255](https://github.com/numpy/numpy/pull/25255))\r\n\r\n### Option to use weights for quantile and percentile functions\r\n\r\nA `weights` keyword is now available for `numpy.quantile`, `numpy.percentile`,\r\n`numpy.nanquantile` and `numpy.nanpercentile`. Only `method=\"inverted_cdf\"`\r\nsupports weights.\r\n\r\n([gh-24254](https://github.com/numpy/numpy/pull/24254))\r\n\r\n### Improved CPU optimization tracking\r\n\r\nA new tracer mechanism is available which enables tracking of the\r\nenabled targets for each optimized function (i.e., that uses\r\nhardware-specific SIMD instructions) in the NumPy library. With this\r\nenhancement, it becomes possible to precisely monitor the enabled CPU\r\ndispatch targets for the dispatched functions.\r\n\r\nA new function named `opt_func_info` has been added to the new namespace\r\n`numpy.lib.introspect`, offering this tracing capability.  This function allows\r\nyou to retrieve information about the enabled targets based on function names\r\nand data type signatures.\r\n\r\n([gh-24420](https://github.com/numpy/numpy/pull/24420))\r\n\r\n### A new Meson backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python \\>=3.12.\r\nFor older Python versions, `f2py` will still default to\r\n`--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other C interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in C and Fortran, not in\r\nPython and Fortran.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n### A new `strict` option for several testing functions\r\n\r\nThe `strict` keyword is now available for `numpy.testing.assert_allclose`,\r\n`numpy.testing.assert_equal`, and `numpy.testing.assert_array_less`. Setting\r\n`strict=True` will disable the broadcasting behaviour for scalars and ensure\r\nthat input arrays have the same data type.\r\n\r\n([gh-24680](https://github.com/numpy/numpy/pull/24680),\r\n[gh-24770](https://github.com/numpy/numpy/pull/24770),\r\n[gh-24775](https://github.com/numpy/numpy/pull/24775))\r\n\r\n### Add `np.core.umath.find` and `np.core.umath.rfind` UFuncs\r\n\r\nAdd two `find` and `rfind` UFuncs that operate on unicode or byte\r\nstrings and are used in `np.char`. They operate similar to `str.find`\r\nand `str.rfind`.\r\n\r\n([gh-24868](https://github.com/numpy/numpy/pull/24868))\r\n\r\n### `diagonal` and `trace` for `numpy.linalg`\r\n\r\n`numpy.linalg.diagonal` and `numpy.linalg.trace` have been added, which are\r\narray API standard-compatible variants of `numpy.diagonal` and `numpy.trace`.\r\nThey differ in the default axis selection which define 2-D sub-arrays.\r\n\r\n([gh-24887](https://github.com/numpy/numpy/pull/24887))\r\n\r\n### New `long` and `ulong` dtypes\r\n\r\n`numpy.long` and `numpy.ulong` have been added as NumPy integers mapping to\r\nC\\'s `long` and `unsigned long`. Prior to NumPy 1.24, `numpy.long` was an alias\r\nto Python\\'s `int`.\r\n\r\n([gh-24922](https://github.com/numpy/numpy/pull/24922))\r\n\r\n### `svdvals` for `numpy.linalg`\r\n\r\n`numpy.linalg.svdvals` has been added. It computes singular values for (a stack\r\nof) matrices. Executing `np.svdvals(x)` is the same as calling `np.svd(x,\r\ncompute_uv=False, hermitian=False)`. This function is compatible with the array\r\nAPI standard.\r\n\r\n([gh-24940](https://github.com/numpy/numpy/pull/24940))\r\n\r\n### A new `isdtype` function\r\n\r\n`numpy.isdtype` was added to provide a canonical way to classify NumPy\\'s\r\ndtypes in compliance with the array API standard.\r\n\r\n([gh-25054](https://github.com/numpy/numpy/pull/25054))\r\n\r\n### A new `astype` function\r\n\r\n`numpy.astype` was added to provide an array API standard-compatible\r\nalternative to the `numpy.ndarray.astype` method.\r\n\r\n([gh-25079](https://github.com/numpy/numpy/pull/25079))\r\n\r\n### Array API compatible functions\\' aliases\r\n\r\n13 aliases for existing functions were added to improve compatibility\r\nwith the array API standard:\r\n\r\n-   Trigonometry: `acos`, `acosh`, `asin`, `asinh`, `atan`, `atanh`,\r\n    `atan2`.\r\n-   Bitwise: `bitwise_left_shift`, `bitwise_invert`,\r\n    `bitwise_right_shift`.\r\n-   Misc: `concat`, `permute_dims`, `pow`.\r\n-   In `numpy.linalg`: `tensordot`, `matmul`.\r\n\r\n([gh-25086](https://github.com/numpy/numpy/pull/25086))\r\n\r\n### New `unique_*` functions\r\n\r\nThe `numpy.unique_all`, `numpy.unique_counts`, `numpy.unique_inverse`, and\r\n`numpy.unique_values` functions have been added. They provide functionality of\r\n`numpy.unique` with different sets of flags. They are array API\r\nstandard-compatible, and because the number of arrays they return does not\r\ndepend on the values of input arguments, they are easier to target for JIT\r\ncompilation.\r\n\r\n([gh-25088](https://github.com/numpy/numpy/pull/25088))\r\n\r\n### Matrix transpose support for ndarrays\r\n\r\nNumPy now offers support for calculating the matrix transpose of an\r\narray (or stack of arrays). The matrix transpose is equivalent to\r\nswapping the last two axes of an array. Both `np.ndarray` and\r\n`np.ma.MaskedArray` now expose a `.mT` attribute, and there is a\r\nmatching new `numpy.matrix_transpose` function.\r\n\r\n([gh-23762](https://github.com/numpy/numpy/pull/23762))\r\n\r\n### Array API compatible functions for `numpy.linalg`\r\n\r\nSix new functions and two aliases were added to improve compatibility\r\nwith the Array API standard for \\`numpy.linalg\\`:\r\n\r\n-   `numpy.linalg.matrix_norm` - Computes the matrix norm of\r\n    a matrix (or a stack of matrices).\r\n\r\n-   `numpy.linalg.vector_norm` - Computes the vector norm of\r\n    a vector (or batch of vectors).\r\n\r\n-   `numpy.vecdot` - Computes the (vector) dot product of\r\n    two arrays.\r\n\r\n-   `numpy.linalg.vecdot` - An alias for\r\n    `numpy.vecdot`.\r\n\r\n-   `numpy.linalg.matrix_transpose` - An alias for\r\n    `numpy.matrix_transpose`.\r\n\r\n    ([gh-25155](https://github.com/numpy/numpy/pull/25155))\r\n\r\n-   `numpy.linalg.outer` has been added. It computes the\r\n    outer product of two vectors. It differs from\r\n    `numpy.outer` by accepting one-dimensional arrays only.\r\n    This function is compatible with the array API standard.\r\n\r\n    ([gh-25101](https://github.com/numpy/numpy/pull/25101))\r\n\r\n-   `numpy.linalg.cross` has been added. It computes the\r\n    cross product of two (arrays of) 3-dimensional vectors. It differs\r\n    from `numpy.cross` by accepting three-dimensional\r\n    vectors only. This function is compatible with the array API\r\n    standard.\r\n\r\n    ([gh-25145](https://github.com/numpy/numpy/pull/25145))\r\n\r\n### A `correction` argument for `var` and `std`\r\n\r\nA `correction` argument was added to `numpy.var` and `numpy.std`, which is an\r\narray API standard compatible alternative to `ddof`. As both arguments serve a\r\nsimilar purpose, only one of them can be provided at the same time.\r\n\r\n([gh-25169](https://github.com/numpy/numpy/pull/25169))\r\n\r\n### `ndarray.device` and `ndarray.to_device`\r\n\r\nAn `ndarray.device` attribute and `ndarray.to_device` method were added\r\nto `numpy.ndarray` for array API standard compatibility.\r\n\r\nAdditionally, `device` keyword-only arguments were added to:\r\n`numpy.asarray`, `numpy.arange`, `numpy.empty`, `numpy.empty_like`,\r\n`numpy.eye`, `numpy.full`, `numpy.full_like`, `numpy.linspace`, `numpy.ones`,\r\n`numpy.ones_like`, `numpy.zeros`, and `numpy.zeros_like`.\r\n\r\nFor all these new arguments, only `device=\"cpu\"` is supported.\r\n\r\n([gh-25233](https://github.com/numpy/numpy/pull/25233))\r\n\r\n### StringDType has been added to NumPy\r\n\r\nWe have added a new variable-width UTF-8 encoded string data type, implementing\r\na \\\"NumPy array of Python strings\\\", including support for a user-provided\r\nmissing data sentinel. It is intended as a drop-in replacement for arrays of\r\nPython strings and missing data sentinels using the object dtype. See \r\n[NEP 55](https://numpy.org/neps/nep-0055-string_dtype.html) and the documentation\r\nof stringdtype for more details.\r\n\r\n([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n### New keywords for `cholesky` and `pinv`\r\n\r\nThe `upper` and `rtol` keywords were added to\r\n`numpy.linalg.cholesky` and `numpy.linalg.pinv`,\r\nrespectively, to improve array API standard compatibility.\r\n\r\nFor `numpy.linalg.pinv`, if neither `rcond` nor `rtol` is\r\nspecified, the `rcond`\\'s default is used. We plan to deprecate and\r\nremove `rcond` in the future.\r\n\r\n([gh-25388](https://github.com/numpy/numpy/pull/25388))\r\n\r\n### New keywords for `sort`, `argsort` and `linalg.matrix_rank`\r\n\r\nNew keyword parameters were added to improve array API standard\r\ncompatibility:\r\n\r\n-   `rtol` was added to `numpy.linalg.matrix_rank`.\r\n-   `stable` was added to `numpy.sort` and\r\n    `numpy.argsort`.\r\n\r\n([gh-25437](https://github.com/numpy/numpy/pull/25437))\r\n\r\n### New `numpy.strings` namespace for string ufuncs\r\n\r\nNumPy now implements some string operations as ufuncs. The old `np.char`\r\nnamespace is still available, and where possible the string manipulation\r\nfunctions in that namespace have been updated to use the new ufuncs,\r\nsubstantially improving their performance.\r\n\r\nWhere possible, we suggest updating code to use functions in\r\n`np.strings` instead of `np.char`. In the future we may deprecate\r\n`np.char` in favor of `np.strings`.\r\n\r\n([gh-25463](https://github.com/numpy/numpy/pull/25463))\r\n\r\n### `numpy.fft` support for different precisions and in-place calculations\r\n\r\nThe various FFT routines in `numpy.fft` now do their\r\ncalculations natively in float, double, or long double precision,\r\ndepending on the input precision, instead of always calculating in\r\ndouble precision. Hence, the calculation will now be less precise for\r\nsingle and more precise for long double precision. The data type of the\r\noutput array will now be adjusted accordingly.\r\n\r\nFurthermore, all FFT routines have gained an `out` argument that can be\r\nused for in-place calculations.\r\n\r\n([gh-25536](https://github.com/numpy/numpy/pull/25536))\r\n\r\n### configtool and pkg-config support\r\n\r\nA new `numpy-config` CLI script is available that can be queried for the\r\nNumPy version and for compile flags needed to use the NumPy C API. This\r\nwill allow build systems to better support the use of NumPy as a\r\ndependency. Also, a `numpy.pc` pkg-config file is now included with\r\nNumpy. In order to find its location for use with `PKG_CONFIG_PATH`, use\r\n`numpy-config --pkgconfigdir`.\r\n\r\n([gh-25730](https://github.com/numpy/numpy/pull/25730))\r\n\r\n### Array API standard support in the main namespace\r\n\r\nThe main `numpy` namespace now supports the array API standard. See\r\n`array-api-standard-compatibility` for\r\ndetails.\r\n\r\n([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n## Improvements\r\n\r\n### Strings are now supported by `any`, `all`, and the logical ufuncs.\r\n\r\n> ([gh-25651](https://github.com/numpy/numpy/pull/25651))\r\n\r\n### Integer sequences as the shape argument for `memmap`\r\n\r\n`numpy.memmap` can now be created with any integer sequence\r\nas the `shape` argument, such as a list or numpy array of integers.\r\nPreviously, only the types of tuple and int could be used without\r\nraising an error.\r\n\r\n([gh-23729](https://github.com/numpy/numpy/pull/23729))\r\n\r\n### `errstate` is now faster and context safe\r\n\r\nThe `numpy.errstate` context manager/decorator is now faster\r\nand safer. Previously, it was not context safe and had (rare) issues\r\nwith thread-safety.\r\n\r\n([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n### AArch64 quicksort speed improved by using Highway\\'s VQSort\r\n\r\nThe first introduction of the Google Highway library, using VQSort on\r\nAArch64. Execution time is improved by up to 16x in some cases, see the\r\nPR for benchmark results. Extensions to other platforms will be done in\r\nthe future.\r\n\r\n([gh-24018](https://github.com/numpy/numpy/pull/24018))\r\n\r\n### Complex types - underlying C type changes\r\n\r\n-   The underlying C types for all of NumPy\\'s complex types have been\r\n    changed to use C99 complex types.\r\n\r\n-   While this change does not affect the memory layout of complex\r\n    types, it changes the API to be used to directly retrieve or write\r\n    the real or complex part of the complex number, since direct field\r\n    access (as in `c.real` or `c.imag`) is no longer an option. You can\r\n    now use utilities provided in `numpy/npy_math.h` to do these\r\n    operations, like this:\r\n\r\n    ``` c\r\n    npy_cdouble c;\r\n    npy_csetreal(&c, 1.0);\r\n    npy_csetimag(&c, 0.0);\r\n    printf(\"%d + %di\\n\", npy_creal(c), npy_cimag(c));\r\n    ```\r\n\r\n-   To ease cross-version compatibility, equivalent macros and a\r\n    compatibility layer have been added which can be used by downstream\r\n    packages to continue to support both NumPy 1.x and 2.x. See\r\n    `complex-numbers` for more info.\r\n\r\n-   `numpy/npy_common.h` now includes `complex.h`, which means that\r\n    `complex` is now a reserved keyword.\r\n\r\n([gh-24085](https://github.com/numpy/numpy/pull/24085))\r\n\r\n### `iso_c_binding` support and improved common blocks for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n`f2py` now handles `common` blocks which have `kind` specifications from\r\nmodules. This further expands the usability of intrinsics like\r\n`iso_fortran_env` and `iso_c_binding`.\r\n\r\n([gh-25186](https://github.com/numpy/numpy/pull/25186))\r\n\r\n### Call `str` automatically on third argument to functions like `assert_equal`\r\n\r\nThe third argument to functions like\r\n`numpy.testing.assert_equal` now has `str` called on it\r\nautomatically. This way it mimics the built-in `assert` statement, where\r\n`assert_equal(a, b, obj)` works like `assert a == b, obj`.\r\n\r\n([gh-24877](https://github.com/numpy/numpy/pull/24877))\r\n\r\n### Support for array-like `atol`/`rtol` in `isclose`, `allclose`\r\n\r\nThe keywords `atol` and `rtol` in `numpy.isclose` and\r\n`numpy.allclose` now accept both scalars and arrays. An\r\narray, if given, must broadcast to the shapes of the first two array\r\narguments.\r\n\r\n([gh-24878](https://github.com/numpy/numpy/pull/24878))\r\n\r\n### Consistent failure messages in test functions\r\n\r\nPreviously, some `numpy.testing` assertions printed messages\r\nthat referred to the actual and desired results as `x` and `y`. Now,\r\nthese values are consistently referred to as `ACTUAL` and `DESIRED`.\r\n\r\n([gh-24931](https://github.com/numpy/numpy/pull/24931))\r\n\r\n### n-D FFT transforms allow `s[i] == -1`\r\n\r\nThe `numpy.fft.fftn`, `numpy.fft.ifftn`,\r\n`numpy.fft.rfftn`, `numpy.fft.irfftn`,\r\n`numpy.fft.fft2`, `numpy.fft.ifft2`,\r\n`numpy.fft.rfft2` and `numpy.fft.irfft2`\r\nfunctions now use the whole input array along the axis `i` if\r\n`s[i] == -1`, in line with the array API standard.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### Guard PyArrayScalar_VAL and PyUnicodeScalarObject for the limited API\r\n\r\n`PyUnicodeScalarObject` holds a `PyUnicodeObject`, which is not\r\navailable when using `Py_LIMITED_API`. Add guards to hide it and\r\nconsequently also make the `PyArrayScalar_VAL` macro hidden.\r\n\r\n([gh-25531](https://github.com/numpy/numpy/pull/25531))\r\n\r\n## Changes\r\n\r\n-   `np.gradient()` now returns a tuple rather than a list making the\r\n    return value immutable.\r\n\r\n    ([gh-23861](https://github.com/numpy/numpy/pull/23861))\r\n\r\n-   Being fully context and thread-safe, `np.errstate` can only be\r\n    entered once now.\r\n\r\n-   `np.setbufsize` is now tied to `np.errstate()`: leaving an\r\n    `np.errstate` context will also reset the `bufsize`.\r\n\r\n    ([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n-   A new public `np.lib.array_utils` submodule has been introduced and\r\n    it currently contains three functions: `byte_bounds` (moved from\r\n    `np.lib.utils`), `normalize_axis_tuple` and `normalize_axis_index`.\r\n\r\n    ([gh-24540](https://github.com/numpy/numpy/pull/24540))\r\n\r\n-   Introduce `numpy.bool` as the new canonical name for\r\n    NumPy\\'s boolean dtype, and make `numpy.bool\\_` an alias\r\n    to it. Note that until NumPy 1.24, `np.bool` was an alias to\r\n    Python\\'s builtin `bool`. The new name helps with array API standard\r\n    compatibility and is a more intuitive name.\r\n\r\n    ([gh-25080](https://github.com/numpy/numpy/pull/25080))\r\n\r\n-   The `dtype.flags` value was previously stored as a signed integer.\r\n    This means that the aligned dtype struct flag lead to negative flags\r\n    being set (-128 rather than 128). This flag is now stored unsigned\r\n    (positive). Code which checks flags manually may need to adapt. This\r\n    may include code compiled with Cython 0.29.x.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Representation of NumPy scalars changed\r\n\r\nAs per NEP 51, the scalar representation has been updated to include the type\r\ninformation to avoid confusion with Python scalars.\r\n\r\nScalars are now printed as `np.float64(3.0)` rather than just `3.0`.\r\nThis may disrupt workflows that store representations of numbers (e.g.,\r\nto files) making it harder to read them. They should be stored as\r\nexplicit strings, for example by using `str()` or `f\"{scalar!s}\"`. For\r\nthe time being, affected users can use\r\n`np.set_printoptions(legacy=\"1.25\")` to get the old behavior (with\r\npossibly a few exceptions). Documentation of downstream projects may\r\nrequire larger updates, if code snippets are tested. We are working on\r\ntooling for\r\n[doctest-plus](https://github.com/scientific-python/pytest-doctestplus/issues/107)\r\nto facilitate updates.\r\n\r\n([gh-22449](https://github.com/numpy/numpy/pull/22449))\r\n\r\n### Truthiness of NumPy strings changed\r\n\r\nNumPy strings previously were inconsistent about how they defined if the\r\nstring is `True` or `False` and the definition did not match the one\r\nused by Python. Strings are now considered `True` when they are\r\nnon-empty and `False` when they are empty. This changes the following\r\ndistinct cases:\r\n\r\n-   Casts from string to boolean were previously roughly equivalent to\r\n    `string_array.astype(np.int64).astype(bool)`, meaning that only\r\n    valid integers could be cast. Now a string of `\"0\"` will be\r\n    considered `True` since it is not empty. If you need the old\r\n    behavior, you may use the above step (casting to integer first) or\r\n    `string_array == \"0\"` (if the input is only ever `0` or `1`). To get\r\n    the new result on old NumPy versions use `string_array != \"\"`.\r\n-   `np.nonzero(string_array)` previously ignored whitespace so that a\r\n    string only containing whitespace was considered `False`. Whitespace\r\n    is now considered `True`.\r\n\r\nThis change does not affect `np.loadtxt`, `np.fromstring`, or\r\n`np.genfromtxt`. The first two still use the integer definition, while\r\n`genfromtxt` continues to match for `\"true\"` (ignoring case). However,\r\nif `np.bool_` is used as a converter the result will change.\r\n\r\nThe change does affect `np.fromregex` as it uses direct assignments.\r\n\r\n([gh-23871](https://github.com/numpy/numpy/pull/23871))\r\n\r\n### A `mean` keyword was added to var and std function\r\n\r\nOften when the standard deviation is needed the mean is also needed. The\r\nsame holds for the variance and the mean. Until now the mean is then\r\ncalculated twice, the change introduced here for the `numpy.var` and\r\n`numpy.std` functions allows for passing in a precalculated mean as an keyword\r\nargument. See the docstrings for details and an example illustrating the\r\nspeed-up.\r\n\r\n([gh-24126](https://github.com/numpy/numpy/pull/24126))\r\n\r\n### Remove datetime64 deprecation warning when constructing with timezone\r\n\r\nThe `numpy.datetime64` method now issues a UserWarning rather than a\r\nDeprecationWarning whenever a timezone is included in the datetime string that\r\nis provided.\r\n\r\n([gh-24193](https://github.com/numpy/numpy/pull/24193))\r\n\r\n### Default integer dtype is now 64-bit on 64-bit Windows\r\n\r\nThe default NumPy integer is now 64-bit on all 64-bit systems as the\r\nhistoric 32-bit default on Windows was a common source of issues. Most\r\nusers should not notice this. The main issues may occur with code\r\ninterfacing with libraries written in a compiled language like C. For\r\nmore information see `migration_windows_int64`.\r\n\r\n([gh-24224](https://github.com/numpy/numpy/pull/24224))\r\n\r\n### Renamed `numpy.core` to `numpy._core`\r\n\r\nAccessing `numpy.core` now emits a DeprecationWarning. In practice we\r\nhave found that most downstream usage of `numpy.core` was to access\r\nfunctionality that is available in the main `numpy` namespace. If for\r\nsome reason you are using functionality in `numpy.core` that is not\r\navailable in the main `numpy` namespace, this means you are likely using\r\nprivate NumPy internals. You can still access these internals via\r\n`numpy._core` without a deprecation warning but we do not provide any\r\nbackward compatibility guarantees for NumPy internals. Please open an\r\nissue if you think a mistake was made and something needs to be made\r\npublic.\r\n\r\n([gh-24634](https://github.com/numpy/numpy/pull/24634))\r\n\r\nThe \\\"relaxed strides\\\" debug build option, which was previously enabled\r\nthrough the `NPY_RELAXED_STRIDES_DEBUG` environment variable or the\r\n`-Drelaxed-strides-debug` config-settings flag has been removed.\r\n\r\n([gh-24717](https://github.com/numpy/numpy/pull/24717))\r\n\r\n### Redefinition of `np.intp`/`np.uintp` (almost never a change)\r\n\r\nDue to the actual use of these types almost always matching the use of\r\n`size_t`/`Py_ssize_t` this is now the definition in C. Previously, it\r\nmatched `intptr_t` and `uintptr_t` which would often have been subtly\r\nincorrect. This has no effect on the vast majority of machines since the\r\nsize of these types only differ on extremely niche platforms.\r\n\r\nHowever, it means that:\r\n\r\n-   Pointers may not necessarily fit into an `intp` typed array anymore.\r\n    The `p` and `P` character codes can still be used, however.\r\n-   Creating `intptr_t` or `uintptr_t` typed arrays in C remains\r\n    possible in a cross-platform way via `PyArray_DescrFromType('p')`.\r\n-   The new character codes `nN` were introduced.\r\n-   It is now correct to use the Python C-API functions when parsing to\r\n    `npy_intp` typed arguments.\r\n\r\n([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n### `numpy.fft.helper` made private\r\n\r\n`numpy.fft.helper` was renamed to `numpy.fft._helper` to indicate that\r\nit is a private submodule. All public functions exported by it should be\r\naccessed from `numpy.fft`.\r\n\r\n([gh-24945](https://github.com/numpy/numpy/pull/24945))\r\n\r\n### `numpy.linalg.linalg` made private\r\n\r\n`numpy.linalg.linalg` was renamed to `numpy.linalg._linalg` to indicate\r\nthat it is a private submodule. All public functions exported by it\r\nshould be accessed from `numpy.linalg`.\r\n\r\n([gh-24946](https://github.com/numpy/numpy/pull/24946))\r\n\r\n### Out-of-bound axis not the same as `axis=None`\r\n\r\nIn some cases `axis=32` or for concatenate any large value was the same\r\nas `axis=None`. Except for `concatenate` this was deprecate. Any out of\r\nbound axis value will now error, make sure to use `axis=None`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### New `copy` keyword meaning for `array` and `asarray` constructors\r\n\r\nNow `numpy.array` and `numpy.asarray` support\r\nthree values for `copy` parameter:\r\n\r\n-   `None` - A copy will only be made if it is necessary.\r\n-   `True` - Always make a copy.\r\n-   `False` - Never make a copy. If a copy is required a `ValueError` is\r\n    raised.\r\n\r\nThe meaning of `False` changed as it now raises an exception if a copy\r\nis needed.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### The `__array__` special method now takes a `copy` keyword argument.\r\n\r\nNumPy will pass `copy` to the `__array__` special method in situations\r\nwhere it would be set to a non-default value (e.g. in a call to\r\n`np.asarray(some_object, copy=False)`). Currently, if an unexpected\r\nkeyword argument error is raised after this, NumPy will print a warning\r\nand re-try without the `copy` keyword argument. Implementations of\r\nobjects implementing the `__array__` protocol should accept a `copy`\r\nkeyword argument with the same meaning as when passed to\r\n`numpy.array` or `numpy.asarray`.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### Cleanup of initialization of `numpy.dtype` with strings with commas\r\n\r\nThe interpretation of strings with commas is changed slightly, in that a\r\ntrailing comma will now always create a structured dtype. E.g., where\r\npreviously `np.dtype(\"i\")` and `np.dtype(\"i,\")` were treated as\r\nidentical, now `np.dtype(\"i,\")` will create a structured dtype, with a\r\nsingle field. This is analogous to `np.dtype(\"i,i\")` creating a\r\nstructured dtype with two fields, and makes the behaviour consistent\r\nwith that expected of tuples.\r\n\r\nAt the same time, the use of single number surrounded by parenthesis to\r\nindicate a sub-array shape, like in `np.dtype(\"(2)i,\")`, is deprecated.\r\nInstead; one should use `np.dtype(\"(2,)i\")` or `np.dtype(\"2i\")`.\r\nEventually, using a number in parentheses will raise an exception, like\r\nis the case for initializations without a comma, like\r\n`np.dtype(\"(2)i\")`.\r\n\r\n([gh-25434](https://github.com/numpy/numpy/pull/25434))\r\n\r\n### Change in how complex sign is calculated\r\n\r\nFollowing the array API standard, the complex sign is now calculated as\r\n`z / |z|` (instead of the rather less logical case where the sign of the\r\nreal part was taken, unless the real part was zero, in which case the\r\nsign of the imaginary part was returned). Like for real numbers, zero is\r\nreturned if `z==0`.\r\n\r\n([gh-25441](https://github.com/numpy/numpy/pull/25441))\r\n\r\n### Return types of functions that returned a list of arrays\r\n\r\nFunctions that returned a list of ndarrays have been changed to return a\r\ntuple of ndarrays instead. Returning tuples consistently whenever a\r\nsequence of arrays is returned makes it easier for JIT compilers like\r\nNumba, as well as for static type checkers in some cases, to support\r\nthese functions. Changed functions are: `numpy.atleast_1d`, `numpy.atleast_2d`,\r\n`numpy.atleast_3d`, `numpy.broadcast_arrays`, `numpy.meshgrid`,\r\n`numpy.ogrid`, `numpy.histogramdd`.\r\n\r\n### `np.unique` `return_inverse` shape for multi-dimensional inputs\r\n\r\nWhen multi-dimensional inputs are passed to `np.unique` with\r\n`return_inverse=True`, the `unique_inverse` output is now shaped such\r\nthat the input can be reconstructed directly using\r\n`np.take(unique, unique_inverse)` when `axis=None`, and\r\n`np.take_along_axis(unique, unique_inverse, axis=axis)` otherwise.\r\n\r\n([gh-25553](https://github.com/numpy/numpy/pull/24126),\r\n[gh-25570](https://github.com/numpy/numpy/pull/25570))\r\n\r\n### `any` and `all` return booleans for object arrays\r\n\r\nThe `any` and `all` functions and methods now return booleans also for\r\nobject arrays. Previously, they did a reduction which behaved like the\r\nPython `or` and `and` operators which evaluates to one of the arguments.\r\nYou can use `np.logical_or.reduce` and `np.logical_and.reduce` to\r\nachieve the previous behavior.\r\n\r\n([gh-25712](https://github.com/numpy/numpy/pull/25712))\r\n\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    097c3c7e3d5159bee4fd60fabb6f7c15  numpy-2.0.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    dcf4a04f08be737a3224a3fe0f408857  numpy-2.0.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    ceee44fdc825abe8945030cc74d78340  numpy-2.0.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    0d77ca403f1c03ea0cf3005136d0adbe  numpy-2.0.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    e1a620f15fd797e0e6fe0d3af7dfac6f  numpy-2.0.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c356e0c2c7afde1c1e208bab64541e78  numpy-2.0.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    106c02ca9f2dd023d3d1fa67c00de71f  numpy-2.0.0rc1-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    ebbb64f3bf69a58cc2a410d4e9265e7f  numpy-2.0.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    a9cbb955a541f4e9fd55a779b35e986e  numpy-2.0.0rc1-cp310-cp310-win32.whl\r\n    e54e931ca6b7d51919952f8bb5dc46ee  numpy-2.0.0rc1-cp310-cp310-win_amd64.whl\r\n    dafd6406b44c5675b002456a4ceb6a26  numpy-2.0.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    4f8b3c8f5cfcb69c78ce41e41cc33085  numpy-2.0.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    921260667355fc407dbcf1ec11b75bd2  numpy-2.0.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    9554e7e501b7751d144aacc8658e9a45  numpy-2.0.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    683df12eba035788df3092869f6003f0  numpy-2.0.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3df4b3fb1e4d865c393e2938991481d2  numpy-2.0.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f1a8fdcb957b9f04aa2d621c3f8c3ece  numpy-2.0.0rc1-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    0a12d7d664d450efb24c801df03d58ac  numpy-2.0.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    272659018425cca4123bb46985b48fbd  numpy-2.0.0rc1-cp311-cp311-win32.whl\r\n    fc6707777a4d21c554cbd1ee40d02efa  numpy-2.0.0rc1-cp311-cp311-win_amd64.whl\r\n    1ab256609e0eb2b86f72e238becd9b49  numpy-2.0.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    71e858d89823dfc3a005218092af49a6  numpy-2.0.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    77bd5f87b628b0e6f39e0df7166f3ae1  numpy-2.0.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    efda4b10dc0fe086e1d33747d9102cd7  numpy-2.0.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    d2e813366f0ab4fd6ec6077390fc9de2  numpy-2.0.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    616efe037e2538681f5ab223b6428e69  numpy-2.0.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    46da92334bd791c759bf414ed61e4a7a  numpy-2.0.0rc1-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    2f45fe8fa2648093ba0578416fc3f7a9  numpy-2.0.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    edc8cf6127019ed7773ed8e5b27a52e8  numpy-2.0.0rc1-cp312-cp312-win32.whl\r\n    47b8fcfe22189f9bbc97d30be3f6ba29  numpy-2.0.0rc1-cp312-cp312-win_amd64.whl\r\n    3578edf376be61c3173f9eecf4bdeb08  numpy-2.0.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    1571b789456e859b9fa1550e9fcca88a  numpy-2.0.0rc1-cp39-cp39-macosx_11_0_arm64.whl\r\n    d09858e54060d0bd38b30f59488b6e9f  numpy-2.0.0rc1-cp39-cp39-macosx_14_0_arm64.whl\r\n    2cb1770fb5f426b9c542672d6a39253c  numpy-2.0.0rc1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    21f7304c982fb92c4d6c165fc6e9c672  numpy-2.0.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    96101f85cc666c5666fcb9b8eebd7cbc  numpy-2.0.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1469682f758821e6657cbb7469bad713  numpy-2.0.0rc1-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    8664fc00fed8e741265dce45b9b13054  numpy-2.0.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    2098687405b0e05a952ad72121d26365  numpy-2.0.0rc1-cp39-cp39-win32.whl\r\n    b54376b8422df10f4bbed2fa7070395f  numpy-2.0.0rc1-cp39-cp39-win_amd64.whl\r\n    fef9749bcacad7b4fdece4d0b5b8bb47  numpy-2.0.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    3f8303f1768278acb0fcc8ed8fb919f2  numpy-2.0.0rc1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    227fc258d8b40361ddc1ecbd8b95b6bc  numpy-2.0.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    466e180fd734cccf2ea3170cc3a97d53  numpy-2.0.0rc1-pp39-pypy39_pp73-win_amd64.whl\r\n    04b5c7de86e2883a5aed5a9f1a7f414c  numpy-2.0.0rc1.tar.gz\r\n\r\n### SHA256\r\n\r\n    9d96878db0d4f267e62e21f6feb7d0e7f07ec02784e705f37b7f6493a935c7fd  numpy-2.0.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    f9e566457284cb55447eab7566fad2b59e17f01776bb1b76828a6a931d111c72  numpy-2.0.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    6e0438e248b5e7e46e80a686868d36d6a4ce875cedce87122d1616ffd8e2a669  numpy-2.0.0rc1-cp310-cp310-macosx_14_0_arm64.whl\r\n    015df68fd97bc00e1b7719e80cea401b23a601b639c6d6545922f7a21876b771  numpy-2.0.0rc1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    cdea89bba67157bd8ec2ba9613d9f5ba2d18deab113171ca106953fdf8f7f314  numpy-2.0.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    cfd4e2f1605e3a607674dd3173c03b2e2f8520fa3ec2db04f2da2a3d5339df1b  numpy-2.0.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    25d43c681fefb4d7e0ffa949097b20eacbad4be9af7c136b1f69dc4c34c1f6d4  numpy-2.0.0rc1-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    9da7cddeaf312a3645325a7da3b18bfad345cae5005cb4d6fcf24796bedaf239  numpy-2.0.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    d4b56e9abe2c3cec5615725320e002396c1e4b78011831a78427c7ff7b185816  numpy-2.0.0rc1-cp310-cp310-win32.whl\r\n    5c62c0d071681391b9c73ba09b35cb46477659012fd88af2c877a2a9da84aa2f  numpy-2.0.0rc1-cp310-cp310-win_amd64.whl\r\n    060635ab843ea0e2aa6ad153d5656193014eedd90ec4ef6e2b738d81bfe28170  numpy-2.0.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    91103edc14b5b70bc25af26ea5d75a45b6490bed5f1da9478f5bbe82542ba1b5  numpy-2.0.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    7d990411f2821bf2812ec66ae85e8f351103fe7c3a229152ab6f8c9a620e82eb  numpy-2.0.0rc1-cp311-cp311-macosx_14_0_arm64.whl\r\n    5e289dafe89a0dd756430fa03332c428c897c41cc3143230c38d7d2bb9ad475e  numpy-2.0.0rc1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    2b5f87d88212e54263f64257b28daa04f3fde627c204abd7557a80b582de4a63  numpy-2.0.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    67f9707c3df26ca5bce34162fe0721646504c5961ccfca94c294fbeaf42cfa5b  numpy-2.0.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7511694264a1219458a4e77d185a7ee350506b4e1e3b2b82845a5e9db044b6f5  numpy-2.0.0rc1-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    09e7a6cab5eac8aca0f17ad29b42ee1cd357e09a76076d5f4cb90ca62a0229b8  numpy-2.0.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    dfcd76a018c728ce7a3e6e09717e7a3dfbffdf87a57118dbc5ddc2167a678258  numpy-2.0.0rc1-cp311-cp311-win32.whl\r\n    afa4679bcbade6a4197c27874c0dacf5d45470d56cee8b1e2398e80859ab797c  numpy-2.0.0rc1-cp311-cp311-win_amd64.whl\r\n    1e2478ca8b4b0c5a7146fc316c83843bc47b2d73cf6c02000561794ae5dba537  numpy-2.0.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    09bedcb99b9ac5472d2e63cd18be861750acc7570ae3661be7cb6018ce376694  numpy-2.0.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    8a7c01e9c14216e386e42a0c75c76a015a002dd5ed833ffbdaa6a7f2aeed9258  numpy-2.0.0rc1-cp312-cp312-macosx_14_0_arm64.whl\r\n    00236e0e8a588fef8f70e0535b898bcebd97becc0b27686d2fc7cb35b5d1ab91  numpy-2.0.0rc1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    f36b7ccac6a3bfb342a61dd08be73fbe0286d2cb64c976bb1ed22feda0deb16f  numpy-2.0.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    fb009d69b3a362240acc5155e3de8f90311eb7f9f3958803af866945b8c9ee43  numpy-2.0.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    684eef178a2039cba72bce740cdf2f592e67a41885a0f09d5622380fc59af0f8  numpy-2.0.0rc1-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    8b510bab996ad7b7fa59ca14fdaae4c68a36ff0f71ccd9ddec769b58f9d19258  numpy-2.0.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    08d7d73d5b7d97decfb6584f41492f5584f81a3147514b67ac21ccccb3418b35  numpy-2.0.0rc1-cp312-cp312-win32.whl\r\n    39a65e8c127d51419942a9e0ec467273536acd373507ce64e63451690ed47bfc  numpy-2.0.0rc1-cp312-cp312-win_amd64.whl\r\n    5be315e916e7d4d372acf62dcc86900eb47b2f76c185d835634dd0503f441e35  numpy-2.0.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    b1bfbde0e9221920d02735ced823e53be46786589a5e8db91824bccd5115e5c8  numpy-2.0.0rc1-cp39-cp39-macosx_11_0_arm64.whl\r\n    f6539759d26e9b60dd9691732528dda7fe46a8c82be6294d109203dce4a8b89c  numpy-2.0.0rc1-cp39-cp39-macosx_14_0_arm64.whl\r\n    7517f752cad3d8bf297ed6421c63be769a03b8e3c34282eec803bae693dae67a  numpy-2.0.0rc1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    8798ee3db69d2f531b12897929583021206feb4d45234d035e5511a5bd0cee38  numpy-2.0.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    070a8b1c93b0bf21c1a3c51514145acbba612e9f3fd86870c1ca37a36cebbfce  numpy-2.0.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    706f66648712385f5ca5e22ad4f32d1a1a93c143882969d951122b5cf9e40a24  numpy-2.0.0rc1-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    cf1b08d8ee6d24576c0552dee71f36859de157481ed283e839d630b50242bbe1  numpy-2.0.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    c0af260d6818eab709b65953e1e5ce31a34d68230f488589b4bb96b13a28d18f  numpy-2.0.0rc1-cp39-cp39-win32.whl\r\n    1860507cb082ee8d9920db806d74d8a3936081b9ecf274b0fdb6d99b664680a1  numpy-2.0.0rc1-cp39-cp39-win_amd64.whl\r\n    9085f9a3e4f994ee8027db503627ae34aa867dc5f00ee7fe2b930608534a9293  numpy-2.0.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    fbee730ae5265735e2c9b006a0d3fe1443d08d9399d0103245b99ecba10ddff0  numpy-2.0.0rc1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    d93d29d07b2da78869793ec30321adda61a5a48b9e00d12160d0cd658f5f2e0b  numpy-2.0.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fe19044006aeaf783c64f22ee03330caccb4d3e54fe605b57444f448954b022d  numpy-2.0.0rc1-pp39-pypy39_pp73-win_amd64.whl\r\n    f0e169ec6cbc1b8e5f6a235845a80961f76f88352082213a1728a0967a761ad2  numpy-2.0.0rc1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/149104130/reactions",
      "total_count": 107,
      "+1": 44,
      "-1": 0,
      "laugh": 4,
      "hooray": 31,
      "confused": 0,
      "heart": 11,
      "rocket": 12,
      "eyes": 5
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/145946820",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/145946820/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/145946820/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v2.0.0b1",
    "id": 145946820,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84IsvjE",
    "tag_name": "v2.0.0b1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": true,
    "created_at": "2024-03-11T20:00:50Z",
    "published_at": "2024-03-12T01:44:57Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/156171055",
        "id": 156171055,
        "node_id": "RA_kwDOAA3dP84JTvsv",
        "name": "2.0.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 109094,
        "download_count": 18,
        "created_at": "2024-03-12T00:17:24Z",
        "updated_at": "2024-03-12T00:17:25Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0b1/2.0.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/156171070",
        "id": 156171070,
        "node_id": "RA_kwDOAA3dP84JTvs-",
        "name": "numpy-2.0.0b1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 18310319,
        "download_count": 288,
        "created_at": "2024-03-12T00:17:42Z",
        "updated_at": "2024-03-12T00:18:09Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0b1/numpy-2.0.0b1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/156171255",
        "id": 156171255,
        "node_id": "RA_kwDOAA3dP84JTvv3",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 73964,
        "download_count": 21,
        "created_at": "2024-03-12T00:18:29Z",
        "updated_at": "2024-03-12T00:18:30Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v2.0.0b1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v2.0.0b1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v2.0.0b1",
    "body": "# NumPy 2.0.0 Release Notes\r\n\r\n>**Note**\r\n>\r\n>The release of 2.0 is in progress and the current release overview and\r\n>highlights are still in a draft state. However, the highlights should\r\n>already list the most significant changes detailed in the full notes\r\n>below, and those full notes should be complete (if not copy-edited well\r\n>enough yet).\r\n\r\nNumPy 2.0.0 is the first major release since 2006. It is the result of\r\n10 months of development since the last feature release and is the work\r\nof 190 contributors spread over 968 pull requests. It contains a large\r\nnumber of exciting new features as well as changes to both the Python\r\nand C APIs.\r\n\r\nThis major release includes breaking changes that could not happen in a\r\nregular minor (feature) release - including an ABI break, changes to\r\ntype promotion rules, and API changes which may not have been emitting\r\ndeprecation warnings in 1.26.x. Key documents related to how to adapt to\r\nchanges in NumPy 2.0, in addition to these release notes, include:\r\n\r\n- The [numpy-2-migration-guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html)\r\n- The Numpy 2.0-specific advice in [for dpwmstream package authors](https://numpy.org/devdocs/dev/depending_on_numpy.html)\r\n\r\n## Highlights\r\n\r\nHighlights of this release include:\r\n\r\n- New features:\r\n    - A new variable-length string dtype, `numpy.dtypes.StringDType` and a new\r\n      `numpy.strings` namespace with performant ufuncs for string operations,\r\n    - Support for `float32` and `longdouble` in all\r\n      `numpy.fft` functions,\r\n    - Support for the array API standard in the main `numpy`\r\n      namespace.\r\n- Performance improvements:\r\n    - Sorting functions `sort`, `argsort`,\r\n      `partition`, `argpartition` have been\r\n      accelerated through the use of the Intel x86-simd-sort and\r\n      Google Highway libraries, and may see large (hardware-specific)\r\n      speedups,\r\n    - macOS Accelerate support and binary wheels for macOS \\>=14, with\r\n      significant performance improvements for linear algebra\r\n      operations on macOS, and wheels that are about 3 times smaller,\r\n    - `numpy.char` fixed-length string operations have\r\n      been accelerated by implementing ufuncs that also support\r\n      `numpy.dtypes.StringDType` in addition to the\r\n      fixed-length string dtypes,\r\n    - A new tracing and introspection API,\r\n      `numpy.lib.introspect.opt_func_info`, to determine\r\n      which hardware-specific kernels are available and will be\r\n      dispatched to.\r\n- Python API improvements:\r\n    - A clear split between public and private API, with a new module\r\n      structure and each public function now available in a single place.\r\n    - Many removals of non-recommended functions and aliases. This\r\n      should make it easier to learn and use NumPy. The number of\r\n      objects in the main namespace decreased by \\~10% and in\r\n      `numpy.lib` by \\~80%.\r\n    - `Canonical dtype names and a new `numpy.isdtype` introspection\r\n      function,\r\n- C API improvements:\r\n    - A new public C API for creating custom dtypes,\r\n    - Many outdated functions and macros removed, and private\r\n      internals hidden to ease future extensibility,\r\n    - New, easier to use, initialization functions: `PyArray_ImportNumPyAPI`\r\n      and `PyUFunc_ImportUFuncAPI`.\r\n- Improved behavior:\r\n    - Improvements to type promotion behavior was changed by adopting NEP 50.\r\n      This fixes many user surprises about promotions which previously often\r\n      depended on data values of input arrays rather than only their dtypes.\r\n      Please see the NEP and the numpy-2-migration-guide for details as this\r\n      change can lead to changes in output dtypes and lower precision results\r\n      for mixed-dtype operations.\r\n    - The default integer type on Windows is now `int64` rather than\r\n      `int32`, matching the behavior on other platforms,\r\n    - The maximum number of array dimensions is changed from 32 to 64\r\n- Documentation:\r\n    - The reference guide navigation was significantly improved, and\r\n      there is now documentation on NumPy\\'s\r\n      module structure,\r\n    - The building from source documentation was completely rewritten,\r\n\r\nFurthermore there are many changes to NumPy internals, including\r\ncontinuing to migrate code from C to C++, that will make it easier to\r\nimprove and maintain NumPy in the future.\r\n\r\nThe \\\"no free lunch\\\" theorem dictates that there is a price to pay for\r\nall these API and behavior improvements and better future extensibility.\r\nThis price is:\r\n\r\n1.  Backwards compatibility. There are a significant number of breaking\r\n    changes to both the Python and C APIs. In the majority of cases,\r\n    there are clear error messages that will inform the user how to\r\n    adapt their code. However, there are also changes in behavior for\r\n    which it was not possible to give such an error message - these\r\n    cases are all covered in the Deprecation and Compatibility sections\r\n    below, and in the numpy-2-migration-guide.\r\n\r\n    Note that there is a `ruff` mode to auto-fix many things in Python\r\n    code.\r\n\r\n2.  Breaking changes to the NumPy ABI. As a result, binaries of packages\r\n    that use the NumPy C API and were built against a NumPy 1.xx release\r\n    will not work with NumPy 2.0. On import, such packages will see an\r\n    `ImportError` with a message about binary incompatibility.\r\n\r\n    It is possible to build binaries against NumPy 2.0 that will work at\r\n    runtime with both NumPy 2.0 and 1.x. See numpy-2-abi-handling for more\r\n    details.\r\n\r\n    **All downstream packages that depend on the NumPy ABI are advised\r\n    to do a new release built against NumPy 2.0 and verify that that\r\n    release works with both 2.0 and 1.26 - ideally in the period between\r\n    2.0.0rc1 (which will be ABI-stable) and the final 2.0.0 release to\r\n    avoid problems for their users.**\r\n\r\nThe Python versions supported by this release are 3.9-3.12.\r\n\r\n## NumPy 2.0 Python API removals\r\n\r\n-   `np.geterrobj`, `np.seterrobj` and the related ufunc keyword\r\n    argument `extobj=` have been removed. The preferred replacement for\r\n    all of these is using the context manager `with np.errstate():`.\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   `np.cast` has been removed. The literal replacement for\r\n    `np.cast[dtype](arg)` is `np.asarray(arg, dtype=dtype)`.\r\n\r\n-   `np.source` has been removed. The preferred replacement is\r\n    `inspect.getsource`.\r\n\r\n-   `np.lookfor` has been removed.\r\n\r\n    ([gh-24144](https://github.com/numpy/numpy/pull/24144))\r\n\r\n-   `numpy.who` has been removed. As an alternative for the removed\r\n    functionality, one can use a variable explorer that is available in\r\n    IDEs such as Spyder or Jupyter Notebook.\r\n\r\n    ([gh-24321](https://github.com/numpy/numpy/pull/24321))\r\n\r\n-   Multiple niche enums, expired members and functions have been\r\n    removed from the main namespace, such as: `ERR_*`, `SHIFT_*`,\r\n    `np.fastCopyAndTranspose`, `np.kernel_version`, `np.numarray`,\r\n    `np.oldnumeric` and `np.set_numeric_ops`.\r\n\r\n    ([gh-24316](https://github.com/numpy/numpy/pull/24316))\r\n\r\n-   Replaced `from ... import *` in the `numpy/__init__.py` with\r\n    explicit imports. As a result, these main namespace members got\r\n    removed: `np.FLOATING_POINT_SUPPORT`, `np.FPE_*`, `np.NINF`,\r\n    `np.PINF`, `np.NZERO`, `np.PZERO`, `np.CLIP`, `np.WRAP`, `np.WRAP`,\r\n    `np.RAISE`, `np.BUFSIZE`, `np.UFUNC_BUFSIZE_DEFAULT`,\r\n    `np.UFUNC_PYVALS_NAME`, `np.ALLOW_THREADS`, `np.MAXDIMS`,\r\n    `np.MAY_SHARE_EXACT`, `np.MAY_SHARE_BOUNDS`, `add_newdoc`,\r\n    `np.add_docstring` and `np.add_newdoc_ufunc`.\r\n\r\n    ([gh-24357](https://github.com/numpy/numpy/pull/24357))\r\n\r\n-   Alias `np.float_` has been removed. Use `np.float64` instead.\r\n\r\n-   Alias `np.complex_` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longfloat` has been removed. Use `np.longdouble` instead.\r\n\r\n-   Alias `np.singlecomplex` has been removed. Use `np.complex64`\r\n    instead.\r\n\r\n-   Alias `np.cfloat` has been removed. Use `np.complex128` instead.\r\n\r\n-   Alias `np.longcomplex` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.clongfloat` has been removed. Use `np.clongdouble`\r\n    instead.\r\n\r\n-   Alias `np.string_` has been removed. Use `np.bytes_` instead.\r\n\r\n-   Alias `np.unicode_` has been removed. Use `np.str_` instead.\r\n\r\n-   Alias `np.Inf` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.Infinity` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.NaN` has been removed. Use `np.nan` instead.\r\n\r\n-   Alias `np.infty` has been removed. Use `np.inf` instead.\r\n\r\n-   Alias `np.mat` has been removed. Use `np.asmatrix` instead.\r\n\r\n-   `np.issubclass_` has been removed. Use the `issubclass` builtin\r\n    instead.\r\n\r\n-   `np.asfarray` has been removed. Use `np.asarray` with a proper dtype\r\n    instead.\r\n\r\n-   `np.set_string_function` has been removed. Use `np.set_printoptions`\r\n    instead with a formatter for custom printing of NumPy objects.\r\n\r\n-   `np.tracemalloc_domain` is now only available from `np.lib`.\r\n\r\n-   `np.recfromcsv` and `recfromtxt` are now only available from\r\n    `np.lib.npyio`.\r\n\r\n-   `np.issctype`, `np.maximum_sctype`, `np.obj2sctype`,\r\n    `np.sctype2char`, `np.sctypes`, `np.issubsctype` were all removed\r\n    from the main namespace without replacement, as they where niche\r\n    members.\r\n\r\n-   Deprecated `np.deprecate` and `np.deprecate_with_doc` has been\r\n    removed from the main namespace. Use `DeprecationWarning` instead.\r\n\r\n-   Deprecated `np.safe_eval` has been removed from the main namespace.\r\n    Use `ast.literal_eval` instead.\r\n\r\n    ([gh-24376](https://github.com/numpy/numpy/pull/24376))\r\n\r\n-   `np.find_common_type` has been removed. Use `numpy.promote_types` or\r\n    `numpy.result_type` instead. To achieve semantics for the\r\n    `scalar_types` argument, use `numpy.result_type` and pass `0`,\r\n    `0.0`, or `0j` as a Python scalar instead.\r\n\r\n-   `np.round_` has been removed. Use `np.round` instead.\r\n\r\n-   `np.nbytes` has been removed. Use `np.dtype(<dtype>).itemsize`\r\n    instead.\r\n\r\n    ([gh-24477](https://github.com/numpy/numpy/pull/24477))\r\n\r\n-   `np.compare_chararrays` has been removed from the main namespace.\r\n    Use `np.char.compare_chararrays` instead.\r\n\r\n-   The `charrarray` in the main namespace has been deprecated. It can\r\n    be imported without a deprecation warning from `np.char.chararray`\r\n    for now, but we are planning to fully deprecate and remove\r\n    `chararray` in the future.\r\n\r\n-   `np.format_parser` has been removed from the main namespace. Use\r\n    `np.rec.format_parser` instead.\r\n\r\n    ([gh-24587](https://github.com/numpy/numpy/pull/24587))\r\n\r\n-   Support for seven data type string aliases has been removed from\r\n    `np.dtype`: `int0`, `uint0`, `void0`, `object0`, `str0`, `bytes0`\r\n    and `bool8`.\r\n\r\n    ([gh-24807](https://github.com/numpy/numpy/pull/24807))\r\n\r\n-   The experimental `numpy.array_api` submodule has been removed. Use\r\n    the main `numpy` namespace for regular usage instead, or the\r\n    separate `array-api-strict` package for the compliance testing use\r\n    case for which `numpy.array_api` was mostly used.\r\n\r\n    ([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n### `__array_prepare__` is removed\r\n\r\nUFuncs called `__array_prepare__` before running computations for normal\r\nufunc calls (not generalized ufuncs, reductions, etc.). The function was\r\nalso called instead of `__array_wrap__` on the results of some linear\r\nalgebra functions.\r\n\r\nIt is now removed. If you use it, migrate to `__array_ufunc__` or rely\r\non `__array_wrap__` which is called with a context in all cases,\r\nalthough only after the result array is filled. In those code paths,\r\n`__array_wrap__` will now be passed a base class, rather than a subclass\r\narray.\r\n\r\n([gh-25105](https://github.com/numpy/numpy/pull/25105))\r\n\r\n## Deprecations\r\n\r\n-   `np.compat` has been deprecated, as Python 2 is no longer supported.\r\n\r\n-   `np.safe_eval` has been deprecated. `ast.literal_eval` should be\r\n    used instead.\r\n\r\n    ([gh-23830](https://github.com/numpy/numpy/pull/23830))\r\n\r\n-   `np.recfromcsv`, `np.recfromtxt`, `np.disp`, `np.get_array_wrap`,\r\n    `np.maximum_sctype`, `np.deprecate` and `np.deprecate_with_doc` have\r\n    been deprecated.\r\n\r\n    ([gh-24154](https://github.com/numpy/numpy/pull/24154))\r\n\r\n-   `np.trapz` has been deprecated. Use `np.trapezoid` or a\r\n    `scipy.integrate` function instead.\r\n\r\n-   `np.in1d` has been deprecated. Use `np.isin` instead.\r\n\r\n-   Alias `np.row_stack` has been deprecated. Use `np.vstack` directly.\r\n\r\n    ([gh-24445](https://github.com/numpy/numpy/pull/24445))\r\n\r\n-   `__array_wrap__` is now passed `arr, context, return_scalar` and\r\n    support for implementations not accepting all three are deprecated.\r\n    Its signature should be\r\n    `__array_wrap__(self, arr, context=None, return_scalar=False)`\r\n\r\n    ([gh-25408](https://github.com/numpy/numpy/pull/25408))\r\n\r\n-   Arrays of 2-dimensional vectors for `np.cross` have been deprecated.\r\n    Use arrays of 3-dimensional vectors instead.\r\n\r\n    ([gh-24818](https://github.com/numpy/numpy/pull/24818))\r\n\r\n-   `np.dtype(\"a\")` alias for `np.dtype(np.bytes_)` was deprecated. Use\r\n    `np.dtype(\"S\")` alias instead.\r\n\r\n    ([gh-24854](https://github.com/numpy/numpy/pull/24854))\r\n\r\n-   Use of keyword arguments `x` and `y` with functions\r\n    `assert_array_equal` and `assert_array_almost_equal` has been\r\n    deprecated. Pass the first two arguments as positional arguments\r\n    instead.\r\n\r\n    ([gh-24978](https://github.com/numpy/numpy/pull/24978))\r\n\r\n### `numpy.fft` deprecations for n-D transforms with None values in arguments\r\n\r\nUsing `fftn`, `ifftn`, `rfftn`, `irfftn`, `fft2`, `ifft2`, `rfft2` or\r\n`irfft2` with the `s` parameter set to a value that is not `None` and\r\nthe `axes` parameter set to `None` has been deprecated, in line with the\r\narray API standard. To retain current behaviour, pass a sequence \\[0,\r\n\\..., k-1\\] to `axes` for an array of dimension k.\r\n\r\nFurthermore, passing an array to `s` which contains `None` values is\r\ndeprecated as the parameter is documented to accept a sequence of\r\nintegers in both the NumPy docs and the array API specification. To use\r\nthe default behaviour of the corresponding 1-D transform, pass the value\r\nmatching the default for its `n` parameter. To use the default behaviour\r\nfor every axis, the `s` argument can be omitted.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### `np.linalg.lstsq` now defaults to a new `rcond` value\r\n\r\n`numpy.linalg.lstsq` now uses the new rcond value of the\r\nmachine precision times `max(M, N)`. Previously, the machine precision\r\nwas used but a FutureWarning was given to notify that this change will\r\nhappen eventually. That old behavior can still be achieved by passing\r\n`rcond=-1`.\r\n\r\n([gh-25721](https://github.com/numpy/numpy/pull/25721))\r\n\r\n## Expired deprecations\r\n\r\n-   The `np.core.umath_tests` submodule has been removed from the public\r\n    API. (Deprecated in NumPy 1.15)\r\n\r\n    ([gh-23809](https://github.com/numpy/numpy/pull/23809))\r\n\r\n-   The `PyDataMem_SetEventHook` deprecation has expired and it is\r\n    removed. Use `tracemalloc` and the `np.lib.tracemalloc_domain`\r\n    domain. (Deprecated in NumPy 1.23)\r\n\r\n    ([gh-23921](https://github.com/numpy/numpy/pull/23921))\r\n\r\n-   The deprecation of `set_numeric_ops` and the C functions\r\n    `PyArray_SetNumericOps` and `PyArray_GetNumericOps` has been expired\r\n    and the functions removed. (Deprecated in NumPy 1.16)\r\n\r\n    ([gh-23998](https://github.com/numpy/numpy/pull/23998))\r\n\r\n-   The `fasttake`, `fastclip`, and `fastputmask` `ArrFuncs` deprecation\r\n    is now finalized.\r\n\r\n-   The deprecated function `fastCopyAndTranspose` and its C counterpart\r\n    are now removed.\r\n\r\n-   The deprecation of `PyArray_ScalarFromObject` is now finalized.\r\n\r\n    ([gh-24312](https://github.com/numpy/numpy/pull/24312))\r\n\r\n-   `np.msort` has been removed. For a replacement, `np.sort(a, axis=0)`\r\n    should be used instead.\r\n\r\n    ([gh-24494](https://github.com/numpy/numpy/pull/24494))\r\n\r\n-   `np.dtype((\"f8\", 1)` will now return a shape 1 subarray dtype rather\r\n    than a non-subarray one.\r\n\r\n    ([gh-25761](https://github.com/numpy/numpy/pull/25761))\r\n\r\n-   Assigning to the `.data` attribute of an ndarray is disallowed and\r\n    will raise.\r\n\r\n-   `np.binary_repr(a, width)` will raise if width is too small.\r\n\r\n-   Using `NPY_CHAR` in `PyArray_DescrFromType()` will raise, use\r\n    `NPY_STRING` `NPY_UNICODE`, or `NPY_VSTRING` instead.\r\n\r\n    ([gh-25794](https://github.com/numpy/numpy/pull/25794))\r\n\r\n## Compatibility notes\r\n\r\n### `loadtxt` and `genfromtxt` default encoding changed\r\n\r\n`loadtxt` and `genfromtxt` now both default to `encoding=None` which may\r\nmainly modify how `converters` work. These will now be passed `str`\r\nrather than `bytes`. Pass the encoding explicitly to always get the new\r\nor old behavior. For `genfromtxt` the change also means that returned\r\nvalues will now be unicode strings rather than bytes.\r\n\r\n([gh-25158](https://github.com/numpy/numpy/pull/25158))\r\n\r\n### `f2py` compatibility notes\r\n\r\n-   `f2py` will no longer accept ambiguous `-m` and `.pyf` CLI\r\n    combinations. When more than one `.pyf` file is passed, an error is\r\n    raised. When both `-m` and a `.pyf` is passed, a warning is emitted\r\n    and the `-m` provided name is ignored.\r\n\r\n    ([gh-25181](https://github.com/numpy/numpy/pull/25181))\r\n\r\n-   The `f2py.compile()` helper has been removed because it leaked\r\n    memory, has been marked as experimental for several years now, and\r\n    was implemented as a thin `subprocess.run` wrapper. It was also one\r\n    of the test bottlenecks. See\r\n    [gh-25122](https://github.com/numpy/numpy/issues/25122) for the full\r\n    rationale. It also used several `np.distutils` features which are\r\n    too fragile to be ported to work with `meson`.\r\n\r\n-   Users are urged to replace calls to `f2py.compile` with calls to\r\n    `subprocess.run(\"python\", \"-m\", \"numpy.f2py\",...` instead, and to\r\n    use environment variables to interact with `meson`. [Native\r\n    files](https://mesonbuild.com/Machine-files.html) are also an\r\n    option.\r\n\r\n    ([gh-25193](https://github.com/numpy/numpy/pull/25193))\r\n\r\n### Minor changes in behavior of sorting functions\r\n\r\nDue to algorithmic changes and use of SIMD code, sorting functions with\r\nmethods that aren\\'t stable may return slightly different results in\r\n2.0.0 compared to 1.26.x. This includes the default method of\r\n`numpy.argsort` and `numpy.argpartition`.\r\n\r\n### Removed ambiguity when broadcasting in `np.solve`\r\n\r\nThe broadcasting rules for `np.solve(a, b)` were ambiguous when `b` had\r\n1 fewer dimensions than `a`. This has been resolved in a\r\nbackward-incompatible way and is now compliant with the Array API. The\r\nold behaviour can be reconstructed by using\r\n`np.solve(a, b[..., None])[..., 0]`.\r\n\r\n([gh-25914](https://github.com/numpy/numpy/pull/25914))\r\n\r\n### Modified representation for `Polynomial`\r\n\r\nThe representation method for\r\n`numpy.polynomial.polynomial.Polynomial` was updated to\r\ninclude the domain in the representation. The plain text and latex\r\nrepresentations are now consistent. For example the output of\r\n`str(np.polynomial.Polynomial([1, 1], domain=[.1, .2]))` used to be\r\n`1.0 + 1.0 x`, but now is `1.0 + 1.0 (-3.0000000000000004 + 20.0 x)`.\r\n\r\n([gh-21760](https://github.com/numpy/numpy/pull/21760))\r\n\r\n## C API changes\r\n\r\n-   The `PyArray_CGT`, `PyArray_CLT`, `PyArray_CGE`, `PyArray_CLE`,\r\n    `PyArray_CEQ`, `PyArray_CNE` macros have been removed.\r\n\r\n-   `PyArray_MIN` and `PyArray_MAX` have been moved from\r\n    `ndarraytypes.h` to `npy_math.h`.\r\n\r\n    ([gh-24258](https://github.com/numpy/numpy/pull/24258))\r\n\r\n-   A C API for working with `numpy.dtypes.StringDType`\r\n    arrays has been exposed. This includes functions for acquiring and\r\n    releasing mutexes which lock access to the string data, as well as\r\n    packing and unpacking UTF-8 bytestreams from array entries.\r\n\r\n-   `NPY_NTYPES` has been renamed to `NPY_NTYPES_LEGACY` as it does not\r\n    include new NumPy built-in DTypes. In particular the new string\r\n    DType will likely not work correctly with code that handles legacy\r\n    DTypes.\r\n\r\n    ([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n-   The C-API now only exports the static inline function versions of\r\n    the array accessors (previously this depended on using \\\"deprecated\r\n    API\\\"). While we discourage it, the struct fields can still be used\r\n    directly.\r\n\r\n    ([gh-25789](https://github.com/numpy/numpy/pull/25789))\r\n\r\n-   NumPy now defines `PyArray_Pack` to set an individual memory address.\r\n    Unlike `PyArray_SETITEM` this function is equivalent to setting an\r\n    individual array item and does not require a NumPy array input.\r\n\r\n    ([gh-25954](https://github.com/numpy/numpy/pull/25954))\r\n\r\n-   The `->f` slot has been removed from `PyArray_Descr`. If you use this slot,\r\n    replace accessing it with `PyDataType_GetArrFuncs` (see its documentation\r\n    and the `numpy-2-migration-guide`). In some cases using other functions\r\n    like `PyArray_GETITEM` may be an alternatives.\r\n\r\n-   `PyArray_GETITEM` and `PyArray_SETITEM` now require the import of\r\n    the NumPy API table to be used and are no longer defined in\r\n    `ndarraytypes.h`.\r\n\r\n    ([gh-25812](https://github.com/numpy/numpy/pull/25812))\r\n\r\n-   Due to runtime dependencies, the definition for functionality\r\n    accessing the dtype flags was moved from `numpy/ndarraytypes.h` and\r\n    is only available after including `numpy/ndarrayobject.h` as it\r\n    requires `import_array()`. This includes `PyDataType_FLAGCHK`,\r\n    `PyDataType_REFCHK` and `NPY_BEGIN_THREADS_DESCR`.\r\n\r\n-   The dtype flags on `PyArray_Descr` must now be accessed through the\r\n    `PyDataType_FLAGS` inline function to be compatible with both 1.x\r\n    and 2.x. This function is defined in `npy_2_compat.h` to allow\r\n    backporting. Most or all users should use `PyDataType_FLAGCHK` which\r\n    is available on 1.x and does not require backporting. Cython users\r\n    should use Cython 3. Otherwise access will go through Python unless\r\n    they use `PyDataType_FLAGCHK` instead.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Datetime functionality exposed in the C API and Cython bindings\r\n\r\nThe functions `NpyDatetime_ConvertDatetime64ToDatetimeStruct`,\r\n`NpyDatetime_ConvertDatetimeStructToDatetime64`,\r\n`NpyDatetime_ConvertPyDateTimeToDatetimeStruct`,\r\n`NpyDatetime_GetDatetimeISO8601StrLen`,\r\n`NpyDatetime_MakeISO8601Datetime`, and\r\n`NpyDatetime_ParseISO8601Datetime` have been added to the C API to\r\nfacilitate converting between strings, Python datetimes, and NumPy\r\ndatetimes in external libraries.\r\n\r\n([gh-21199](https://github.com/numpy/numpy/pull/21199))\r\n\r\n### Const correctness for the generalized ufunc C API\r\n\r\nThe NumPy C API\\'s functions for constructing generalized ufuncs\r\n(`PyUFunc_FromFuncAndData`, `PyUFunc_FromFuncAndDataAndSignature`,\r\n`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`) take `types` and\r\n`data` arguments that are not modified by NumPy\\'s internals. Like the\r\n`name` and `doc` arguments, third-party Python extension modules are\r\nlikely to supply these arguments from static constants. The `types` and\r\n`data` arguments are now const-correct: they are declared as\r\n`const char *types` and `void *const *data`, respectively. C code should\r\nnot be affected, but C++ code may be.\r\n\r\n([gh-23847](https://github.com/numpy/numpy/pull/23847))\r\n\r\n### Larger `NPY_MAXDIMS` and `NPY_MAXARGS`, `NPY_RAVEL_AXIS` introduced\r\n\r\n`NPY_MAXDIMS` is now 64, you may want to review its use. This is usually\r\nused in a stack allocation, where the increase should be safe. However,\r\nwe do encourage generally to remove any use of `NPY_MAXDIMS` and\r\n`NPY_MAXARGS` to eventually allow removing the constraint completely.\r\nFor the conversion helper and C-API functions mirroring Python ones such as\r\n`take`, `NPY_MAXDIMS` was used to mean `axis=None`. Such usage must be replaced\r\nwith `NPY_RAVEL_AXIS`. See also `migration_maxdims`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### `NPY_MAXARGS` not constant and `PyArrayMultiIterObject` size change\r\n\r\nSince `NPY_MAXARGS` was increased, it is now a runtime constant and not\r\ncompile-time constant anymore. We expect almost no users to notice this.\r\nBut if used for stack allocations it now must be replaced with a custom\r\nconstant using `NPY_MAXARGS` as an additional runtime check.\r\n\r\nThe `sizeof(PyArrayMultiIterObject)` no longer includes the full size of\r\nthe object. We expect nobody to notice this change. It was necessary to\r\navoid issues with Cython.\r\n\r\n([gh-25271](https://github.com/numpy/numpy/pull/25271))\r\n\r\n### Required changes for custom legacy user dtypes\r\n\r\nIn order to improve our DTypes it is unfortunately necessary to break\r\nthe ABI, which requires some changes for dtypes registered with\r\n`PyArray_RegisterDataType`. Please see the documentation of\r\n`PyArray_RegisterDataType` for how to adapt your code and achieve\r\ncompatibility with both 1.x and 2.x.\r\n\r\n([gh-25792](https://github.com/numpy/numpy/pull/25792))\r\n\r\n### New Public DType API\r\n\r\nThe C implementation of the NEP 42 DType API is now public. While the\r\nDType API has shipped in NumPy for a few versions, it was only usable in\r\nsessions with a special environment variable set. It is now possible to\r\nwrite custom DTypes outside of NumPy using the new DType API and the\r\nnormal `import_array()` mechanism for importing the numpy C API.\r\n\r\nSee `dtype-api` for more details about the API. As always with a new feature,\r\nplease report any bugs you run into implementing or using a new DType. It is\r\nlikely that downstream C code that works with dtypes will need to be updated to\r\nwork correctly with new DTypes.\r\n\r\n([gh-25754](https://github.com/numpy/numpy/pull/25754))\r\n\r\n### New C-API import functions\r\n\r\nWe have now added `PyArray_ImportNumPyAPI` and `PyUFunc_ImportUFuncAPI`\r\nas static inline functions to import the NumPy C-API tables. The new\r\nfunctions have two advantages over `import_array` and `import_ufunc`:\r\n\r\n-   They check whether the import was already performed and are\r\n    light-weight if not, allowing to add them judiciously (although this\r\n    is not preferable in most cases).\r\n-   The old mechanisms were macros rather than functions which included\r\n    a `return` statement.\r\n\r\nThe `PyArray_ImportNumPyAPI()` function is included in `npy_2_compat.h`\r\nfor simpler backporting.\r\n\r\n([gh-25866](https://github.com/numpy/numpy/pull/25866))\r\n\r\n### Structured dtype information access through functions\r\n\r\nThe dtype structures fields `c_metadata`, `names`, `fields`, and\r\n`subarray` must now be accessed through new functions following the same\r\nnames, such as `PyDataType_NAMES`. Direct access of the fields is not\r\nvalid as they do not exist for all `PyArray_Descr` instances. The\r\n`metadata` field is kept, but the macro version should also be\r\npreferred.\r\n\r\n([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n### Descriptor `elsize` and `alignment` access\r\n\r\nUnless compiling only with NumPy 2 support, the `elsize` and `aligment`\r\nfields must now be accessed via `PyDataType_ELSIZE`,\r\n`PyDataType_SET_ELSIZE`, and `PyDataType_ALIGNMENT`. In cases where the\r\ndescriptor is attached to an array, we advise using `PyArray_ITEMSIZE`\r\nas it exists on all NumPy versions. Please see\r\n`migration_c_descr` for more information.\r\n\r\n([gh-25943](https://github.com/numpy/numpy/pull/25943))\r\n\r\n## NumPy 2.0 C API removals\r\n\r\n-   `npy_interrupt.h` and the corresponding macros like `NPY_SIGINT_ON`\r\n    have been removed. We recommend querying `PyErr_CheckSignals()` or\r\n    `PyOS_InterruptOccurred()` periodically (these do currently require\r\n    holding the GIL though).\r\n\r\n-   The `noprefix.h` header has been removed. Replace missing symbols\r\n    with their prefixed counterparts (usually an added `NPY_` or\r\n    `npy_`).\r\n\r\n    ([gh-23919](https://github.com/numpy/numpy/pull/23919))\r\n\r\n-   `PyUFunc_GetPyVals`, `PyUFunc_handlefperr`, and `PyUFunc_checkfperr`\r\n    have been removed. If needed, a new backwards compatible function to\r\n    raise floating point errors could be restored. Reason for removal:\r\n    there are no known users and the functions would have made\r\n    `with np.errstate()` fixes much more difficult).\r\n\r\n    ([gh-23922](https://github.com/numpy/numpy/pull/23922))\r\n\r\n-   The `numpy/old_defines.h` which was part of the API deprecated since\r\n    NumPy 1.7 has been removed. This removes macros of the form\r\n    `PyArray_CONSTANT`. The\r\n    [replace_old_macros.sed](https://github.com/numpy/numpy/blob/main/tools/replace_old_macros.sed)\r\n    script may be useful to convert them to the `NPY_CONSTANT` version.\r\n\r\n    ([gh-24011](https://github.com/numpy/numpy/pull/24011))\r\n\r\n-   The `legacy_inner_loop_selector` member of the ufunc struct is\r\n    removed to simplify improvements to the dispatching system. There\r\n    are no known users overriding or directly accessing this member.\r\n\r\n    ([gh-24271](https://github.com/numpy/numpy/pull/24271))\r\n\r\n-   `NPY_INTPLTR` has been removed to avoid confusion (see `intp`\r\n    redefinition).\r\n\r\n    ([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n-   The advanced indexing `MapIter` and related API has been removed.\r\n    The (truly) public part of it was not well tested and had only one\r\n    known user (Theano). Making it private will simplify improvements to\r\n    speed up `ufunc.at`, make advanced indexing more maintainable, and\r\n    was important for increasing the maximum number of dimensions of\r\n    arrays to 64. Please let us know if this API is important to you so\r\n    we can find a solution together.\r\n\r\n    ([gh-25138](https://github.com/numpy/numpy/pull/25138))\r\n\r\n-   The `NPY_MAX_ELSIZE` macro has been removed, as it only ever\r\n    reflected builtin numeric types and served no internal purpose.\r\n\r\n    ([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n-   `PyArray_REFCNT` and `NPY_REFCOUNT` are removed. Use `Py_REFCNT`\r\n    instead.\r\n\r\n    ([gh-25156](https://github.com/numpy/numpy/pull/25156))\r\n\r\n-   `PyArrayFlags_Type` and `PyArray_NewFlagsObject` as well as\r\n    `PyArrayFlagsObject` are private now. There is no known use-case;\r\n    use the Python API if needed.\r\n\r\n-   `PyArray_MoveInto`, `PyArray_CastTo`, `PyArray_CastAnyTo` are\r\n    removed use `PyArray_CopyInto` and if absolutely needed\r\n    `PyArray_CopyAnyInto` (the latter does a flat copy).\r\n\r\n-   `PyArray_FillObjectArray` is removed, its only true use was for\r\n    implementing `np.empty`. Create a new empty array or use\r\n    `PyArray_FillWithScalar()` (decrefs existing objects).\r\n\r\n-   `PyArray_CompareUCS4` and `PyArray_CompareString` are removed. Use\r\n    the standard C string comparison functions.\r\n\r\n-   `PyArray_ISPYTHON` is removed as it is misleading, has no known\r\n    use-cases, and is easy to replace.\r\n\r\n-   `PyArray_FieldNames` is removed, as it is unclear what it would be\r\n    useful for. It also has incorrect semantics in some possible\r\n    use-cases.\r\n\r\n-   `PyArray_TypestrConvert` is removed, since it seems a misnomer and\r\n    unlikely to be used by anyone. If you know the size or are limited\r\n    to few types, just use it explicitly, otherwise go via Python\r\n    strings.\r\n\r\n    ([gh-25292](https://github.com/numpy/numpy/pull/25292))\r\n\r\n-   `PyDataType_GetDatetimeMetaData` is removed, it did not actually do\r\n    anything since at least NumPy 1.7.\r\n\r\n    ([gh-25802](https://github.com/numpy/numpy/pull/25802))\r\n\r\n-   `PyArray_GetCastFunc` is removed. Note that custom legacy user\r\n    dtypes can still provide a castfunc as their implementation, but any\r\n    access to them is now removed. The reason for this is that NumPy\r\n    never used these internally for many years. If you use simple\r\n    numeric types, please just use C casts directly. In case you require\r\n    an alternative, please let us know so we can create new API such as\r\n    `PyArray_CastBuffer()` which could use old or new cast functions\r\n    depending on the NumPy version.\r\n\r\n    ([gh-25161](https://github.com/numpy/numpy/pull/25161))\r\n\r\n## New Features\r\n\r\n### `np.add` was extended to work with `unicode` and `bytes` dtypes.\r\n\r\n> ([gh-24858](https://github.com/numpy/numpy/pull/24858))\r\n\r\n### A new `bitwise_count` function\r\n\r\nThis new function counts the number of 1-bits in a number.\r\n`numpy.bitwise_count` works on all the numpy integer types\r\nand integer-like objects.\r\n\r\n``` python\r\n>>> a = np.array([2**i - 1 for i in range(16)])\r\n>>> np.bitwise_count(a)\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15],\r\n      dtype=uint8)\r\n```\r\n\r\n([gh-19355](https://github.com/numpy/numpy/pull/19355))\r\n\r\n### macOS Accelerate support, including the ILP64\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, or if no explicit BLAS library selection is done, the 13.3+\r\nversion will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\nBinary wheels are also available. On macOS \\>=14.0, users who install\r\nNumPy from PyPI will get wheels built against Accelerate rather than\r\nOpenBLAS.\r\n\r\n([gh-25255](https://github.com/numpy/numpy/pull/25255))\r\n\r\n### Option to use weights for quantile and percentile functions\r\n\r\nA `weights` keyword is now available for `numpy.quantile`, `numpy.percentile`,\r\n`numpy.nanquantile` and `numpy.nanpercentile`. Only `method=\"inverted_cdf\"`\r\nsupports weights.\r\n\r\n([gh-24254](https://github.com/numpy/numpy/pull/24254))\r\n\r\n### Improved CPU optimization tracking\r\n\r\nA new tracer mechanism is available which enables tracking of the\r\nenabled targets for each optimized function (i.e., that uses\r\nhardware-specific SIMD instructions) in the NumPy library. With this\r\nenhancement, it becomes possible to precisely monitor the enabled CPU\r\ndispatch targets for the dispatched functions.\r\n\r\nA new function named `opt_func_info` has been added to the new namespace\r\n`numpy.lib.introspect`, offering this tracing capability.  This function allows\r\nyou to retrieve information about the enabled targets based on function names\r\nand data type signatures.\r\n\r\n([gh-24420](https://github.com/numpy/numpy/pull/24420))\r\n\r\n### A new Meson backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python \\>=3.12.\r\nFor older Python versions, `f2py` will still default to\r\n`--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other C interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in C and Fortran, not in\r\nPython and Fortran.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n### A new `strict` option for several testing functions\r\n\r\nThe `strict` keyword is now available for `numpy.testing.assert_allclose`,\r\n`numpy.testing.assert_equal`, and `numpy.testing.assert_array_less`. Setting\r\n`strict=True` will disable the broadcasting behaviour for scalars and ensure\r\nthat input arrays have the same data type.\r\n\r\n([gh-24680](https://github.com/numpy/numpy/pull/24680),\r\n[gh-24770](https://github.com/numpy/numpy/pull/24770),\r\n[gh-24775](https://github.com/numpy/numpy/pull/24775))\r\n\r\n### Add `np.core.umath.find` and `np.core.umath.rfind` UFuncs\r\n\r\nAdd two `find` and `rfind` UFuncs that operate on unicode or byte\r\nstrings and are used in `np.char`. They operate similar to `str.find`\r\nand `str.rfind`.\r\n\r\n([gh-24868](https://github.com/numpy/numpy/pull/24868))\r\n\r\n### `diagonal` and `trace` for `numpy.linalg`\r\n\r\n`numpy.linalg.diagonal` and `numpy.linalg.trace` have been added, which are\r\narray API standard-compatible variants of `numpy.diagonal` and `numpy.trace`.\r\nThey differ in the default axis selection which define 2-D sub-arrays.\r\n\r\n([gh-24887](https://github.com/numpy/numpy/pull/24887))\r\n\r\n### New `long` and `ulong` dtypes\r\n\r\n`numpy.long` and `numpy.ulong` have been added as NumPy integers mapping to\r\nC\\'s `long` and `unsigned long`. Prior to NumPy 1.24, `numpy.long` was an alias\r\nto Python\\'s `int`.\r\n\r\n([gh-24922](https://github.com/numpy/numpy/pull/24922))\r\n\r\n### `svdvals` for `numpy.linalg`\r\n\r\n`numpy.linalg.svdvals` has been added. It computes singular values for (a stack\r\nof) matrices. Executing `np.svdvals(x)` is the same as calling `np.svd(x,\r\ncompute_uv=False, hermitian=False)`. This function is compatible with the array\r\nAPI standard.\r\n\r\n([gh-24940](https://github.com/numpy/numpy/pull/24940))\r\n\r\n### A new `isdtype` function\r\n\r\n`numpy.isdtype` was added to provide a canonical way to classify NumPy\\'s\r\ndtypes in compliance with the array API standard.\r\n\r\n([gh-25054](https://github.com/numpy/numpy/pull/25054))\r\n\r\n### A new `astype` function\r\n\r\n`numpy.astype` was added to provide an array API standard-compatible\r\nalternative to the `numpy.ndarray.astype` method.\r\n\r\n([gh-25079](https://github.com/numpy/numpy/pull/25079))\r\n\r\n### Array API compatible functions\\' aliases\r\n\r\n13 aliases for existing functions were added to improve compatibility\r\nwith the array API standard:\r\n\r\n-   Trigonometry: `acos`, `acosh`, `asin`, `asinh`, `atan`, `atanh`,\r\n    `atan2`.\r\n-   Bitwise: `bitwise_left_shift`, `bitwise_invert`,\r\n    `bitwise_right_shift`.\r\n-   Misc: `concat`, `permute_dims`, `pow`.\r\n-   In `numpy.linalg`: `tensordot`, `matmul`.\r\n\r\n([gh-25086](https://github.com/numpy/numpy/pull/25086))\r\n\r\n### New `unique_*` functions\r\n\r\nThe `numpy.unique_all`, `numpy.unique_counts`, `numpy.unique_inverse`, and\r\n`numpy.unique_values` functions have been added. They provide functionality of\r\n`numpy.unique` with different sets of flags. They are array API\r\nstandard-compatible, and because the number of arrays they return does not\r\ndepend on the values of input arguments, they are easier to target for JIT\r\ncompilation.\r\n\r\n([gh-25088](https://github.com/numpy/numpy/pull/25088))\r\n\r\n### Matrix transpose support for ndarrays\r\n\r\nNumPy now offers support for calculating the matrix transpose of an\r\narray (or stack of arrays). The matrix transpose is equivalent to\r\nswapping the last two axes of an array. Both `np.ndarray` and\r\n`np.ma.MaskedArray` now expose a `.mT` attribute, and there is a\r\nmatching new `numpy.matrix_transpose` function.\r\n\r\n([gh-23762](https://github.com/numpy/numpy/pull/23762))\r\n\r\n### Array API compatible functions for `numpy.linalg`\r\n\r\nSix new functions and two aliases were added to improve compatibility\r\nwith the Array API standard for \\`numpy.linalg\\`:\r\n\r\n-   `numpy.linalg.matrix_norm` - Computes the matrix norm of\r\n    a matrix (or a stack of matrices).\r\n\r\n-   `numpy.linalg.vector_norm` - Computes the vector norm of\r\n    a vector (or batch of vectors).\r\n\r\n-   `numpy.vecdot` - Computes the (vector) dot product of\r\n    two arrays.\r\n\r\n-   `numpy.linalg.vecdot` - An alias for\r\n    `numpy.vecdot`.\r\n\r\n-   `numpy.linalg.matrix_transpose` - An alias for\r\n    `numpy.matrix_transpose`.\r\n\r\n    ([gh-25155](https://github.com/numpy/numpy/pull/25155))\r\n\r\n-   `numpy.linalg.outer` has been added. It computes the\r\n    outer product of two vectors. It differs from\r\n    `numpy.outer` by accepting one-dimensional arrays only.\r\n    This function is compatible with the array API standard.\r\n\r\n    ([gh-25101](https://github.com/numpy/numpy/pull/25101))\r\n\r\n-   `numpy.linalg.cross` has been added. It computes the\r\n    cross product of two (arrays of) 3-dimensional vectors. It differs\r\n    from `numpy.cross` by accepting three-dimensional\r\n    vectors only. This function is compatible with the array API\r\n    standard.\r\n\r\n    ([gh-25145](https://github.com/numpy/numpy/pull/25145))\r\n\r\n### A `correction` argument for `var` and `std`\r\n\r\nA `correction` argument was added to `numpy.var` and `numpy.std`, which is an\r\narray API standard compatible alternative to `ddof`. As both arguments serve a\r\nsimilar purpose, only one of them can be provided at the same time.\r\n\r\n([gh-25169](https://github.com/numpy/numpy/pull/25169))\r\n\r\n### `ndarray.device` and `ndarray.to_device`\r\n\r\nAn `ndarray.device` attribute and `ndarray.to_device` method were added\r\nto `numpy.ndarray` for array API standard compatibility.\r\n\r\nAdditionally, `device` keyword-only arguments were added to:\r\n`numpy.asarray`, `numpy.arange`, `numpy.empty`, `numpy.empty_like`,\r\n`numpy.eye`, `numpy.full`, `numpy.full_like`, `numpy.linspace`, `numpy.ones`,\r\n`numpy.ones_like`, `numpy.zeros`, and `numpy.zeros_like`.\r\n\r\nFor all these new arguments, only `device=\"cpu\"` is supported.\r\n\r\n([gh-25233](https://github.com/numpy/numpy/pull/25233))\r\n\r\n### StringDType has been added to NumPy\r\n\r\nWe have added a new variable-width UTF-8 encoded string data type, implementing\r\na \\\"NumPy array of Python strings\\\", including support for a user-provided\r\nmissing data sentinel. It is intended as a drop-in replacement for arrays of\r\nPython strings and missing data sentinels using the object dtype. See \r\n[NEP 55](https://numpy.org/neps/nep-0055-string_dtype.html) and the documentation\r\nof stringdtype for more details.\r\n\r\n([gh-25347](https://github.com/numpy/numpy/pull/25347))\r\n\r\n### New keywords for `cholesky` and `pinv`\r\n\r\nThe `upper` and `rtol` keywords were added to\r\n`numpy.linalg.cholesky` and `numpy.linalg.pinv`,\r\nrespectively, to improve array API standard compatibility.\r\n\r\nFor `numpy.linalg.pinv`, if neither `rcond` nor `rtol` is\r\nspecified, the `rcond`\\'s default is used. We plan to deprecate and\r\nremove `rcond` in the future.\r\n\r\n([gh-25388](https://github.com/numpy/numpy/pull/25388))\r\n\r\n### New keywords for `sort`, `argsort` and `linalg.matrix_rank`\r\n\r\nNew keyword parameters were added to improve array API standard\r\ncompatibility:\r\n\r\n-   `rtol` was added to `numpy.linalg.matrix_rank`.\r\n-   `stable` was added to `numpy.sort` and\r\n    `numpy.argsort`.\r\n\r\n([gh-25437](https://github.com/numpy/numpy/pull/25437))\r\n\r\n### New `numpy.strings` namespace for string ufuncs\r\n\r\nNumPy now implements some string operations as ufuncs. The old `np.char`\r\nnamespace is still available, and where possible the string manipulation\r\nfunctions in that namespace have been updated to use the new ufuncs,\r\nsubstantially improving their performance.\r\n\r\nWhere possible, we suggest updating code to use functions in\r\n`np.strings` instead of `np.char`. In the future we may deprecate\r\n`np.char` in favor of `np.strings`.\r\n\r\n([gh-25463](https://github.com/numpy/numpy/pull/25463))\r\n\r\n### `numpy.fft` support for different precisions and in-place calculations\r\n\r\nThe various FFT routines in `numpy.fft` now do their\r\ncalculations natively in float, double, or long double precision,\r\ndepending on the input precision, instead of always calculating in\r\ndouble precision. Hence, the calculation will now be less precise for\r\nsingle and more precise for long double precision. The data type of the\r\noutput array will now be adjusted accordingly.\r\n\r\nFurthermore, all FFT routines have gained an `out` argument that can be\r\nused for in-place calculations.\r\n\r\n([gh-25536](https://github.com/numpy/numpy/pull/25536))\r\n\r\n### configtool and pkg-config support\r\n\r\nA new `numpy-config` CLI script is available that can be queried for the\r\nNumPy version and for compile flags needed to use the NumPy C API. This\r\nwill allow build systems to better support the use of NumPy as a\r\ndependency. Also, a `numpy.pc` pkg-config file is now included with\r\nNumpy. In order to find its location for use with `PKG_CONFIG_PATH`, use\r\n`numpy-config --pkgconfigdir`.\r\n\r\n([gh-25730](https://github.com/numpy/numpy/pull/25730))\r\n\r\n### Array API standard support in the main namespace\r\n\r\nThe main `numpy` namespace now supports the array API standard. See\r\n`array-api-standard-compatibility` for\r\ndetails.\r\n\r\n([gh-25911](https://github.com/numpy/numpy/pull/25911))\r\n\r\n## Improvements\r\n\r\n### Strings are now supported by `any`, `all`, and the logical ufuncs.\r\n\r\n> ([gh-25651](https://github.com/numpy/numpy/pull/25651))\r\n\r\n### Integer sequences as the shape argument for `memmap`\r\n\r\n`numpy.memmap` can now be created with any integer sequence\r\nas the `shape` argument, such as a list or numpy array of integers.\r\nPreviously, only the types of tuple and int could be used without\r\nraising an error.\r\n\r\n([gh-23729](https://github.com/numpy/numpy/pull/23729))\r\n\r\n### `errstate` is now faster and context safe\r\n\r\nThe `numpy.errstate` context manager/decorator is now faster\r\nand safer. Previously, it was not context safe and had (rare) issues\r\nwith thread-safety.\r\n\r\n([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n### AArch64 quicksort speed improved by using Highway\\'s VQSort\r\n\r\nThe first introduction of the Google Highway library, using VQSort on\r\nAArch64. Execution time is improved by up to 16x in some cases, see the\r\nPR for benchmark results. Extensions to other platforms will be done in\r\nthe future.\r\n\r\n([gh-24018](https://github.com/numpy/numpy/pull/24018))\r\n\r\n### Complex types - underlying C type changes\r\n\r\n-   The underlying C types for all of NumPy\\'s complex types have been\r\n    changed to use C99 complex types.\r\n\r\n-   While this change does not affect the memory layout of complex\r\n    types, it changes the API to be used to directly retrieve or write\r\n    the real or complex part of the complex number, since direct field\r\n    access (as in `c.real` or `c.imag`) is no longer an option. You can\r\n    now use utilities provided in `numpy/npy_math.h` to do these\r\n    operations, like this:\r\n\r\n    ``` c\r\n    npy_cdouble c;\r\n    npy_csetreal(&c, 1.0);\r\n    npy_csetimag(&c, 0.0);\r\n    printf(\"%d + %di\\n\", npy_creal(c), npy_cimag(c));\r\n    ```\r\n\r\n-   To ease cross-version compatibility, equivalent macros and a\r\n    compatibility layer have been added which can be used by downstream\r\n    packages to continue to support both NumPy 1.x and 2.x. See\r\n    `complex-numbers` for more info.\r\n\r\n-   `numpy/npy_common.h` now includes `complex.h`, which means that\r\n    `complex` is now a reserved keyword.\r\n\r\n([gh-24085](https://github.com/numpy/numpy/pull/24085))\r\n\r\n### `iso_c_binding` support and improved common blocks for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n`f2py` now handles `common` blocks which have `kind` specifications from\r\nmodules. This further expands the usability of intrinsics like\r\n`iso_fortran_env` and `iso_c_binding`.\r\n\r\n([gh-25186](https://github.com/numpy/numpy/pull/25186))\r\n\r\n### Call `str` automatically on third argument to functions like `assert_equal`\r\n\r\nThe third argument to functions like\r\n`numpy.testing.assert_equal` now has `str` called on it\r\nautomatically. This way it mimics the built-in `assert` statement, where\r\n`assert_equal(a, b, obj)` works like `assert a == b, obj`.\r\n\r\n([gh-24877](https://github.com/numpy/numpy/pull/24877))\r\n\r\n### Support for array-like `atol`/`rtol` in `isclose`, `allclose`\r\n\r\nThe keywords `atol` and `rtol` in `numpy.isclose` and\r\n`numpy.allclose` now accept both scalars and arrays. An\r\narray, if given, must broadcast to the shapes of the first two array\r\narguments.\r\n\r\n([gh-24878](https://github.com/numpy/numpy/pull/24878))\r\n\r\n### Consistent failure messages in test functions\r\n\r\nPreviously, some `numpy.testing` assertions printed messages\r\nthat referred to the actual and desired results as `x` and `y`. Now,\r\nthese values are consistently referred to as `ACTUAL` and `DESIRED`.\r\n\r\n([gh-24931](https://github.com/numpy/numpy/pull/24931))\r\n\r\n### n-D FFT transforms allow `s[i] == -1`\r\n\r\nThe `numpy.fft.fftn`, `numpy.fft.ifftn`,\r\n`numpy.fft.rfftn`, `numpy.fft.irfftn`,\r\n`numpy.fft.fft2`, `numpy.fft.ifft2`,\r\n`numpy.fft.rfft2` and `numpy.fft.irfft2`\r\nfunctions now use the whole input array along the axis `i` if\r\n`s[i] == -1`, in line with the array API standard.\r\n\r\n([gh-25495](https://github.com/numpy/numpy/pull/25495))\r\n\r\n### Guard PyArrayScalar_VAL and PyUnicodeScalarObject for the limited API\r\n\r\n`PyUnicodeScalarObject` holds a `PyUnicodeObject`, which is not\r\navailable when using `Py_LIMITED_API`. Add guards to hide it and\r\nconsequently also make the `PyArrayScalar_VAL` macro hidden.\r\n\r\n([gh-25531](https://github.com/numpy/numpy/pull/25531))\r\n\r\n## Changes\r\n\r\n-   `np.gradient()` now returns a tuple rather than a list making the\r\n    return value immutable.\r\n\r\n    ([gh-23861](https://github.com/numpy/numpy/pull/23861))\r\n\r\n-   Being fully context and thread-safe, `np.errstate` can only be\r\n    entered once now.\r\n\r\n-   `np.setbufsize` is now tied to `np.errstate()`: leaving an\r\n    `np.errstate` context will also reset the `bufsize`.\r\n\r\n    ([gh-23936](https://github.com/numpy/numpy/pull/23936))\r\n\r\n-   A new public `np.lib.array_utils` submodule has been introduced and\r\n    it currently contains three functions: `byte_bounds` (moved from\r\n    `np.lib.utils`), `normalize_axis_tuple` and `normalize_axis_index`.\r\n\r\n    ([gh-24540](https://github.com/numpy/numpy/pull/24540))\r\n\r\n-   Introduce `numpy.bool` as the new canonical name for\r\n    NumPy\\'s boolean dtype, and make `numpy.bool\\_` an alias\r\n    to it. Note that until NumPy 1.24, `np.bool` was an alias to\r\n    Python\\'s builtin `bool`. The new name helps with array API standard\r\n    compatibility and is a more intuitive name.\r\n\r\n    ([gh-25080](https://github.com/numpy/numpy/pull/25080))\r\n\r\n-   The `dtype.flags` value was previously stored as a signed integer.\r\n    This means that the aligned dtype struct flag lead to negative flags\r\n    being set (-128 rather than 128). This flag is now stored unsigned\r\n    (positive). Code which checks flags manually may need to adapt. This\r\n    may include code compiled with Cython 0.29.x.\r\n\r\n    ([gh-25816](https://github.com/numpy/numpy/pull/25816))\r\n\r\n### Representation of NumPy scalars changed\r\n\r\nAs per NEP 51, the scalar representation has been updated to include the type\r\ninformation to avoid confusion with Python scalars.\r\n\r\nScalars are now printed as `np.float64(3.0)` rather than just `3.0`.\r\nThis may disrupt workflows that store representations of numbers (e.g.,\r\nto files) making it harder to read them. They should be stored as\r\nexplicit strings, for example by using `str()` or `f\"{scalar!s}\"`. For\r\nthe time being, affected users can use\r\n`np.set_printoptions(legacy=\"1.25\")` to get the old behavior (with\r\npossibly a few exceptions). Documentation of downstream projects may\r\nrequire larger updates, if code snippets are tested. We are working on\r\ntooling for\r\n[doctest-plus](https://github.com/scientific-python/pytest-doctestplus/issues/107)\r\nto facilitate updates.\r\n\r\n([gh-22449](https://github.com/numpy/numpy/pull/22449))\r\n\r\n### Truthiness of NumPy strings changed\r\n\r\nNumPy strings previously were inconsistent about how they defined if the\r\nstring is `True` or `False` and the definition did not match the one\r\nused by Python. Strings are now considered `True` when they are\r\nnon-empty and `False` when they are empty. This changes the following\r\ndistinct cases:\r\n\r\n-   Casts from string to boolean were previously roughly equivalent to\r\n    `string_array.astype(np.int64).astype(bool)`, meaning that only\r\n    valid integers could be cast. Now a string of `\"0\"` will be\r\n    considered `True` since it is not empty. If you need the old\r\n    behavior, you may use the above step (casting to integer first) or\r\n    `string_array == \"0\"` (if the input is only ever `0` or `1`). To get\r\n    the new result on old NumPy versions use `string_array != \"\"`.\r\n-   `np.nonzero(string_array)` previously ignored whitespace so that a\r\n    string only containing whitespace was considered `False`. Whitespace\r\n    is now considered `True`.\r\n\r\nThis change does not affect `np.loadtxt`, `np.fromstring`, or\r\n`np.genfromtxt`. The first two still use the integer definition, while\r\n`genfromtxt` continues to match for `\"true\"` (ignoring case). However,\r\nif `np.bool_` is used as a converter the result will change.\r\n\r\nThe change does affect `np.fromregex` as it uses direct assignments.\r\n\r\n([gh-23871](https://github.com/numpy/numpy/pull/23871))\r\n\r\n### A `mean` keyword was added to var and std function\r\n\r\nOften when the standard deviation is needed the mean is also needed. The\r\nsame holds for the variance and the mean. Until now the mean is then\r\ncalculated twice, the change introduced here for the `numpy.var` and\r\n`numpy.std` functions allows for passing in a precalculated mean as an keyword\r\nargument. See the docstrings for details and an example illustrating the\r\nspeed-up.\r\n\r\n([gh-24126](https://github.com/numpy/numpy/pull/24126))\r\n\r\n### Remove datetime64 deprecation warning when constructing with timezone\r\n\r\nThe `numpy.datetime64` method now issues a UserWarning rather than a\r\nDeprecationWarning whenever a timezone is included in the datetime string that\r\nis provided.\r\n\r\n([gh-24193](https://github.com/numpy/numpy/pull/24193))\r\n\r\n### Default integer dtype is now 64-bit on 64-bit Windows\r\n\r\nThe default NumPy integer is now 64-bit on all 64-bit systems as the\r\nhistoric 32-bit default on Windows was a common source of issues. Most\r\nusers should not notice this. The main issues may occur with code\r\ninterfacing with libraries written in a compiled language like C. For\r\nmore information see `migration_windows_int64`.\r\n\r\n([gh-24224](https://github.com/numpy/numpy/pull/24224))\r\n\r\n### Renamed `numpy.core` to `numpy._core`\r\n\r\nAccessing `numpy.core` now emits a DeprecationWarning. In practice we\r\nhave found that most downstream usage of `numpy.core` was to access\r\nfunctionality that is available in the main `numpy` namespace. If for\r\nsome reason you are using functionality in `numpy.core` that is not\r\navailable in the main `numpy` namespace, this means you are likely using\r\nprivate NumPy internals. You can still access these internals via\r\n`numpy._core` without a deprecation warning but we do not provide any\r\nbackward compatibility guarantees for NumPy internals. Please open an\r\nissue if you think a mistake was made and something needs to be made\r\npublic.\r\n\r\n([gh-24634](https://github.com/numpy/numpy/pull/24634))\r\n\r\nThe \\\"relaxed strides\\\" debug build option, which was previously enabled\r\nthrough the `NPY_RELAXED_STRIDES_DEBUG` environment variable or the\r\n`-Drelaxed-strides-debug` config-settings flag has been removed.\r\n\r\n([gh-24717](https://github.com/numpy/numpy/pull/24717))\r\n\r\n### Redefinition of `np.intp`/`np.uintp` (almost never a change)\r\n\r\nDue to the actual use of these types almost always matching the use of\r\n`size_t`/`Py_ssize_t` this is now the definition in C. Previously, it\r\nmatched `intptr_t` and `uintptr_t` which would often have been subtly\r\nincorrect. This has no effect on the vast majority of machines since the\r\nsize of these types only differ on extremely niche platforms.\r\n\r\nHowever, it means that:\r\n\r\n-   Pointers may not necessarily fit into an `intp` typed array anymore.\r\n    The `p` and `P` character codes can still be used, however.\r\n-   Creating `intptr_t` or `uintptr_t` typed arrays in C remains\r\n    possible in a cross-platform way via `PyArray_DescrFromType('p')`.\r\n-   The new character codes `nN` were introduced.\r\n-   It is now correct to use the Python C-API functions when parsing to\r\n    `npy_intp` typed arguments.\r\n\r\n([gh-24888](https://github.com/numpy/numpy/pull/24888))\r\n\r\n### `numpy.fft.helper` made private\r\n\r\n`numpy.fft.helper` was renamed to `numpy.fft._helper` to indicate that\r\nit is a private submodule. All public functions exported by it should be\r\naccessed from `numpy.fft`.\r\n\r\n([gh-24945](https://github.com/numpy/numpy/pull/24945))\r\n\r\n### `numpy.linalg.linalg` made private\r\n\r\n`numpy.linalg.linalg` was renamed to `numpy.linalg._linalg` to indicate\r\nthat it is a private submodule. All public functions exported by it\r\nshould be accessed from `numpy.linalg`.\r\n\r\n([gh-24946](https://github.com/numpy/numpy/pull/24946))\r\n\r\n### Out-of-bound axis not the same as `axis=None`\r\n\r\nIn some cases `axis=32` or for concatenate any large value was the same\r\nas `axis=None`. Except for `concatenate` this was deprecate. Any out of\r\nbound axis value will now error, make sure to use `axis=None`.\r\n\r\n([gh-25149](https://github.com/numpy/numpy/pull/25149))\r\n\r\n### New `copy` keyword meaning for `array` and `asarray` constructors\r\n\r\nNow `numpy.array` and `numpy.asarray` support\r\nthree values for `copy` parameter:\r\n\r\n-   `None` - A copy will only be made if it is necessary.\r\n-   `True` - Always make a copy.\r\n-   `False` - Never make a copy. If a copy is required a `ValueError` is\r\n    raised.\r\n\r\nThe meaning of `False` changed as it now raises an exception if a copy\r\nis needed.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### The `__array__` special method now takes a `copy` keyword argument.\r\n\r\nNumPy will pass `copy` to the `__array__` special method in situations\r\nwhere it would be set to a non-default value (e.g. in a call to\r\n`np.asarray(some_object, copy=False)`). Currently, if an unexpected\r\nkeyword argument error is raised after this, NumPy will print a warning\r\nand re-try without the `copy` keyword argument. Implementations of\r\nobjects implementing the `__array__` protocol should accept a `copy`\r\nkeyword argument with the same meaning as when passed to\r\n`numpy.array` or `numpy.asarray`.\r\n\r\n([gh-25168](https://github.com/numpy/numpy/pull/25168))\r\n\r\n### Cleanup of initialization of `numpy.dtype` with strings with commas\r\n\r\nThe interpretation of strings with commas is changed slightly, in that a\r\ntrailing comma will now always create a structured dtype. E.g., where\r\npreviously `np.dtype(\"i\")` and `np.dtype(\"i,\")` were treated as\r\nidentical, now `np.dtype(\"i,\")` will create a structured dtype, with a\r\nsingle field. This is analogous to `np.dtype(\"i,i\")` creating a\r\nstructured dtype with two fields, and makes the behaviour consistent\r\nwith that expected of tuples.\r\n\r\nAt the same time, the use of single number surrounded by parenthesis to\r\nindicate a sub-array shape, like in `np.dtype(\"(2)i,\")`, is deprecated.\r\nInstead; one should use `np.dtype(\"(2,)i\")` or `np.dtype(\"2i\")`.\r\nEventually, using a number in parentheses will raise an exception, like\r\nis the case for initializations without a comma, like\r\n`np.dtype(\"(2)i\")`.\r\n\r\n([gh-25434](https://github.com/numpy/numpy/pull/25434))\r\n\r\n### Change in how complex sign is calculated\r\n\r\nFollowing the array API standard, the complex sign is now calculated as\r\n`z / |z|` (instead of the rather less logical case where the sign of the\r\nreal part was taken, unless the real part was zero, in which case the\r\nsign of the imaginary part was returned). Like for real numbers, zero is\r\nreturned if `z==0`.\r\n\r\n([gh-25441](https://github.com/numpy/numpy/pull/25441))\r\n\r\n### Return types of functions that returned a list of arrays\r\n\r\nFunctions that returned a list of ndarrays have been changed to return a\r\ntuple of ndarrays instead. Returning tuples consistently whenever a\r\nsequence of arrays is returned makes it easier for JIT compilers like\r\nNumba, as well as for static type checkers in some cases, to support\r\nthese functions. Changed functions are: `numpy.atleast_1d`, `numpy.atleast_2d`,\r\n`numpy.atleast_3d`, `numpy.broadcast_arrays`, `numpy.meshgrid`,\r\n`numpy.ogrid`, `numpy.histogramdd`.\r\n\r\n### `np.unique` `return_inverse` shape for multi-dimensional inputs\r\n\r\nWhen multi-dimensional inputs are passed to `np.unique` with\r\n`return_inverse=True`, the `unique_inverse` output is now shaped such\r\nthat the input can be reconstructed directly using\r\n`np.take(unique, unique_inverse)` when `axis=None`, and\r\n`np.take_along_axis(unique, unique_inverse, axis=axis)` otherwise.\r\n\r\n([gh-25553](https://github.com/numpy/numpy/pull/24126),\r\n[gh-25570](https://github.com/numpy/numpy/pull/25570))\r\n\r\n### `any` and `all` return booleans for object arrays\r\n\r\nThe `any` and `all` functions and methods now return booleans also for\r\nobject arrays. Previously, they did a reduction which behaved like the\r\nPython `or` and `and` operators which evaluates to one of the arguments.\r\nYou can use `np.logical_or.reduce` and `np.logical_and.reduce` to\r\nachieve the previous behavior.\r\n\r\n([gh-25712](https://github.com/numpy/numpy/pull/25712))\r\n\r\n**Content from release note snippets in doc/release/upcoming_changes:**\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    b2f97f907cc640f5f619ea4ebd1231d3  numpy-2.0.0b1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    db158043b6fad6e523e23b3eb2de5d88  numpy-2.0.0b1-cp310-cp310-macosx_11_0_arm64.whl\r\n    39086961c062d97c5b42da057b9b1947  numpy-2.0.0b1-cp310-cp310-macosx_14_0_arm64.whl\r\n    3362d35bf69b852b98b41b8373253a0f  numpy-2.0.0b1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    66e907969e32ec43e887cabcc1884763  numpy-2.0.0b1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    b8d1bece144e3b6aae641d44821f815f  numpy-2.0.0b1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    96ab156ec312bb451e8c5e19de4a28b7  numpy-2.0.0b1-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    c04819a4f3395b81d124ffc6330925e9  numpy-2.0.0b1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    6af68b8eb8fe583ffabab9bd7da1c620  numpy-2.0.0b1-cp310-cp310-win32.whl\r\n    3b8a9514e5795985bcba20e213d55b54  numpy-2.0.0b1-cp310-cp310-win_amd64.whl\r\n    0128ad9249f70d97a057a23e0cef1515  numpy-2.0.0b1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    612c018a7676ce3747cb863762750e1d  numpy-2.0.0b1-cp311-cp311-macosx_11_0_arm64.whl\r\n    6b1480446aff53c71c903fc1248bca94  numpy-2.0.0b1-cp311-cp311-macosx_14_0_arm64.whl\r\n    8d66a0af99edf30dc9de487b3f8c1639  numpy-2.0.0b1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    f9154a0885b2647d7e81f32900390ebb  numpy-2.0.0b1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9dd14e2b594a2d47eb25ecc759d5adaa  numpy-2.0.0b1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8434d07fc4eb80c5df9ae5ebf95546eb  numpy-2.0.0b1-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    a0402697c93a9d6bc8d979fabd6bf179  numpy-2.0.0b1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    2ba67ffb4b92b54394b6929b3a899cb2  numpy-2.0.0b1-cp311-cp311-win32.whl\r\n    d75e2f02c698e492b7b07f0659f9bbe4  numpy-2.0.0b1-cp311-cp311-win_amd64.whl\r\n    558fefd135de6fcebe2b94d857a84c32  numpy-2.0.0b1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    d684790e4509e7daa99a1aef1d0be536  numpy-2.0.0b1-cp312-cp312-macosx_11_0_arm64.whl\r\n    fd5d4f1d1da0cc685c54e9abd2f9dceb  numpy-2.0.0b1-cp312-cp312-macosx_14_0_arm64.whl\r\n    65183c1302348d3db60eaf3b62c1e577  numpy-2.0.0b1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    305eaf68e214011557303988f4635271  numpy-2.0.0b1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e3a84e27effd888cf93eb2c1aad759e7  numpy-2.0.0b1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    88eef47ecdd11ac0939291abe0c74b6f  numpy-2.0.0b1-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    fd390078c0046c20a659035c1826185f  numpy-2.0.0b1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    23db11989d2d0086ff12655355245a2a  numpy-2.0.0b1-cp312-cp312-win32.whl\r\n    323d05ef29a9c8166d865ab221faf7dc  numpy-2.0.0b1-cp312-cp312-win_amd64.whl\r\n    f5ad7adf599b65050ccd116802f0265d  numpy-2.0.0b1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    89a94dddb18e4210e01ee6ca24012fcb  numpy-2.0.0b1-cp39-cp39-macosx_11_0_arm64.whl\r\n    409a537dc5ea249b3e6868dd37932342  numpy-2.0.0b1-cp39-cp39-macosx_14_0_arm64.whl\r\n    0db893de846425d58b90f05c1db3d191  numpy-2.0.0b1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    c73ba41d166a5f2e72cdc48b8554c6e6  numpy-2.0.0b1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    786236fc9099283255133273535b8de0  numpy-2.0.0b1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f2e8717957a6b3b37f881e8939a2af37  numpy-2.0.0b1-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    dad671b45f6e13c28ead06064b03eaee  numpy-2.0.0b1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    76f8f89ff91d06df684cf47d7ea6d8ab  numpy-2.0.0b1-cp39-cp39-win32.whl\r\n    d4dcbd6157783aa0e78710549f13876f  numpy-2.0.0b1-cp39-cp39-win_amd64.whl\r\n    41a13de3afff77390b0d1ea3c7e407db  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    fc2ff82233376f853161c7f9bc6d44b7  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_14_0_arm64.whl\r\n    860609ee9f1f24d4f28fbbcf3d31cdc9  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    2a97175cec7a5b1280ed2a991fea23ff  numpy-2.0.0b1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1656013175e650e053c15fd886be58f1  numpy-2.0.0b1-pp39-pypy39_pp73-win_amd64.whl\r\n    c06e95d7cadfa33a1f4549c9a5dcba05  numpy-2.0.0b1.tar.gz\r\n\r\n### SHA256\r\n\r\n    411ed8eb48eb679fc732f22e90c9adb994ec6ad2d9c2f53593325a975f9fa501  numpy-2.0.0b1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    f8aca0561166702070ea9abcafd70da44df48be70d16f0a886e359127436fdcc  numpy-2.0.0b1-cp310-cp310-macosx_11_0_arm64.whl\r\n    0d217dae0f20a3400c1d80aa8401af9de93b9bb4ea7518b8ba200ff8ff62529e  numpy-2.0.0b1-cp310-cp310-macosx_14_0_arm64.whl\r\n    824351cb4cce66c1f8e16c1698c01de8d5e4197461f78197c327281f107fc1b2  numpy-2.0.0b1-cp310-cp310-macosx_14_0_x86_64.whl\r\n    cae0959a4f5a9c16896a87a43c9e81384f48b69f835f55050948071488820486  numpy-2.0.0b1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3d47a42c1e48e46dbbe32e0395f8aa6e8ddd251771ed9ec47fc07aa89b8aac89  numpy-2.0.0b1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    909024f923c019d1b9dca16871844f1c313c422bd430a0b7e4a24a3acb766483  numpy-2.0.0b1-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    fc6e82bea99727aeed964808f26bed95323825a75e94c015eb913fb6ec3dbdf8  numpy-2.0.0b1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    36862cad55650afbcb3f0e3a5edc07ba4c1090eb649208a41fadcf82cf1b2966  numpy-2.0.0b1-cp310-cp310-win32.whl\r\n    0e6a63c725143a6be0e48effcf01b8361b80ab20e2444704356f9d9db48ba429  numpy-2.0.0b1-cp310-cp310-win_amd64.whl\r\n    e6c3ba4bcb6cf3fd4ace244075fa214b4f0c090f12437378200a2de68144c166  numpy-2.0.0b1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    89bbb14534e53c6175aabc8449a8bdf83f02da62f13d1b5facbb2fd1fecae2e2  numpy-2.0.0b1-cp311-cp311-macosx_11_0_arm64.whl\r\n    b14b6e6ca51afdcfc589cb9d6fb73aedf38009a1a0ecab15f77e3d0e0754cac0  numpy-2.0.0b1-cp311-cp311-macosx_14_0_arm64.whl\r\n    ffef68423c1edc5d10321f9787fb9d8c20a36fc08ffdba863d103924d02dadce  numpy-2.0.0b1-cp311-cp311-macosx_14_0_x86_64.whl\r\n    7e8725313b8a8aaa9cfac450713b1a74a8d79ae010ee0d0dd97505abf54d247b  numpy-2.0.0b1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d83e18f1c4164dbcaa01adc8f4a3aebc3c5fa635d2009d8dc1bf53dd7eab0063  numpy-2.0.0b1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    91e37a5bb38c11bde547aefeb79dd382b5d9d1d140931927bca46c9d198e08f3  numpy-2.0.0b1-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    d39f1005a627c5960f67b02c1f76f265e0d4219b6d7948a7809dc14443fcbeb6  numpy-2.0.0b1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    3ed4afbcdb8db622b90ef33bf0c0d080f287ec590032f9033be5cbc51e005b66  numpy-2.0.0b1-cp311-cp311-win32.whl\r\n    941382abe21d26222310275a91f053386450b5364f1307641d03babfec5b1931  numpy-2.0.0b1-cp311-cp311-win_amd64.whl\r\n    a78a38ff86aa651534979d597fdb178c7ae2c9934d95bcc921971ceea14ef54a  numpy-2.0.0b1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    e5222fb05011c310d294c40e2b8640c9351aaf3238c0605486a3f041a7befabd  numpy-2.0.0b1-cp312-cp312-macosx_11_0_arm64.whl\r\n    0f69c008a8533879ea0480fe11b28154c0dc12567522406f2c887bc549a98865  numpy-2.0.0b1-cp312-cp312-macosx_14_0_arm64.whl\r\n    a5b47099876fceefb5ac4d2cfe4ee7337de22253aafe6f2e545b84d100bf9e22  numpy-2.0.0b1-cp312-cp312-macosx_14_0_x86_64.whl\r\n    a81816e4dc75351dd1ce2d84f381856b8962eef1757ddfe13007d2a8bb966fda  numpy-2.0.0b1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3ecb219af16b0dbf58bbe1fdb4d074582f9a99567d85c630cf82c3b40168a15d  numpy-2.0.0b1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7479d8f43dd78a3bd1c8a3c7c9b06e71639c480a0223c31a4aeb2c7e8fd62151  numpy-2.0.0b1-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    1665b832541449c7079ee9d41f334ab832a1d84511cc834c0bc8d98bf96d1df5  numpy-2.0.0b1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    585471edf1f205fb589632581cc7b30c6c0e78d79b3c754739bb62ff568fa587  numpy-2.0.0b1-cp312-cp312-win32.whl\r\n    881df25d857873947d54dbed01d98c417f3feb5df86ece719eebf1edbbb2095c  numpy-2.0.0b1-cp312-cp312-win_amd64.whl\r\n    797dc478feed31f78bca1c69d9a167c6294599927c184f4e9b569ad8895ca6e5  numpy-2.0.0b1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    49cb06682f4588c2553a63445b7e37aec731452fe380c3bd142377783a9ba014  numpy-2.0.0b1-cp39-cp39-macosx_11_0_arm64.whl\r\n    5fd7ec50b9650ac0aa4fd318eceb9059ed3c0ab3aa79d5f260a10158521f9770  numpy-2.0.0b1-cp39-cp39-macosx_14_0_arm64.whl\r\n    72526252a5d1da5067181bfd3df9cc6d7dcd024b757f5d35e8f1d0c08cb729c1  numpy-2.0.0b1-cp39-cp39-macosx_14_0_x86_64.whl\r\n    7870b854823217f34e6258328f46e40f68784f61408deb37a29ca64762c60c10  numpy-2.0.0b1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    26a0978595ac2e8160d27f7537ff94402eaaf3ea7a768e7f99170ed91453d1bf  numpy-2.0.0b1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5801a93e424c12366d8b0b411dfeb7102f7429f0934059a39b1529f02ea2606b  numpy-2.0.0b1-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    2f67038ecdf4b372d81fa00530547a5d04b77da5b1e4fc55f58021f3135331ea  numpy-2.0.0b1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    f32b6ec16518b3ba1a2d3a100d9b413cf24aaeeefdec19f1cddec55cb4a31dac  numpy-2.0.0b1-cp39-cp39-win32.whl\r\n    70a22408ed088725fe44a6f55a077d1f704977b262e53d30ba485a01229028a3  numpy-2.0.0b1-cp39-cp39-win_amd64.whl\r\n    a69f1624d036953f3f2795f22e6be452ee6d24937ae14f77c2e536589e20caa2  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    c27970540ee6b4b8325779cd22eee0283cb9dc6511130ff54e774fcd0a261d4b  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_14_0_arm64.whl\r\n    393adcc241ff7010b43e4660710a43c322189ff67461afba18bbaf9f5581b221  numpy-2.0.0b1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\r\n    4205b3efa27b74cb096443bdda178f5032ffc6b41306a7d4a0b903b4b614b146  numpy-2.0.0b1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    52f9cd632f9f5e179e98769d76702ce9a307439f36191607d5ee06cb8a986d01  numpy-2.0.0b1-pp39-pypy39_pp73-win_amd64.whl\r\n    e0bb33a37d0d0b9a19cd41a093877f830e06bd4d989341b9792896cf08e629f7  numpy-2.0.0b1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/145946820/reactions",
      "total_count": 86,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 57,
      "confused": 0,
      "heart": 9,
      "rocket": 18,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/140009691",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/140009691/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/140009691/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.4",
    "id": 140009691,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84IWGDb",
    "tag_name": "v1.26.4",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-02-05T21:56:37Z",
    "published_at": "2024-02-06T00:32:23Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/150009184",
        "id": 150009184,
        "node_id": "RA_kwDOAA3dP84I8PVg",
        "name": "1.26.4-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2525,
        "download_count": 691,
        "created_at": "2024-02-06T00:30:27Z",
        "updated_at": "2024-02-06T00:30:27Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.4/1.26.4-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/150009268",
        "id": 150009268,
        "node_id": "RA_kwDOAA3dP84I8PW0",
        "name": "numpy-1.26.4.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15786129,
        "download_count": 51212,
        "created_at": "2024-02-06T00:31:11Z",
        "updated_at": "2024-02-06T00:31:34Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.4/numpy-1.26.4.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/150009339",
        "id": 150009339,
        "node_id": "RA_kwDOAA3dP84I8PX7",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 10483,
        "download_count": 1041,
        "created_at": "2024-02-06T00:31:53Z",
        "updated_at": "2024-02-06T00:31:53Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.4/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.4",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.4",
    "body": "# NumPy 1.26.4 Release Notes\r\n\r\nNumPy 1.26.4 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.26.3 release. The Python versions supported by\r\nthis release are 3.9-3.12. This is the last planned release in the\r\n1.26.x series.\r\n\r\n## Contributors\r\n\r\nA total of 13 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Charles Harris\r\n-   Elliott Sales de Andrade\r\n-   Lucas Colley +\r\n-   Mark Ryan +\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Ola x Nilsson +\r\n-   Pieter Eendebak\r\n-   Ralf Gommers\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Stefan van der Walt\r\n-   Stefano Rivera\r\n\r\n## Pull requests merged\r\n\r\nA total of 19 pull requests were merged for this release.\r\n\r\n-   [#25323](https://github.com/numpy/numpy/pull/25323): BUG: Restore missing asstr import\r\n-   [#25523](https://github.com/numpy/numpy/pull/25523): MAINT: prepare 1.26.x for further development\r\n-   [#25539](https://github.com/numpy/numpy/pull/25539): BUG: `numpy.array_api`: fix `linalg.cholesky` upper decomp\\...\r\n-   [#25584](https://github.com/numpy/numpy/pull/25584): CI: Bump azure pipeline timeout to 120 minutes\r\n-   [#25585](https://github.com/numpy/numpy/pull/25585): MAINT, BLD: Fix unused inline functions warnings on clang\r\n-   [#25599](https://github.com/numpy/numpy/pull/25599): BLD: include fix for MinGW platform detection\r\n-   [#25618](https://github.com/numpy/numpy/pull/25618): TST: Fix test_numeric on riscv64\r\n-   [#25619](https://github.com/numpy/numpy/pull/25619): BLD: fix building for windows ARM64\r\n-   [#25620](https://github.com/numpy/numpy/pull/25620): MAINT: add `newaxis` to `__all__` in `numpy.array_api`\r\n-   [#25630](https://github.com/numpy/numpy/pull/25630): BUG: Use large file fallocate on 32 bit linux platforms\r\n-   [#25643](https://github.com/numpy/numpy/pull/25643): TST: Fix test_warning_calls on Python 3.12\r\n-   [#25645](https://github.com/numpy/numpy/pull/25645): TST: Bump pytz to 2023.3.post1\r\n-   [#25658](https://github.com/numpy/numpy/pull/25658): BUG: Fix AVX512 build flags on Intel Classic Compiler\r\n-   [#25670](https://github.com/numpy/numpy/pull/25670): BLD: fix potential issue with escape sequences in `__config__.py`\r\n-   [#25718](https://github.com/numpy/numpy/pull/25718): CI: pin cygwin python to 3.9.16-1 and fix typing tests \\[skip\\...\r\n-   [#25720](https://github.com/numpy/numpy/pull/25720): MAINT: Bump cibuildwheel to v2.16.4\r\n-   [#25748](https://github.com/numpy/numpy/pull/25748): BLD: unvendor meson-python on 1.26.x and upgrade to meson-python\\...\r\n-   [#25755](https://github.com/numpy/numpy/pull/25755): MAINT: Include header defining backtrace\r\n-   [#25756](https://github.com/numpy/numpy/pull/25756): BUG: Fix np.quantile(\\[Fraction(2,1)\\], 0.5) (#24711)\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    90f33cdd8934cd07192d6ede114d8d4d  numpy-1.26.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    63ac60767f6724490e587f6010bd6839  numpy-1.26.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    ad4e82b225aaaf5898ea9798b50978d8  numpy-1.26.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d428e3da2df4fa359313348302cf003a  numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    89937c3bb596193f8ca9eae2ff84181e  numpy-1.26.4-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    de4f9da0a4e6dfd4cec39c7ad5139803  numpy-1.26.4-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    2c1f73fd9b3acf4b9b0c23e985cdd38f  numpy-1.26.4-cp310-cp310-win32.whl\r\n    920ad1f50e478b1a877fe7b7a46cc520  numpy-1.26.4-cp310-cp310-win_amd64.whl\r\n    719d1ff12db38903dcfd6749078fb11d  numpy-1.26.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    eb601e80194d2e1c00d8daedd8dc68c4  numpy-1.26.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    71a7ab11996fa370dc28e28731bd5c32  numpy-1.26.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    eb0cdd03e1ee2eb45c57c7340c98cf48  numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9d4ae1b0b27a625400f81ed1846a5667  numpy-1.26.4-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    1b6771350d2f496157430437a895ba4b  numpy-1.26.4-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    1e4a18612ee4d0e54e0833574ebc6d25  numpy-1.26.4-cp311-cp311-win32.whl\r\n    5fd325dd8704023c1110835d7a1b095a  numpy-1.26.4-cp311-cp311-win_amd64.whl\r\n    d95ce582923d24dbddbc108aa5fd2128  numpy-1.26.4-cp312-cp312-macosx_10_9_x86_64.whl\r\n    6f16f3d70e0d95ce2b032167c546cc95  numpy-1.26.4-cp312-cp312-macosx_11_0_arm64.whl\r\n    5369536d4c45fbe384147ff23185b48a  numpy-1.26.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1ceb224096686831ad731e472b65e96a  numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cd8d3c00bbc89f9bc07e2df762f9e2ae  numpy-1.26.4-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    5bd81ce840bb2e42befe01efb0402b79  numpy-1.26.4-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    2cc3b0757228078395da3efa3dc99f23  numpy-1.26.4-cp312-cp312-win32.whl\r\n    305155bd5ae879344c58968879584ed1  numpy-1.26.4-cp312-cp312-win_amd64.whl\r\n    ec2310f67215743e9c5d16b6c9fb87b6  numpy-1.26.4-cp39-cp39-macosx_10_9_x86_64.whl\r\n    406aea6081c1affbebdb6ad56b5deaf4  numpy-1.26.4-cp39-cp39-macosx_11_0_arm64.whl\r\n    fee12f0a3cbac7bbf1a1c2d82d3b02a9  numpy-1.26.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    baf4b7143c7b9ce170e62b33380fb573  numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    376ff29f90b7840ae19ecd59ad1ddf53  numpy-1.26.4-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    86785b3a7cd156c08c2ebc26f7816fb3  numpy-1.26.4-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    ab8a9ab69f16b7005f238cda76bc0bac  numpy-1.26.4-cp39-cp39-win32.whl\r\n    fafa4453e820c7ff40907e5dc79d8199  numpy-1.26.4-cp39-cp39-win_amd64.whl\r\n    7f13e2f07bd3e4a439ade0e4d27905c6  numpy-1.26.4-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    928954b41c1cd0e856f1a31d41722661  numpy-1.26.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    57bbd5c0b3848d804c416cbcab4a0ae8  numpy-1.26.4-pp39-pypy39_pp73-win_amd64.whl\r\n    19550cbe7bedd96a928da9d4ad69509d  numpy-1.26.4.tar.gz\r\n\r\n### SHA256\r\n\r\n    9ff0f4f29c51e2803569d7a51c2304de5554655a60c5d776e35b4a41413830d0  numpy-1.26.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2e4ee3380d6de9c9ec04745830fd9e2eccb3e6cf790d39d7b98ffd19b0dd754a  numpy-1.26.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    d209d8969599b27ad20994c8e41936ee0964e6da07478d6c35016bc386b66ad4  numpy-1.26.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ffa75af20b44f8dba823498024771d5ac50620e6915abac414251bd971b4529f  numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    62b8e4b1e28009ef2846b4c7852046736bab361f7aeadeb6a5b89ebec3c7055a  numpy-1.26.4-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    a4abb4f9001ad2858e7ac189089c42178fcce737e4169dc61321660f1a96c7d2  numpy-1.26.4-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    bfe25acf8b437eb2a8b2d49d443800a5f18508cd811fea3181723922a8a82b07  numpy-1.26.4-cp310-cp310-win32.whl\r\n    b97fe8060236edf3662adfc2c633f56a08ae30560c56310562cb4f95500022d5  numpy-1.26.4-cp310-cp310-win_amd64.whl\r\n    4c66707fabe114439db9068ee468c26bbdf909cac0fb58686a42a24de1760c71  numpy-1.26.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    edd8b5fe47dab091176d21bb6de568acdd906d1887a4584a15a9a96a1dca06ef  numpy-1.26.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    7ab55401287bfec946ced39700c053796e7cc0e3acbef09993a9ad2adba6ca6e  numpy-1.26.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    666dbfb6ec68962c033a450943ded891bed2d54e6755e35e5835d63f4f6931d5  numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    96ff0b2ad353d8f990b63294c8986f1ec3cb19d749234014f4e7eb0112ceba5a  numpy-1.26.4-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    60dedbb91afcbfdc9bc0b1f3f402804070deed7392c23eb7a7f07fa857868e8a  numpy-1.26.4-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    1af303d6b2210eb850fcf03064d364652b7120803a0b872f5211f5234b399f20  numpy-1.26.4-cp311-cp311-win32.whl\r\n    cd25bcecc4974d09257ffcd1f098ee778f7834c3ad767fe5db785be9a4aa9cb2  numpy-1.26.4-cp311-cp311-win_amd64.whl\r\n    b3ce300f3644fb06443ee2222c2201dd3a89ea6040541412b8fa189341847218  numpy-1.26.4-cp312-cp312-macosx_10_9_x86_64.whl\r\n    03a8c78d01d9781b28a6989f6fa1bb2c4f2d51201cf99d3dd875df6fbd96b23b  numpy-1.26.4-cp312-cp312-macosx_11_0_arm64.whl\r\n    9fad7dcb1aac3c7f0584a5a8133e3a43eeb2fe127f47e3632d43d677c66c102b  numpy-1.26.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    675d61ffbfa78604709862923189bad94014bef562cc35cf61d3a07bba02a7ed  numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    ab47dbe5cc8210f55aa58e4805fe224dac469cde56b9f731a4c098b91917159a  numpy-1.26.4-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    1dda2e7b4ec9dd512f84935c5f126c8bd8b9f2fc001e9f54af255e8c5f16b0e0  numpy-1.26.4-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    50193e430acfc1346175fcbdaa28ffec49947a06918b7b92130744e81e640110  numpy-1.26.4-cp312-cp312-win32.whl\r\n    08beddf13648eb95f8d867350f6a018a4be2e5ad54c8d8caed89ebca558b2818  numpy-1.26.4-cp312-cp312-win_amd64.whl\r\n    7349ab0fa0c429c82442a27a9673fc802ffdb7c7775fad780226cb234965e53c  numpy-1.26.4-cp39-cp39-macosx_10_9_x86_64.whl\r\n    52b8b60467cd7dd1e9ed082188b4e6bb35aa5cdd01777621a1658910745b90be  numpy-1.26.4-cp39-cp39-macosx_11_0_arm64.whl\r\n    d5241e0a80d808d70546c697135da2c613f30e28251ff8307eb72ba696945764  numpy-1.26.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f870204a840a60da0b12273ef34f7051e98c3b5961b61b0c2c1be6dfd64fbcd3  numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    679b0076f67ecc0138fd2ede3a8fd196dddc2ad3254069bcb9faf9a79b1cebcd  numpy-1.26.4-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    47711010ad8555514b434df65f7d7b076bb8261df1ca9bb78f53d3b2db02e95c  numpy-1.26.4-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    a354325ee03388678242a4d7ebcd08b5c727033fcff3b2f536aea978e15ee9e6  numpy-1.26.4-cp39-cp39-win32.whl\r\n    3373d5d70a5fe74a2c1bb6d2cfd9609ecf686d47a2d7b1d37a8f3b6bf6003aea  numpy-1.26.4-cp39-cp39-win_amd64.whl\r\n    afedb719a9dcfc7eaf2287b839d8198e06dcd4cb5d276a3df279231138e83d30  numpy-1.26.4-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    95a7476c59002f2f6c590b9b7b998306fba6a5aa646b1e22ddfeaf8f78c3a29c  numpy-1.26.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7e50d0a0cc3189f9cb0aeb3a6a6af18c16f59f004b866cd2be1c14b36134a4a0  numpy-1.26.4-pp39-pypy39_pp73-win_amd64.whl\r\n    2a02aba9ed12e4ac4eb3ea9421c420301a0c6460d9830d74a9df87efa4912010  numpy-1.26.4.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/140009691/reactions",
      "total_count": 38,
      "+1": 25,
      "-1": 0,
      "laugh": 2,
      "hooray": 4,
      "confused": 0,
      "heart": 2,
      "rocket": 4,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/135614684",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/135614684/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/135614684/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.3",
    "id": 135614684,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84IFVDc",
    "tag_name": "v1.26.3",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2024-01-02T17:26:21Z",
    "published_at": "2024-01-02T22:54:39Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/143480874",
        "id": 143480874,
        "node_id": "RA_kwDOAA3dP84IjVgq",
        "name": "1.26.3-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 5281,
        "download_count": 59,
        "created_at": "2024-01-02T22:54:18Z",
        "updated_at": "2024-01-02T22:54:18Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.3/1.26.3-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/143480686",
        "id": 143480686,
        "node_id": "RA_kwDOAA3dP84IjVdu",
        "name": "numpy-1.26.3.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15679696,
        "download_count": 4701,
        "created_at": "2024-01-02T22:53:14Z",
        "updated_at": "2024-01-02T22:53:36Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.3/numpy-1.26.3.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/143480595",
        "id": 143480595,
        "node_id": "RA_kwDOAA3dP84IjVcT",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 13725,
        "download_count": 102,
        "created_at": "2024-01-02T22:52:33Z",
        "updated_at": "2024-01-02T22:52:33Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.3/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.3",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.3",
    "body": "# NumPy 1.26.3 Release Notes\r\n\r\nNumPy 1.26.3 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.26.2 release. The most notable changes are the\r\nf2py bug fixes. The Python versions supported by this release are\r\n3.9-3.12.\r\n\r\n## Compatibility\r\n\r\n`f2py` will no longer accept ambiguous `-m` and `.pyf` CLI combinations.\r\nWhen more than one `.pyf` file is passed, an error is raised. When both\r\n`-m` and a `.pyf` is passed, a warning is emitted and the `-m` provided\r\nname is ignored.\r\n\r\n## Improvements\r\n\r\n`f2py` now handles `common` blocks which have `kind` specifications from\r\nmodules. This further expands the usability of intrinsics like\r\n`iso_fortran_env` and `iso_c_binding`.\r\n\r\n## Contributors\r\n\r\nA total of 18 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   \\@DWesl\r\n-   \\@Illviljan\r\n-   Alexander Grund\r\n-   Andrea Bianchi +\r\n-   Charles Harris\r\n-   Daniel Vanzo\r\n-   Johann Rohwer +\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Peter Hawkins\r\n-   Raghuveer Devulapalli\r\n-   Ralf Gommers\r\n-   Rohit Goswami\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Stefano Rivera +\r\n-   Thomas A Caswell\r\n-   matoro\r\n\r\n## Pull requests merged\r\n\r\nA total of 42 pull requests were merged for this release.\r\n\r\n-   [#25130](https://github.com/numpy/numpy/pull/25130): MAINT: prepare 1.26.x for further development\r\n-   [#25188](https://github.com/numpy/numpy/pull/25188): TYP: add None to `__getitem__` in `numpy.array_api`\r\n-   [#25189](https://github.com/numpy/numpy/pull/25189): BLD,BUG: quadmath required where available \\[f2py\\]\r\n-   [#25190](https://github.com/numpy/numpy/pull/25190): BUG: alpha doesn\\'t use REAL(10)\r\n-   [#25191](https://github.com/numpy/numpy/pull/25191): BUG: Fix FP overflow error in division when the divisor is scalar\r\n-   [#25192](https://github.com/numpy/numpy/pull/25192): MAINT: Pin scipy-openblas version.\r\n-   [#25201](https://github.com/numpy/numpy/pull/25201): BUG: Fix f2py to enable use of string optional inout argument\r\n-   [#25202](https://github.com/numpy/numpy/pull/25202): BUG: Fix -fsanitize=alignment issue in numpy/\\_core/src/multiarray/arraytypes.c.src\r\n-   [#25203](https://github.com/numpy/numpy/pull/25203): TST: Explicitly pass NumPy path to cython during tests (also\\...\r\n-   [#25204](https://github.com/numpy/numpy/pull/25204): BUG: fix issues with `newaxis` and `linalg.solve` in `numpy.array_api`\r\n-   [#25205](https://github.com/numpy/numpy/pull/25205): BUG: Disallow shadowed modulenames\r\n-   [#25217](https://github.com/numpy/numpy/pull/25217): BUG: Handle common blocks with kind specifications from modules\r\n-   [#25218](https://github.com/numpy/numpy/pull/25218): BUG: Fix moving compiled executable to root with f2py -c on Windows\r\n-   [#25219](https://github.com/numpy/numpy/pull/25219): BUG: Fix single to half-precision conversion on PPC64/VSX3\r\n-   [#25227](https://github.com/numpy/numpy/pull/25227): TST: f2py: fix issue in test skip condition\r\n-   [#25240](https://github.com/numpy/numpy/pull/25240): Revert \\\"MAINT: Pin scipy-openblas version.\\\"\r\n-   [#25249](https://github.com/numpy/numpy/pull/25249): MAINT: do not use `long` type\r\n-   [#25377](https://github.com/numpy/numpy/pull/25377): TST: PyPy needs another gc.collect on latest versions\r\n-   [#25378](https://github.com/numpy/numpy/pull/25378): CI: Install Lapack runtime on Cygwin.\r\n-   [#25379](https://github.com/numpy/numpy/pull/25379): MAINT: Bump conda-incubator/setup-miniconda from 2.2.0 to 3.0.1\r\n-   [#25380](https://github.com/numpy/numpy/pull/25380): BLD: update vendored Meson for AIX shared library fix\r\n-   [#25419](https://github.com/numpy/numpy/pull/25419): MAINT: Init `base` in cpu_avx512_kn\r\n-   [#25420](https://github.com/numpy/numpy/pull/25420): BUG: Fix failing test_features on SapphireRapids\r\n-   [#25422](https://github.com/numpy/numpy/pull/25422): BUG: Fix non-contiguous memory load when ARM/Neon is enabled\r\n-   [#25428](https://github.com/numpy/numpy/pull/25428): MAINT,BUG: Never import distutils above 3.12 \\[f2py\\]\r\n-   [#25452](https://github.com/numpy/numpy/pull/25452): MAINT: make the import-time check for old Accelerate more specific\r\n-   [#25458](https://github.com/numpy/numpy/pull/25458): BUG: fix macOS version checks for Accelerate support\r\n-   [#25465](https://github.com/numpy/numpy/pull/25465): MAINT: Bump actions/setup-node and larsoner/circleci-artifacts-redirector-action\r\n-   [#25466](https://github.com/numpy/numpy/pull/25466): BUG: avoid seg fault from OOB access in RandomState.set_state()\r\n-   [#25467](https://github.com/numpy/numpy/pull/25467): BUG: Fix two errors related to not checking for failed allocations\r\n-   [#25468](https://github.com/numpy/numpy/pull/25468): BUG: Fix regression with `f2py` wrappers when modules and subroutines\\...\r\n-   [#25475](https://github.com/numpy/numpy/pull/25475): BUG: Fix build issues on SPR\r\n-   [#25478](https://github.com/numpy/numpy/pull/25478): BLD: fix uninitialized variable warnings from simd/neon/memory.h\r\n-   [#25480](https://github.com/numpy/numpy/pull/25480): BUG: Handle `iso_c_type` mappings more consistently\r\n-   [#25481](https://github.com/numpy/numpy/pull/25481): BUG: Fix module name bug in signature files \\[urgent\\] \\[f2py\\]\r\n-   [#25482](https://github.com/numpy/numpy/pull/25482): BUG: Handle .pyf.src and fix SciPy \\[urgent\\]\r\n-   [#25483](https://github.com/numpy/numpy/pull/25483): DOC: `f2py` rewrite with `meson` details\r\n-   [#25485](https://github.com/numpy/numpy/pull/25485): BUG: Add external library handling for meson \\[f2py\\]\r\n-   [#25486](https://github.com/numpy/numpy/pull/25486): MAINT: Run f2py\\'s meson backend with the same python that ran\\...\r\n-   [#25489](https://github.com/numpy/numpy/pull/25489): MAINT: Update `numpy/f2py/_backends` from main.\r\n-   [#25490](https://github.com/numpy/numpy/pull/25490): MAINT: Easy updates of `f2py/*.py` from main.\r\n-   [#25491](https://github.com/numpy/numpy/pull/25491): MAINT: Update crackfortran.py and f2py2e.py from main\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    7660db27715df261948e7f0f13634f16  numpy-1.26.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    98d5b98c822de4bed0cf1b0b8f367192  numpy-1.26.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    b71cd0710cec5460292a97a02fa349cd  numpy-1.26.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0f98a05c92598f849b1be2595f4a52a8  numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b866c6aea8070c0753b776d2b521e875  numpy-1.26.3-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    cfdde5868e469fb27655ea73b0b9593b  numpy-1.26.3-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    2655440d61671b5e32b049d30397c58f  numpy-1.26.3-cp310-cp310-win32.whl\r\n    7718a5d33344784ca7821f3bdd467550  numpy-1.26.3-cp310-cp310-win_amd64.whl\r\n    28e4b2ed9192c392f792d88b3c246d1c  numpy-1.26.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    fb1ae72749463e2c82f0127699728364  numpy-1.26.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    304dec822b508a1d495917610e7562bf  numpy-1.26.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2cc0d8b073dfd55946a60ba8ed4369f6  numpy-1.26.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c99962375c599501820899c8ccab6960  numpy-1.26.3-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    47ed42d067ce4863bbf1f40da61ba7d1  numpy-1.26.3-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    3ab3757255feb54ca3793fb9db226586  numpy-1.26.3-cp311-cp311-win32.whl\r\n    c33f2a4518bae535645357a08a93be1a  numpy-1.26.3-cp311-cp311-win_amd64.whl\r\n    bea43600aaff3a4d9978611ccfa44198  numpy-1.26.3-cp312-cp312-macosx_10_9_x86_64.whl\r\n    c678d909ebe737fdabf215d8622ce2a3  numpy-1.26.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    9f21f1875c92425cec1060564b3abb1c  numpy-1.26.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c44a1998965d45ec136078ee09d880f2  numpy-1.26.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9274f5c51fa4f3c8fac5efa3d78acd63  numpy-1.26.3-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    07c9f8f86f45077febc46c87ebc0b644  numpy-1.26.3-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    a4857b2f7b6a23bca41178bd344bb28a  numpy-1.26.3-cp312-cp312-win32.whl\r\n    495d9534961d7b10f16fec4515a3d72b  numpy-1.26.3-cp312-cp312-win_amd64.whl\r\n    6494f2d94fd1f184923a33e634692b5e  numpy-1.26.3-cp39-cp39-macosx_10_9_x86_64.whl\r\n    515a7314a0ff6aaba8d53a7a1aaa73ab  numpy-1.26.3-cp39-cp39-macosx_11_0_arm64.whl\r\n    c856adc6a6a78773c43e9c738d662ed5  numpy-1.26.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    09848456158a01feff28f88c6106aef1  numpy-1.26.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    adec00ea2bc98580a436f82e188c0e2f  numpy-1.26.3-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    718bd35dd0431a6434bb30bf8d91d77d  numpy-1.26.3-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    e813aa59cb807efb4a8fee52a6dd41ba  numpy-1.26.3-cp39-cp39-win32.whl\r\n    08e1b0973d0ae5976b38563eaec1253f  numpy-1.26.3-cp39-cp39-win_amd64.whl\r\n    e8887a14750161709636e9fb87df4f36  numpy-1.26.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    0bdb19040525451553fb5758b65caf4c  numpy-1.26.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b931c14d06cc37d85d63ed1ddd88e875  numpy-1.26.3-pp39-pypy39_pp73-win_amd64.whl\r\n    1c915dc6c36dd4c674d9379e9470ff8b  numpy-1.26.3.tar.gz\r\n\r\n### SHA256\r\n\r\n    806dd64230dbbfaca8a27faa64e2f414bf1c6622ab78cc4264f7f5f028fee3bf  numpy-1.26.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    02f98011ba4ab17f46f80f7f8f1c291ee7d855fcef0a5a98db80767a468c85cd  numpy-1.26.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    6d45b3ec2faed4baca41c76617fcdcfa4f684ff7a151ce6fc78ad3b6e85af0a6  numpy-1.26.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bdd2b45bf079d9ad90377048e2747a0c82351989a2165821f0c96831b4a2a54b  numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    211ddd1e94817ed2d175b60b6374120244a4dd2287f4ece45d49228b4d529178  numpy-1.26.3-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    b1240f767f69d7c4c8a29adde2310b871153df9b26b5cb2b54a561ac85146485  numpy-1.26.3-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    21a9484e75ad018974a2fdaa216524d64ed4212e418e0a551a2d83403b0531d3  numpy-1.26.3-cp310-cp310-win32.whl\r\n    9e1591f6ae98bcfac2a4bbf9221c0b92ab49762228f38287f6eeb5f3f55905ce  numpy-1.26.3-cp310-cp310-win_amd64.whl\r\n    b831295e5472954104ecb46cd98c08b98b49c69fdb7040483aff799a755a7374  numpy-1.26.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    9e87562b91f68dd8b1c39149d0323b42e0082db7ddb8e934ab4c292094d575d6  numpy-1.26.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    8c66d6fec467e8c0f975818c1796d25c53521124b7cfb760114be0abad53a0a2  numpy-1.26.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f25e2811a9c932e43943a2615e65fc487a0b6b49218899e62e426e7f0a57eeda  numpy-1.26.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    af36e0aa45e25c9f57bf684b1175e59ea05d9a7d3e8e87b7ae1a1da246f2767e  numpy-1.26.3-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    51c7f1b344f302067b02e0f5b5d2daa9ed4a721cf49f070280ac202738ea7f00  numpy-1.26.3-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    7ca4f24341df071877849eb2034948459ce3a07915c2734f1abb4018d9c49d7b  numpy-1.26.3-cp311-cp311-win32.whl\r\n    39763aee6dfdd4878032361b30b2b12593fb445ddb66bbac802e2113eb8a6ac4  numpy-1.26.3-cp311-cp311-win_amd64.whl\r\n    a7081fd19a6d573e1a05e600c82a1c421011db7935ed0d5c483e9dd96b99cf13  numpy-1.26.3-cp312-cp312-macosx_10_9_x86_64.whl\r\n    12c70ac274b32bc00c7f61b515126c9205323703abb99cd41836e8125ea0043e  numpy-1.26.3-cp312-cp312-macosx_11_0_arm64.whl\r\n    7f784e13e598e9594750b2ef6729bcd5a47f6cfe4a12cca13def35e06d8163e3  numpy-1.26.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5f24750ef94d56ce6e33e4019a8a4d68cfdb1ef661a52cdaee628a56d2437419  numpy-1.26.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    77810ef29e0fb1d289d225cabb9ee6cf4d11978a00bb99f7f8ec2132a84e0166  numpy-1.26.3-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    8ed07a90f5450d99dad60d3799f9c03c6566709bd53b497eb9ccad9a55867f36  numpy-1.26.3-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    f73497e8c38295aaa4741bdfa4fda1a5aedda5473074369eca10626835445511  numpy-1.26.3-cp312-cp312-win32.whl\r\n    da4b0c6c699a0ad73c810736303f7fbae483bcb012e38d7eb06a5e3b432c981b  numpy-1.26.3-cp312-cp312-win_amd64.whl\r\n    1666f634cb3c80ccbd77ec97bc17337718f56d6658acf5d3b906ca03e90ce87f  numpy-1.26.3-cp39-cp39-macosx_10_9_x86_64.whl\r\n    18c3319a7d39b2c6a9e3bb75aab2304ab79a811ac0168a671a62e6346c29b03f  numpy-1.26.3-cp39-cp39-macosx_11_0_arm64.whl\r\n    0b7e807d6888da0db6e7e75838444d62495e2b588b99e90dd80c3459594e857b  numpy-1.26.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    b4d362e17bcb0011738c2d83e0a65ea8ce627057b2fdda37678f4374a382a137  numpy-1.26.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b8c275f0ae90069496068c714387b4a0eba5d531aace269559ff2b43655edd58  numpy-1.26.3-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    cc0743f0302b94f397a4a65a660d4cd24267439eb16493fb3caad2e4389bccbb  numpy-1.26.3-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    9bc6d1a7f8cedd519c4b7b1156d98e051b726bf160715b769106661d567b3f03  numpy-1.26.3-cp39-cp39-win32.whl\r\n    867e3644e208c8922a3be26fc6bbf112a035f50f0a86497f98f228c50c607bb2  numpy-1.26.3-cp39-cp39-win_amd64.whl\r\n    3c67423b3703f8fbd90f5adaa37f85b5794d3366948efe9a5190a5f3a83fc34e  numpy-1.26.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    46f47ee566d98849323f01b349d58f2557f02167ee301e5e28809a8c0e27a2d0  numpy-1.26.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a8474703bffc65ca15853d5fd4d06b18138ae90c17c8d12169968e998e448bb5  numpy-1.26.3-pp39-pypy39_pp73-win_amd64.whl\r\n    697df43e2b6310ecc9d95f05d5ef20eacc09c7c4ecc9da3f235d39e71b7da1e4  numpy-1.26.3.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/135614684/reactions",
      "total_count": 26,
      "+1": 19,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 7,
      "eyes": 0
    },
    "mentions_count": 2
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/129077940",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/129077940/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/129077940/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.2",
    "id": 129077940,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84HsZK0",
    "tag_name": "v1.26.2",
    "target_commitish": "main",
    "name": "1.26.2 release",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-11-12T20:49:36Z",
    "published_at": "2023-11-13T00:42:04Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/135225892",
        "id": 135225892,
        "node_id": "RA_kwDOAA3dP84ID2Ik",
        "name": "1.26.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 3262,
        "download_count": 357,
        "created_at": "2023-11-13T00:40:21Z",
        "updated_at": "2023-11-13T00:40:22Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.2/1.26.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/135225928",
        "id": 135225928,
        "node_id": "RA_kwDOAA3dP84ID2JI",
        "name": "numpy-1.26.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15664248,
        "download_count": 4859,
        "created_at": "2023-11-13T00:40:47Z",
        "updated_at": "2023-11-13T00:41:22Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.2/numpy-1.26.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/135225798",
        "id": 135225798,
        "node_id": "RA_kwDOAA3dP84ID2HG",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 11248,
        "download_count": 642,
        "created_at": "2023-11-13T00:39:45Z",
        "updated_at": "2023-11-13T00:39:47Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.2",
    "body": "# NumPy 1.26.2 Release Notes\r\n\r\nNumPy 1.26.2 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.26.1 release. The 1.26.release series is the last\r\nplanned minor release series before NumPy 2.0. The Python versions\r\nsupported by this release are 3.9-3.12.\r\n\r\n## Contributors\r\n\r\nA total of 13 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   \\@stefan6419846\r\n-   \\@thalassemia +\r\n-   Andrew Nelson\r\n-   Charles Bousseau +\r\n-   Charles Harris\r\n-   Marcel Bargull +\r\n-   Mark Mentovai +\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Ralf Gommers\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   William Ayd +\r\n\r\n## Pull requests merged\r\n\r\nA total of 25 pull requests were merged for this release.\r\n\r\n-   [#24814](https://github.com/numpy/numpy/pull/24814): MAINT: align test_dispatcher s390x targets with \\_umath_tests_mtargets\r\n-   [#24929](https://github.com/numpy/numpy/pull/24929): MAINT: prepare 1.26.x for further development\r\n-   [#24955](https://github.com/numpy/numpy/pull/24955): ENH: Add Cython enumeration for NPY_FR_GENERIC\r\n-   [#24962](https://github.com/numpy/numpy/pull/24962): REL: Remove Python upper version from the release branch\r\n-   [#24971](https://github.com/numpy/numpy/pull/24971): BLD: Use the correct Python interpreter when running tempita.py\r\n-   [#24972](https://github.com/numpy/numpy/pull/24972): MAINT: Remove unhelpful error replacements from `import_array()`\r\n-   [#24977](https://github.com/numpy/numpy/pull/24977): BLD: use classic linker on macOS, the new one in XCode 15 has\\...\r\n-   [#25003](https://github.com/numpy/numpy/pull/25003): BLD: musllinux_aarch64 \\[wheel build\\]\r\n-   [#25043](https://github.com/numpy/numpy/pull/25043): MAINT: Update mailmap\r\n-   [#25049](https://github.com/numpy/numpy/pull/25049): MAINT: Update meson build infrastructure.\r\n-   [#25071](https://github.com/numpy/numpy/pull/25071): MAINT: Split up .github/workflows to match main\r\n-   [#25083](https://github.com/numpy/numpy/pull/25083): BUG: Backport fix build on ppc64 when the baseline set to Power9\\...\r\n-   [#25093](https://github.com/numpy/numpy/pull/25093): BLD: Fix features.h detection for Meson builds \\[1.26.x Backport\\]\r\n-   [#25095](https://github.com/numpy/numpy/pull/25095): BUG: Avoid intp conversion regression in Cython 3 (backport)\r\n-   [#25107](https://github.com/numpy/numpy/pull/25107): CI: remove obsolete jobs, and move macOS and conda Azure jobs\\...\r\n-   [#25108](https://github.com/numpy/numpy/pull/25108): CI: Add linux_qemu action and remove travis testing.\r\n-   [#25112](https://github.com/numpy/numpy/pull/25112): MAINT: Update .spin/cmds.py from main.\r\n-   [#25113](https://github.com/numpy/numpy/pull/25113): DOC: Visually divide main license and bundled licenses in wheels\r\n-   [#25115](https://github.com/numpy/numpy/pull/25115): MAINT: Add missing `noexcept` to shuffle helpers\r\n-   [#25116](https://github.com/numpy/numpy/pull/25116): DOC: Fix license identifier for OpenBLAS\r\n-   [#25117](https://github.com/numpy/numpy/pull/25117): BLD: improve detection of Netlib libblas/libcblas/liblapack\r\n-   [#25118](https://github.com/numpy/numpy/pull/25118): MAINT: Make bitfield integers unsigned\r\n-   [#25119](https://github.com/numpy/numpy/pull/25119): BUG: Make n a long int for np.random.multinomial\r\n-   [#25120](https://github.com/numpy/numpy/pull/25120): BLD: change default of the `allow-noblas` option to true.\r\n-   [#25121](https://github.com/numpy/numpy/pull/25121): BUG: ensure passing `np.dtype` to itself doesn\\'t crash\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    1a5dc6b5b3bf11ad40a59eedb3b69fa1  numpy-1.26.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    4b741c6dfe4e6e22e34e9c5c788d4f04  numpy-1.26.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    2953687fb26e1dd8a2d1bb7109551fcd  numpy-1.26.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ea9127a3a03f27fd101c62425c661d8d  numpy-1.26.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7a6be7c6c1cc3e1ff73f64052fe30677  numpy-1.26.2-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    4f45d3f69f54fd1638609fde34c33a5c  numpy-1.26.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    f22f5ea26c86eb126ff502fff75d6c21  numpy-1.26.2-cp310-cp310-win32.whl\r\n    49871452488e1a55d15ab54c6f3e546e  numpy-1.26.2-cp310-cp310-win_amd64.whl\r\n    676740bf60fb1c8f5a6b31e00b9a4e9b  numpy-1.26.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    7170545dcc2a38a1c2386a6081043b64  numpy-1.26.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    feae1190c73d811e2e7ebcad4baf6edf  numpy-1.26.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    03131896abade61b77e0f6e53abb988a  numpy-1.26.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f160632f128a3fd46787aa02d8731fbb  numpy-1.26.2-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    014250db593d589b5533ef7127839c46  numpy-1.26.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    fb437346dac24d0cb23f5314db043c8b  numpy-1.26.2-cp311-cp311-win32.whl\r\n    7359adc233874898ea768cd4aec28bb3  numpy-1.26.2-cp311-cp311-win_amd64.whl\r\n    207a678bea75227428e7fb84d4dc457a  numpy-1.26.2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    302ff6cc047a408cdf21981bd7b26056  numpy-1.26.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    7526faaea58c76aed395c7128dd6e14d  numpy-1.26.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    28d3b1943d3a8ad4bbb2ae9da0a77cb9  numpy-1.26.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d91f5b2bb2c931e41ae7c80ec7509a31  numpy-1.26.2-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    b2504d4239419f012c08fa1eab12f940  numpy-1.26.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    57944ba30adc07f33e83a9b45f5c625a  numpy-1.26.2-cp312-cp312-win32.whl\r\n    fe38cd95bbee405ce0cf51c8753a2676  numpy-1.26.2-cp312-cp312-win_amd64.whl\r\n    28e1bc3efaf89cf6f0a2b616c0e16401  numpy-1.26.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    9932ccff54855f12ee24f60528279bf1  numpy-1.26.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    b52c1e987074dad100ad234122a397b9  numpy-1.26.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1d1bd7e0d2a89ce795a9566a38ed9bb5  numpy-1.26.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    01d2abfe8e9b35415efb791ac6c5865e  numpy-1.26.2-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    5a6d6ac287ebd93a221e59590329e202  numpy-1.26.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    4e4e4d8cf661a8d2838ee700fabae87e  numpy-1.26.2-cp39-cp39-win32.whl\r\n    b8e52ecac110471502686abbdf774b78  numpy-1.26.2-cp39-cp39-win_amd64.whl\r\n    aed2d2914be293f60fedda360b64abf8  numpy-1.26.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    6bd88e0f33933445d0e18c1a850f60e0  numpy-1.26.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    010aeb2a50af0af1f7ef56f76f8cf463  numpy-1.26.2-pp39-pypy39_pp73-win_amd64.whl\r\n    8f6446a32e47953a03f8fe8533e21e98  numpy-1.26.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    3703fc9258a4a122d17043e57b35e5ef1c5a5837c3db8be396c82e04c1cf9b0f  numpy-1.26.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    cc392fdcbd21d4be6ae1bb4475a03ce3b025cd49a9be5345d76d7585aea69440  numpy-1.26.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    36340109af8da8805d8851ef1d74761b3b88e81a9bd80b290bbfed61bd2b4f75  numpy-1.26.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    bcc008217145b3d77abd3e4d5ef586e3bdfba8fe17940769f8aa09b99e856c00  numpy-1.26.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3ced40d4e9e18242f70dd02d739e44698df3dcb010d31f495ff00a31ef6014fe  numpy-1.26.2-cp310-cp310-musllinux_1_1_aarch64.whl\r\n    b272d4cecc32c9e19911891446b72e986157e6a1809b7b56518b4f3755267523  numpy-1.26.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    22f8fc02fdbc829e7a8c578dd8d2e15a9074b630d4da29cda483337e300e3ee9  numpy-1.26.2-cp310-cp310-win32.whl\r\n    26c9d33f8e8b846d5a65dd068c14e04018d05533b348d9eaeef6c1bd787f9919  numpy-1.26.2-cp310-cp310-win_amd64.whl\r\n    b96e7b9c624ef3ae2ae0e04fa9b460f6b9f17ad8b4bec6d7756510f1f6c0c841  numpy-1.26.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    aa18428111fb9a591d7a9cc1b48150097ba6a7e8299fb56bdf574df650e7d1f1  numpy-1.26.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    06fa1ed84aa60ea6ef9f91ba57b5ed963c3729534e6e54055fc151fad0423f0a  numpy-1.26.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    96ca5482c3dbdd051bcd1fce8034603d6ebfc125a7bd59f55b40d8f5d246832b  numpy-1.26.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    854ab91a2906ef29dc3925a064fcd365c7b4da743f84b123002f6139bcb3f8a7  numpy-1.26.2-cp311-cp311-musllinux_1_1_aarch64.whl\r\n    f43740ab089277d403aa07567be138fc2a89d4d9892d113b76153e0e412409f8  numpy-1.26.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    a2bbc29fcb1771cd7b7425f98b05307776a6baf43035d3b80c4b0f29e9545186  numpy-1.26.2-cp311-cp311-win32.whl\r\n    2b3fca8a5b00184828d12b073af4d0fc5fdd94b1632c2477526f6bd7842d700d  numpy-1.26.2-cp311-cp311-win_amd64.whl\r\n    a4cd6ed4a339c21f1d1b0fdf13426cb3b284555c27ac2f156dfdaaa7e16bfab0  numpy-1.26.2-cp312-cp312-macosx_10_9_x86_64.whl\r\n    5d5244aabd6ed7f312268b9247be47343a654ebea52a60f002dc70c769048e75  numpy-1.26.2-cp312-cp312-macosx_11_0_arm64.whl\r\n    6a3cdb4d9c70e6b8c0814239ead47da00934666f668426fc6e94cce869e13fd7  numpy-1.26.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    aa317b2325f7aa0a9471663e6093c210cb2ae9c0ad824732b307d2c51983d5b6  numpy-1.26.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    174a8880739c16c925799c018f3f55b8130c1f7c8e75ab0a6fa9d41cab092fd6  numpy-1.26.2-cp312-cp312-musllinux_1_1_aarch64.whl\r\n    f79b231bf5c16b1f39c7f4875e1ded36abee1591e98742b05d8a0fb55d8a3eec  numpy-1.26.2-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    4a06263321dfd3598cacb252f51e521a8cb4b6df471bb12a7ee5cbab20ea9167  numpy-1.26.2-cp312-cp312-win32.whl\r\n    b04f5dc6b3efdaab541f7857351aac359e6ae3c126e2edb376929bd3b7f92d7e  numpy-1.26.2-cp312-cp312-win_amd64.whl\r\n    4eb8df4bf8d3d90d091e0146f6c28492b0be84da3e409ebef54349f71ed271ef  numpy-1.26.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    1a13860fdcd95de7cf58bd6f8bc5a5ef81c0b0625eb2c9a783948847abbef2c2  numpy-1.26.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    64308ebc366a8ed63fd0bf426b6a9468060962f1a4339ab1074c228fa6ade8e3  numpy-1.26.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    baf8aab04a2c0e859da118f0b38617e5ee65d75b83795055fb66c0d5e9e9b818  numpy-1.26.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d73a3abcac238250091b11caef9ad12413dab01669511779bc9b29261dd50210  numpy-1.26.2-cp39-cp39-musllinux_1_1_aarch64.whl\r\n    b361d369fc7e5e1714cf827b731ca32bff8d411212fccd29ad98ad622449cc36  numpy-1.26.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    bd3f0091e845164a20bd5a326860c840fe2af79fa12e0469a12768a3ec578d80  numpy-1.26.2-cp39-cp39-win32.whl\r\n    2beef57fb031dcc0dc8fa4fe297a742027b954949cabb52a2a376c144e5e6060  numpy-1.26.2-cp39-cp39-win_amd64.whl\r\n    1cc3d5029a30fb5f06704ad6b23b35e11309491c999838c31f124fee32107c79  numpy-1.26.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    94cc3c222bb9fb5a12e334d0479b97bb2df446fbe622b470928f5284ffca3f8d  numpy-1.26.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fe6b44fb8fcdf7eda4ef4461b97b3f63c466b27ab151bec2366db8b197387841  numpy-1.26.2-pp39-pypy39_pp73-win_amd64.whl\r\n    f65738447676ab5777f11e6bbbdb8ce11b785e105f690bc45966574816b6d3ea  numpy-1.26.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/129077940/reactions",
      "total_count": 32,
      "+1": 22,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 5,
      "eyes": 0
    },
    "mentions_count": 2
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/125100901",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/125100901/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/125100901/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.1",
    "id": 125100901,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84HdONl",
    "tag_name": "v1.26.1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-10-14T18:37:55Z",
    "published_at": "2023-10-14T20:22:16Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/130618039",
        "id": 130618039,
        "node_id": "RA_kwDOAA3dP84HyRK3",
        "name": "1.26.1-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2682,
        "download_count": 171,
        "created_at": "2023-10-14T20:21:29Z",
        "updated_at": "2023-10-14T20:21:29Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.1/1.26.1-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/130618063",
        "id": 130618063,
        "node_id": "RA_kwDOAA3dP84HyRLP",
        "name": "numpy-1.26.1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15651806,
        "download_count": 5725,
        "created_at": "2023-10-14T20:21:49Z",
        "updated_at": "2023-10-14T20:22:11Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.1/numpy-1.26.1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/130617995",
        "id": 130617995,
        "node_id": "RA_kwDOAA3dP84HyRKL",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 12734,
        "download_count": 186,
        "created_at": "2023-10-14T20:20:58Z",
        "updated_at": "2023-10-14T20:20:58Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.1",
    "body": "# NumPy 1.26.1 Release Notes\r\n\r\nNumPy 1.26.1 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.26.0 release. In addition, it adds new\r\nfunctionality for detecting BLAS and LAPACK when building from source.\r\nHighlights are:\r\n\r\n-   Improved detection of BLAS and LAPACK libraries for meson builds\r\n-   Pickle compatibility with the upcoming NumPy 2.0.\r\n\r\nThe 1.26.release series is the last planned minor release series before\r\nNumPy 2.0. The Python versions supported by this release are 3.9-3.12.\r\n\r\n## Build system changes\r\n\r\n### Improved BLAS/LAPACK detection and control\r\n\r\nAuto-detection for a number of BLAS and LAPACK is now implemented for\r\nMeson. By default, the build system will try to detect MKL, Accelerate\r\n(on macOS \\>=13.3), OpenBLAS, FlexiBLAS, BLIS and reference BLAS/LAPACK.\r\nSupport for MKL was significantly improved, and support for FlexiBLAS\r\nwas added.\r\n\r\nNew command-line flags are available to further control the selection of\r\nthe BLAS and LAPACK libraries to build against.\r\n\r\nTo select a specific library, use the config-settings interface via\r\n`pip` or `pypa/build`. E.g., to select `libblas`/`liblapack`, use:\r\n\r\n    $ pip install numpy -Csetup-args=-Dblas=blas -Csetup-args=-Dlapack=lapack\r\n    $ # OR\r\n    $ python -m build . -Csetup-args=-Dblas=blas -Csetup-args=-Dlapack=lapack\r\n\r\nThis works not only for the libraries named above, but for any library\r\nthat Meson is able to detect with the given name through `pkg-config` or\r\nCMake.\r\n\r\nBesides `-Dblas` and `-Dlapack`, a number of other new flags are\r\navailable to control BLAS/LAPACK selection and behavior:\r\n\r\n-   `-Dblas-order` and `-Dlapack-order`: a list of library names to\r\n    search for in order, overriding the default search order.\r\n-   `-Duse-ilp64`: if set to `true`, use ILP64 (64-bit integer) BLAS and\r\n    LAPACK. Note that with this release, ILP64 support has been extended\r\n    to include MKL and FlexiBLAS. OpenBLAS and Accelerate were supported\r\n    in previous releases.\r\n-   `-Dallow-noblas`: if set to `true`, allow NumPy to build with its\r\n    internal (very slow) fallback routines instead of linking against an\r\n    external BLAS/LAPACK library. *The default for this flag may be\r\n    changed to \\`\\`true\\`\\` in a future 1.26.x release, however for\r\n    1.26.1 we\\'d prefer to keep it as \\`\\`false\\`\\` because if failures\r\n    to detect an installed library are happening, we\\'d like a bug\r\n    report for that, so we can quickly assess whether the new\r\n    auto-detection machinery needs further improvements.*\r\n-   `-Dmkl-threading`: to select the threading layer for MKL. There are\r\n    four options: `seq`, `iomp`, `gomp` and `tbb`. The default is\r\n    `auto`, which selects from those four as appropriate given the\r\n    version of MKL selected.\r\n-   `-Dblas-symbol-suffix`: manually select the symbol suffix to use for\r\n    the library - should only be needed for linking against libraries\r\n    built in a non-standard way.\r\n\r\n## New features\r\n\r\n### `numpy._core` submodule stubs\r\n\r\n`numpy._core` submodule stubs were added to provide compatibility with\r\npickled arrays created using NumPy 2.0 when running Numpy 1.26.\r\n\r\n## Contributors\r\n\r\nA total of 13 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Andrew Nelson\r\n-   Anton Prosekin +\r\n-   Charles Harris\r\n-   Chongyun Lee +\r\n-   Ivan A. Melnikov +\r\n-   Jake Lishman +\r\n-   Mahder Gebremedhin +\r\n-   Mateusz Sok\u00f3\u0142\r\n-   Matti Picus\r\n-   Munira Alduraibi +\r\n-   Ralf Gommers\r\n-   Rohit Goswami\r\n-   Sayed Adel\r\n\r\n## Pull requests merged\r\n\r\nA total of 20 pull requests were merged for this release.\r\n\r\n-   [#24742](https://github.com/numpy/numpy/pull/24742): MAINT: Update cibuildwheel version\r\n-   [#24748](https://github.com/numpy/numpy/pull/24748): MAINT: fix version string in wheels built with setup.py\r\n-   [#24771](https://github.com/numpy/numpy/pull/24771): BLD, BUG: Fix build failure for host flags e.g. `-march=native`\\...\r\n-   [#24773](https://github.com/numpy/numpy/pull/24773): DOC: Updated the f2py docs to remove a note on -fimplicit-none\r\n-   [#24776](https://github.com/numpy/numpy/pull/24776): BUG: Fix SIMD f32 trunc test on s390x when baseline is none\r\n-   [#24785](https://github.com/numpy/numpy/pull/24785): BLD: add libquadmath to licences and other tweaks (#24753)\r\n-   [#24786](https://github.com/numpy/numpy/pull/24786): MAINT: Activate `use-compute-credits` for Cirrus.\r\n-   [#24803](https://github.com/numpy/numpy/pull/24803): BLD: updated vendored-meson/meson for mips64 fix\r\n-   [#24804](https://github.com/numpy/numpy/pull/24804): MAINT: fix licence path win\r\n-   [#24813](https://github.com/numpy/numpy/pull/24813): BUG: Fix order of Windows OS detection macros.\r\n-   [#24831](https://github.com/numpy/numpy/pull/24831): BUG, SIMD: use scalar cmul on bad Apple clang x86_64 (#24828)\r\n-   [#24840](https://github.com/numpy/numpy/pull/24840): BUG: Fix DATA statements for f2py\r\n-   [#24870](https://github.com/numpy/numpy/pull/24870): API: Add `NumpyUnpickler` for backporting\r\n-   [#24872](https://github.com/numpy/numpy/pull/24872): MAINT: Xfail test failing on PyPy.\r\n-   [#24879](https://github.com/numpy/numpy/pull/24879): BLD: fix math func feature checks, fix FreeBSD build, add CI\\...\r\n-   [#24899](https://github.com/numpy/numpy/pull/24899): ENH: meson: implement BLAS/LAPACK auto-detection and many CI\\...\r\n-   [#24902](https://github.com/numpy/numpy/pull/24902): DOC: add a 1.26.1 release notes section for BLAS/LAPACK build\\...\r\n-   [#24906](https://github.com/numpy/numpy/pull/24906): MAINT: Backport `numpy._core` stubs. Remove `NumpyUnpickler`\r\n-   [#24911](https://github.com/numpy/numpy/pull/24911): MAINT: Bump pypa/cibuildwheel from 2.16.1 to 2.16.2\r\n-   [#24912](https://github.com/numpy/numpy/pull/24912): BUG: loongarch doesn\\'t use REAL(10)\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    bda38de1a047dd9fdddae16c0d9fb358  numpy-1.26.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    196d2e39047da64ab28e177760c95461  numpy-1.26.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    9d25010a7bf50e624d2fed742790afbd  numpy-1.26.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9b22fa3d030807f0708007d9c0659f65  numpy-1.26.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    eea626b8b930acb4b32302a9e95714f5  numpy-1.26.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    3c40ef068f50d2ac2913c5b9fa1233fa  numpy-1.26.1-cp310-cp310-win32.whl\r\n    315c251d2f284af25761a37ce6dd4d10  numpy-1.26.1-cp310-cp310-win_amd64.whl\r\n    ebdd5046937df50e9f54a6d38c5775dd  numpy-1.26.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    682f9beebe8547f205d6cdc8ff96a984  numpy-1.26.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    e86da9b6040ea88b3835c4d8f8578658  numpy-1.26.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ebcb6cf7f64454215e29d8a89829c8e1  numpy-1.26.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a8c89e13dc9a63712104e2fb06fb63a6  numpy-1.26.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    339795930404988dbc664ff4cc72b399  numpy-1.26.1-cp311-cp311-win32.whl\r\n    4ef5e1bdd7726c19615843f5ac72e618  numpy-1.26.1-cp311-cp311-win_amd64.whl\r\n    3aad6bc72db50e9cc88aa5813e8f35bd  numpy-1.26.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    fd62f65ae7798dbda9a3f7af7aa5c8db  numpy-1.26.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    104d939e080f1baf0a56aed1de0e79e3  numpy-1.26.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c44b56c96097f910bbec1420abcf3db5  numpy-1.26.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1dce230368ae5fc47dd0fe8de8ff771d  numpy-1.26.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    d93338e7d60e1d294ca326450e99806b  numpy-1.26.1-cp312-cp312-win32.whl\r\n    a1832f46521335c1ee4c56dbf12e600b  numpy-1.26.1-cp312-cp312-win_amd64.whl\r\n    946fbb0b6caca9258985495532d3f9ab  numpy-1.26.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    78c2ab13d395d67d90bcd6583a6f61a8  numpy-1.26.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    0a9d80d8b646abf4ffe51fff3e075d10  numpy-1.26.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0229ba8145d4f58500873b540a55d60e  numpy-1.26.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    9179fc57c03260374c86e18867c24463  numpy-1.26.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    246a3103fdbe5d891d7a8aee28875a26  numpy-1.26.1-cp39-cp39-win32.whl\r\n    4589dcb7f754fade6ea3946416bee638  numpy-1.26.1-cp39-cp39-win_amd64.whl\r\n    3af340d5487a6c045f00fe5eb889957c  numpy-1.26.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    28aece4f1ceb92ec463aa353d4a91c8b  numpy-1.26.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    bbd0461a1e31017b05509e9971b3478e  numpy-1.26.1-pp39-pypy39_pp73-win_amd64.whl\r\n    2d770f4c281d405b690c4bcb3dbe99e2  numpy-1.26.1.tar.gz\r\n\r\n### SHA256\r\n\r\n    82e871307a6331b5f09efda3c22e03c095d957f04bf6bc1804f30048d0e5e7af  numpy-1.26.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    cdd9ec98f0063d93baeb01aad472a1a0840dee302842a2746a7a8e92968f9575  numpy-1.26.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    d78f269e0c4fd365fc2992c00353e4530d274ba68f15e968d8bc3c69ce5f5244  numpy-1.26.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8ab9163ca8aeb7fd32fe93866490654d2f7dda4e61bc6297bf72ce07fdc02f67  numpy-1.26.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    78ca54b2f9daffa5f323f34cdf21e1d9779a54073f0018a3094ab907938331a2  numpy-1.26.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    d1cfc92db6af1fd37a7bb58e55c8383b4aa1ba23d012bdbba26b4bcca45ac297  numpy-1.26.1-cp310-cp310-win32.whl\r\n    d2984cb6caaf05294b8466966627e80bf6c7afd273279077679cb010acb0e5ab  numpy-1.26.1-cp310-cp310-win_amd64.whl\r\n    cd7837b2b734ca72959a1caf3309457a318c934abef7a43a14bb984e574bbb9a  numpy-1.26.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    1c59c046c31a43310ad0199d6299e59f57a289e22f0f36951ced1c9eac3665b9  numpy-1.26.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    d58e8c51a7cf43090d124d5073bc29ab2755822181fcad978b12e144e5e5a4b3  numpy-1.26.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6081aed64714a18c72b168a9276095ef9155dd7888b9e74b5987808f0dd0a974  numpy-1.26.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    97e5d6a9f0702c2863aaabf19f0d1b6c2628fbe476438ce0b5ce06e83085064c  numpy-1.26.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    b9d45d1dbb9de84894cc50efece5b09939752a2d75aab3a8b0cef6f3a35ecd6b  numpy-1.26.1-cp311-cp311-win32.whl\r\n    3649d566e2fc067597125428db15d60eb42a4e0897fc48d28cb75dc2e0454e53  numpy-1.26.1-cp311-cp311-win_amd64.whl\r\n    1d1bd82d539607951cac963388534da3b7ea0e18b149a53cf883d8f699178c0f  numpy-1.26.1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    afd5ced4e5a96dac6725daeb5242a35494243f2239244fad10a90ce58b071d24  numpy-1.26.1-cp312-cp312-macosx_11_0_arm64.whl\r\n    a03fb25610ef560a6201ff06df4f8105292ba56e7cdd196ea350d123fc32e24e  numpy-1.26.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    dcfaf015b79d1f9f9c9fd0731a907407dc3e45769262d657d754c3a028586124  numpy-1.26.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e509cbc488c735b43b5ffea175235cec24bbc57b227ef1acc691725beb230d1c  numpy-1.26.1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    af22f3d8e228d84d1c0c44c1fbdeb80f97a15a0abe4f080960393a00db733b66  numpy-1.26.1-cp312-cp312-win32.whl\r\n    9f42284ebf91bdf32fafac29d29d4c07e5e9d1af862ea73686581773ef9e73a7  numpy-1.26.1-cp312-cp312-win_amd64.whl\r\n    bb894accfd16b867d8643fc2ba6c8617c78ba2828051e9a69511644ce86ce83e  numpy-1.26.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    e44ccb93f30c75dfc0c3aa3ce38f33486a75ec9abadabd4e59f114994a9c4617  numpy-1.26.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    9696aa2e35cc41e398a6d42d147cf326f8f9d81befcb399bc1ed7ffea339b64e  numpy-1.26.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a5b411040beead47a228bde3b2241100454a6abde9df139ed087bd73fc0a4908  numpy-1.26.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1e11668d6f756ca5ef534b5be8653d16c5352cbb210a5c2a79ff288e937010d5  numpy-1.26.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    d1d2c6b7dd618c41e202c59c1413ef9b2c8e8a15f5039e344af64195459e3104  numpy-1.26.1-cp39-cp39-win32.whl\r\n    59227c981d43425ca5e5c01094d59eb14e8772ce6975d4b2fc1e106a833d5ae2  numpy-1.26.1-cp39-cp39-win_amd64.whl\r\n    06934e1a22c54636a059215d6da99e23286424f316fddd979f5071093b648668  numpy-1.26.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    76ff661a867d9272cd2a99eed002470f46dbe0943a5ffd140f49be84f68ffc42  numpy-1.26.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6965888d65d2848e8768824ca8288db0a81263c1efccec881cb35a0d805fcd2f  numpy-1.26.1-pp39-pypy39_pp73-win_amd64.whl\r\n    c8c6c72d4a9f831f328efb1312642a1cafafaa88981d9ab76368d50d07d93cbe  numpy-1.26.1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/125100901/reactions",
      "total_count": 36,
      "+1": 24,
      "-1": 0,
      "laugh": 0,
      "hooray": 8,
      "confused": 0,
      "heart": 4,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/121424499",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/121424499/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/121424499/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.0",
    "id": 121424499,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84HPMpz",
    "tag_name": "v1.26.0",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-09-16T18:38:11Z",
    "published_at": "2023-09-16T20:33:28Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/126367140",
        "id": 126367140,
        "node_id": "RA_kwDOAA3dP84HiDWk",
        "name": "1.26.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 6991,
        "download_count": 113,
        "created_at": "2023-09-16T20:14:48Z",
        "updated_at": "2023-09-16T20:14:49Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0/1.26.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/126367183",
        "id": 126367183,
        "node_id": "RA_kwDOAA3dP84HiDXP",
        "name": "numpy-1.26.0.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15633455,
        "download_count": 10307,
        "created_at": "2023-09-16T20:15:15Z",
        "updated_at": "2023-09-16T20:15:37Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0/numpy-1.26.0.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/126367253",
        "id": 126367253,
        "node_id": "RA_kwDOAA3dP84HiDYV",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 19849,
        "download_count": 186,
        "created_at": "2023-09-16T20:16:06Z",
        "updated_at": "2023-09-16T20:16:06Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.0",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.0",
    "body": "# NumPy 1.26.0 Release Notes\r\n\r\nThe NumPy 1.26.0 release is a continuation of the 1.25.x release cycle\r\nwith the addition of Python 3.12.0 support. Python 3.12 dropped\r\ndistutils, consequently supporting it required finding a replacement for\r\nthe setup.py/distutils based build system NumPy was using. We have\r\nchosen to use the Meson build system instead, and this is the first\r\nNumPy release supporting it. This is also the first release that\r\nsupports Cython 3.0 in addition to retaining 0.29.X compatibility.\r\nSupporting those two upgrades was a large project, over 100 files have\r\nbeen touched in this release. The changelog doesn\\'t capture the full\r\nextent of the work, special thanks to Ralf Gommers, Sayed Adel, St\u00e9fan\r\nvan der Walt, and Matti Picus who did much of the work in the main\r\ndevelopment branch.\r\n\r\nThe highlights of this release are:\r\n\r\n-   Python 3.12.0 support.\r\n-   Cython 3.0.0 compatibility.\r\n-   Use of the Meson build system\r\n-   Updated SIMD support\r\n-   f2py fixes, meson and bind(x) support\r\n-   Support for the updated Accelerate BLAS/LAPACK library\r\n\r\nThe Python versions supported in this release are 3.9-3.12.\r\n\r\n## New Features\r\n\r\n### Array API v2022.12 support in `numpy.array_api`\r\n\r\n`numpy.array_api` now full supports the\r\n[v2022.12 version](https://data-apis.org/array-api/2022.12) of the array API standard.  Note that this does not\r\nyet include the optional `fft` extension in the standard.\r\n\r\n([gh-23789](https://github.com/numpy/numpy/pull/23789))\r\n\r\n### Support for the updated Accelerate BLAS/LAPACK library\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, the 13.3+ version will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\n### `meson` backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python `3.12`\r\non-wards. Older versions will still default to `--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other `C` interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in `C` and `Fortran`,\r\nnot in `Python` and `Fortran`.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n## Improvements\r\n\r\n### `iso_c_binding` support for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n## Build system changes\r\n\r\nIn this release, NumPy has switched to Meson as the build system and\r\nmeson-python as the build backend. Installing NumPy or building a wheel\r\ncan be done with standard tools like `pip` and `pypa/build`. The\r\nfollowing are supported:\r\n\r\n-   Regular installs: `pip install numpy` or (in a cloned repo)\r\n    `pip install .`\r\n-   Building a wheel: `python -m build` (preferred), or `pip wheel .`\r\n-   Editable installs: `pip install -e . --no-build-isolation`\r\n-   Development builds through the custom CLI implemented with\r\n    [spin](https://github.com/scientific-python/spin): `spin build`.\r\n\r\nAll the regular `pip` and `pypa/build` flags (e.g.,\r\n`--no-build-isolation`) should work as expected.\r\n\r\n### NumPy-specific build customization\r\n\r\nMany of the NumPy-specific ways of customizing builds have changed. The\r\n`NPY_*` environment variables which control BLAS/LAPACK, SIMD,\r\nthreading, and other such options are no longer supported, nor is a\r\n`site.cfg` file to select BLAS and LAPACK. Instead, there are\r\ncommand-line flags that can be passed to the build via `pip`/`build`\\'s\r\nconfig-settings interface. These flags are all listed in the\r\n`meson_options.txt` file in the root of the repo. Detailed documented\r\nwill be available before the final 1.26.0 release; for now please see\r\n[the SciPy \\\"building from source\\\" docs](http://scipy.github.io/devdocs/building/index.html)\r\nsince most build customization works in an almost identical way in SciPy as it\r\ndoes in NumPy.\r\n\r\n### Build dependencies\r\n\r\nWhile the runtime dependencies of NumPy have not changed, the build\r\ndependencies have. Because we temporarily vendor Meson and meson-python,\r\nthere are several new dependencies - please see the `[build-system]`\r\nsection of `pyproject.toml` for details.\r\n\r\n### Troubleshooting\r\n\r\nThis build system change is quite large. In case of unexpected issues,\r\nit is still possible to use a `setup.py`-based build as a temporary\r\nworkaround (on Python 3.9-3.11, not 3.12), by copying\r\n`pyproject.toml.setuppy` to `pyproject.toml`. However, please open an\r\nissue with details on the NumPy issue tracker. We aim to phase out\r\n`setup.py` builds as soon as possible, and therefore would like to see\r\nall potential blockers surfaced early on in the 1.26.0 release cycle.\r\n\r\n## Contributors\r\n\r\nA total of 20 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   \\@DWesl\r\n-   Albert Steppi +\r\n-   Bas van Beek\r\n-   Charles Harris\r\n-   Developer-Ecosystem-Engineering\r\n-   Filipe La\u00edns +\r\n-   Jake Vanderplas\r\n-   Liang Yan +\r\n-   Marten van Kerkwijk\r\n-   Matti Picus\r\n-   Melissa Weber Mendon\u00e7a\r\n-   Namami Shanker\r\n-   Nathan Goldbaum\r\n-   Ralf Gommers\r\n-   Rohit Goswami\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Stefan van der Walt\r\n-   Tyler Reddy\r\n-   Warren Weckesser\r\n\r\n## Pull requests merged\r\n\r\nA total of 59 pull requests were merged for this release.\r\n\r\n-   [#24305](https://github.com/numpy/numpy/pull/24305): MAINT: Prepare 1.26.x branch for development\r\n-   [#24308](https://github.com/numpy/numpy/pull/24308): MAINT: Massive update of files from main for numpy 1.26\r\n-   [#24322](https://github.com/numpy/numpy/pull/24322): CI: fix wheel builds on the 1.26.x branch\r\n-   [#24326](https://github.com/numpy/numpy/pull/24326): BLD: update openblas to newer version\r\n-   [#24327](https://github.com/numpy/numpy/pull/24327): TYP: Trim down the `_NestedSequence.__getitem__` signature\r\n-   [#24328](https://github.com/numpy/numpy/pull/24328): BUG: fix choose refcount leak\r\n-   [#24337](https://github.com/numpy/numpy/pull/24337): TST: fix running the test suite in builds without BLAS/LAPACK\r\n-   [#24338](https://github.com/numpy/numpy/pull/24338): BUG: random: Fix generation of nan by dirichlet.\r\n-   [#24340](https://github.com/numpy/numpy/pull/24340): MAINT: Dependabot updates from main\r\n-   [#24342](https://github.com/numpy/numpy/pull/24342): MAINT: Add back NPY_RUN_MYPY_IN_TESTSUITE=1\r\n-   [#24353](https://github.com/numpy/numpy/pull/24353): MAINT: Update `extbuild.py` from main.\r\n-   [#24356](https://github.com/numpy/numpy/pull/24356): TST: fix distutils tests for deprecations in recent setuptools\\...\r\n-   [#24375](https://github.com/numpy/numpy/pull/24375): MAINT: Update cibuildwheel to version 2.15.0\r\n-   [#24381](https://github.com/numpy/numpy/pull/24381): MAINT: Fix codespaces setup.sh script\r\n-   [#24403](https://github.com/numpy/numpy/pull/24403): ENH: Vendor meson for multi-target build support\r\n-   [#24404](https://github.com/numpy/numpy/pull/24404): BLD: vendor meson-python to make the Windows builds with SIMD\\...\r\n-   [#24405](https://github.com/numpy/numpy/pull/24405): BLD, SIMD: The meson CPU dispatcher implementation\r\n-   [#24406](https://github.com/numpy/numpy/pull/24406): MAINT: Remove versioneer\r\n-   [#24409](https://github.com/numpy/numpy/pull/24409): REL: Prepare for the NumPy 1.26.0b1 release.\r\n-   [#24453](https://github.com/numpy/numpy/pull/24453): MAINT: Pin upper version of sphinx.\r\n-   [#24455](https://github.com/numpy/numpy/pull/24455): ENH: Add prefix to \\_ALIGN Macro\r\n-   [#24456](https://github.com/numpy/numpy/pull/24456): BUG: cleanup warnings\r\n-   [#24460](https://github.com/numpy/numpy/pull/24460): MAINT: Upgrade to spin 0.5\r\n-   [#24495](https://github.com/numpy/numpy/pull/24495): BUG: `asv dev` has been removed, use `asv run`.\r\n-   [#24496](https://github.com/numpy/numpy/pull/24496): BUG: Fix meson build failure due to unchanged inplace auto-generated\\...\r\n-   [#24521](https://github.com/numpy/numpy/pull/24521): BUG: fix issue with git-version script, needs a shebang to run\r\n-   [#24522](https://github.com/numpy/numpy/pull/24522): BUG: Use a default assignment for git_hash\r\n-   [#24524](https://github.com/numpy/numpy/pull/24524): BUG: fix NPY_cast_info error handling in choose\r\n-   [#24526](https://github.com/numpy/numpy/pull/24526): BUG: Fix common block handling in f2py\r\n-   [#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: Bump mypy to 1.4.1\r\n-   [#24542](https://github.com/numpy/numpy/pull/24542): BUG: Fix assumed length f2py regression\r\n-   [#24544](https://github.com/numpy/numpy/pull/24544): MAINT: Harmonize fortranobject\r\n-   [#24545](https://github.com/numpy/numpy/pull/24545): TYP: add kind argument to numpy.isin type specification\r\n-   [#24561](https://github.com/numpy/numpy/pull/24561): BUG: fix comparisons between masked and unmasked structured arrays\r\n-   [#24590](https://github.com/numpy/numpy/pull/24590): CI: Exclude import libraries from list of DLLs on Cygwin.\r\n-   [#24591](https://github.com/numpy/numpy/pull/24591): BLD: fix `_umath_linalg` dependencies\r\n-   [#24594](https://github.com/numpy/numpy/pull/24594): MAINT: Stop testing on ppc64le.\r\n-   [#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: fix SIMD support on platforms with no features\r\n-   [#24606](https://github.com/numpy/numpy/pull/24606): BUG: Change Cython `binding` directive to \\\"False\\\".\r\n-   [#24613](https://github.com/numpy/numpy/pull/24613): ENH: Adopt new macOS Accelerate BLAS/LAPACK Interfaces, including\\...\r\n-   [#24614](https://github.com/numpy/numpy/pull/24614): DOC: Update building docs to use Meson\r\n-   [#24615](https://github.com/numpy/numpy/pull/24615): TYP: Add the missing `casting` keyword to `np.clip`\r\n-   [#24616](https://github.com/numpy/numpy/pull/24616): TST: convert cython test from setup.py to meson\r\n-   [#24617](https://github.com/numpy/numpy/pull/24617): MAINT: Fixup `fromnumeric.pyi`\r\n-   [#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: Fix `iso_c_binding` type maps and fix `bind(c)`\\...\r\n-   [#24629](https://github.com/numpy/numpy/pull/24629): TYP: Allow `binary_repr` to accept any object implementing\\...\r\n-   [#24630](https://github.com/numpy/numpy/pull/24630): TYP: Explicitly declare `dtype` and `generic` hashable\r\n-   [#24637](https://github.com/numpy/numpy/pull/24637): ENH: Refactor the typing \\\"reveal\\\" tests using `typing.assert_type`\r\n-   [#24638](https://github.com/numpy/numpy/pull/24638): MAINT: Bump actions/checkout from 3.6.0 to 4.0.0\r\n-   [#24647](https://github.com/numpy/numpy/pull/24647): ENH: `meson` backend for `f2py`\r\n-   [#24648](https://github.com/numpy/numpy/pull/24648): MAINT: Refactor partial load Workaround for Clang\r\n-   [#24653](https://github.com/numpy/numpy/pull/24653): REL: Prepare for the NumPy 1.26.0rc1 release.\r\n-   [#24659](https://github.com/numpy/numpy/pull/24659): BLD: allow specifying the long double format to avoid the runtime\\...\r\n-   [#24665](https://github.com/numpy/numpy/pull/24665): BLD: fix bug in random.mtrand extension, don\\'t link libnpyrandom\r\n-   [#24675](https://github.com/numpy/numpy/pull/24675): BLD: build wheels for 32-bit Python on Windows, using MSVC\r\n-   [#24700](https://github.com/numpy/numpy/pull/24700): BLD: fix issue with compiler selection during cross compilation\r\n-   [#24701](https://github.com/numpy/numpy/pull/24701): BUG: Fix data stmt handling for complex values in f2py\r\n-   [#24707](https://github.com/numpy/numpy/pull/24707): TYP: Add annotations for the py3.12 buffer protocol\r\n-   [#24718](https://github.com/numpy/numpy/pull/24718): DOC: fix a few doc build issues on 1.26.x and update `spin docs`\\...\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    052d84a2aaad4d5a455b64f5ff3f160b  numpy-1.26.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    874567083be194080e97bea39ea7befd  numpy-1.26.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    1a5fa023e05e050b95549d355890fbb6  numpy-1.26.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2af03fbadd96360b26b993975709d072  numpy-1.26.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    32717dd51a915e9aee4dcca72acb00d0  numpy-1.26.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    3f101e51b3b5f8c3f01256da645a1962  numpy-1.26.0-cp310-cp310-win32.whl\r\n    d523a40f0a5f5ba94f09679adbabf825  numpy-1.26.0-cp310-cp310-win_amd64.whl\r\n    6115698fdf5fb8cf895540a57d12bfb9  numpy-1.26.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    207603ee822d8af4542f239b8c0a7a67  numpy-1.26.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    0cc5f95c4aebab0ca4f9f66463981016  numpy-1.26.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a4654b46bc10738825f37a1797e1eba5  numpy-1.26.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3b037dc746499f2a19bb58b55fdd0bfb  numpy-1.26.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    7bfb0c44e95f765e7fc5a7a86968a56c  numpy-1.26.0-cp311-cp311-win32.whl\r\n    3355b510410cb20bacfb3c87632a731a  numpy-1.26.0-cp311-cp311-win_amd64.whl\r\n    9624a97f1df9f64054409d274c1502f3  numpy-1.26.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    53429b1349542c38b2f3822c7f2904d5  numpy-1.26.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    66a21bf4d8a6372cc3c4c89a67b96279  numpy-1.26.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    cb9abc312090046563eae619c0b68210  numpy-1.26.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    49e3498e0e0ec5c1f6314fb86d7f006e  numpy-1.26.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    f4a31765889478341597a7140044db85  numpy-1.26.0-cp312-cp312-win32.whl\r\n    e7d7ded11f89baf760e5ba69249606e4  numpy-1.26.0-cp312-cp312-win_amd64.whl\r\n    19698f330ae322c4813eed6e790a04d5  numpy-1.26.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    a3628f551d851fbcde6551adb8fcfe2b  numpy-1.26.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    b34af2ddf43b28207ec7e2c837cbe35f  numpy-1.26.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3d888129c86357ccfb779d9f0c1256f5  numpy-1.26.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e49d00c779df59a786d9f41e0d73c520  numpy-1.26.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    69f6aa8a0f3919797cb28fab7069a578  numpy-1.26.0-cp39-cp39-win32.whl\r\n    8233224840dcdda49b08da1d5e91a730  numpy-1.26.0-cp39-cp39-win_amd64.whl\r\n    c11b4d1181b825407b71a1ac8ec04a10  numpy-1.26.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    1515773d4f569d44c6a757cb5a636cb2  numpy-1.26.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    60dc766d863d8ab561b494a7a759d562  numpy-1.26.0-pp39-pypy39_pp73-win_amd64.whl\r\n    69bd28f07afbeed2bb6ecd467afcd469  numpy-1.26.0.tar.gz\r\n\r\n### SHA256\r\n\r\n    f8db2f125746e44dce707dd44d4f4efeea8d7e2b43aace3f8d1f235cfa2733dd  numpy-1.26.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    0621f7daf973d34d18b4e4bafb210bbaf1ef5e0100b5fa750bd9cde84c7ac292  numpy-1.26.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    51be5f8c349fdd1a5568e72713a21f518e7d6707bcf8503b528b88d33b57dc68  numpy-1.26.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    767254ad364991ccfc4d81b8152912e53e103ec192d1bb4ea6b1f5a7117040be  numpy-1.26.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    436c8e9a4bdeeee84e3e59614d38c3dbd3235838a877af8c211cfcac8a80b8d3  numpy-1.26.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    c2e698cb0c6dda9372ea98a0344245ee65bdc1c9dd939cceed6bb91256837896  numpy-1.26.0-cp310-cp310-win32.whl\r\n    09aaee96c2cbdea95de76ecb8a586cb687d281c881f5f17bfc0fb7f5890f6b91  numpy-1.26.0-cp310-cp310-win_amd64.whl\r\n    637c58b468a69869258b8ae26f4a4c6ff8abffd4a8334c830ffb63e0feefe99a  numpy-1.26.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    306545e234503a24fe9ae95ebf84d25cba1fdc27db971aa2d9f1ab6bba19a9dd  numpy-1.26.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    8c6adc33561bd1d46f81131d5352348350fc23df4d742bb246cdfca606ea1208  numpy-1.26.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e062aa24638bb5018b7841977c360d2f5917268d125c833a686b7cbabbec496c  numpy-1.26.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    546b7dd7e22f3c6861463bebb000646fa730e55df5ee4a0224408b5694cc6148  numpy-1.26.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    c0b45c8b65b79337dee5134d038346d30e109e9e2e9d43464a2970e5c0e93229  numpy-1.26.0-cp311-cp311-win32.whl\r\n    eae430ecf5794cb7ae7fa3808740b015aa80747e5266153128ef055975a72b99  numpy-1.26.0-cp311-cp311-win_amd64.whl\r\n    166b36197e9debc4e384e9c652ba60c0bacc216d0fc89e78f973a9760b503388  numpy-1.26.0-cp312-cp312-macosx_10_9_x86_64.whl\r\n    f042f66d0b4ae6d48e70e28d487376204d3cbf43b84c03bac57e28dac6151581  numpy-1.26.0-cp312-cp312-macosx_11_0_arm64.whl\r\n    e5e18e5b14a7560d8acf1c596688f4dfd19b4f2945b245a71e5af4ddb7422feb  numpy-1.26.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7f6bad22a791226d0a5c7c27a80a20e11cfe09ad5ef9084d4d3fc4a299cca505  numpy-1.26.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4acc65dd65da28060e206c8f27a573455ed724e6179941edb19f97e58161bb69  numpy-1.26.0-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    bb0d9a1aaf5f1cb7967320e80690a1d7ff69f1d47ebc5a9bea013e3a21faec95  numpy-1.26.0-cp312-cp312-win32.whl\r\n    ee84ca3c58fe48b8ddafdeb1db87388dce2c3c3f701bf447b05e4cfcc3679112  numpy-1.26.0-cp312-cp312-win_amd64.whl\r\n    4a873a8180479bc829313e8d9798d5234dfacfc2e8a7ac188418189bb8eafbd2  numpy-1.26.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    914b28d3215e0c721dc75db3ad6d62f51f630cb0c277e6b3bcb39519bed10bd8  numpy-1.26.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    c78a22e95182fb2e7874712433eaa610478a3caf86f28c621708d35fa4fd6e7f  numpy-1.26.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    86f737708b366c36b76e953c46ba5827d8c27b7a8c9d0f471810728e5a2fe57c  numpy-1.26.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b44e6a09afc12952a7d2a58ca0a2429ee0d49a4f89d83a0a11052da696440e49  numpy-1.26.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    5671338034b820c8d58c81ad1dafc0ed5a00771a82fccc71d6438df00302094b  numpy-1.26.0-cp39-cp39-win32.whl\r\n    020cdbee66ed46b671429c7265cf00d8ac91c046901c55684954c3958525dab2  numpy-1.26.0-cp39-cp39-win_amd64.whl\r\n    0792824ce2f7ea0c82ed2e4fecc29bb86bee0567a080dacaf2e0a01fe7654369  numpy-1.26.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    7d484292eaeb3e84a51432a94f53578689ffdea3f90e10c8b203a99be5af57d8  numpy-1.26.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    186ba67fad3c60dbe8a3abff3b67a91351100f2661c8e2a80364ae6279720299  numpy-1.26.0-pp39-pypy39_pp73-win_amd64.whl\r\n    f93fc78fe8bf15afe2b8d6b6499f1c73953169fad1e9a8dd086cdff3190e7fdf  numpy-1.26.0.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/121424499/reactions",
      "total_count": 46,
      "+1": 21,
      "-1": 0,
      "laugh": 0,
      "hooray": 9,
      "confused": 0,
      "heart": 9,
      "rocket": 7,
      "eyes": 0
    },
    "mentions_count": 1
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/120200277",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/120200277/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/120200277/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.0rc1",
    "id": 120200277,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84HKhxV",
    "tag_name": "v1.26.0rc1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-09-06T20:50:31Z",
    "published_at": "2023-09-06T22:36:01Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/124888897",
        "id": 124888897,
        "node_id": "RA_kwDOAA3dP84HcadB",
        "name": "1.26.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 6017,
        "download_count": 22,
        "created_at": "2023-09-06T22:33:25Z",
        "updated_at": "2023-09-06T22:33:26Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0rc1/1.26.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/124889194",
        "id": 124889194,
        "node_id": "RA_kwDOAA3dP84Hcahq",
        "name": "numpy-1.26.0rc1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15634820,
        "download_count": 98,
        "created_at": "2023-09-06T22:35:24Z",
        "updated_at": "2023-09-06T22:35:46Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0rc1/numpy-1.26.0rc1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/124889041",
        "id": 124889041,
        "node_id": "RA_kwDOAA3dP84HcafR",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 18278,
        "download_count": 21,
        "created_at": "2023-09-06T22:34:21Z",
        "updated_at": "2023-09-06T22:34:21Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0rc1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.0rc1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.0rc1",
    "body": "# NumPy 1.26.0 Release Notes\r\n\r\nThe NumPy 1.26.0 release is a continuation of the 1.25.x release cycle\r\nwith the addition of Python 3.12.0 support. Python 3.12 dropped\r\ndistutils, consequently supporting it required finding a replacement for\r\nthe setup.py/distutils based build system NumPy was using. We have\r\nchosen to use the Meson build system instead, and this is the first\r\nNumPy release supporting it. This is also the first release that\r\nsupports Cython 3.0 in addition to retaining 0.29.X compatibility.\r\nSupporting those two upgrades was a large project, over 100 files have\r\nbeen touched in this release. The changelog doesn\\'t capture the full\r\nextent of the work, special thanks to Ralf Gommers, Sayed Adel, St\u00e9fan\r\nvan der Walt, and Matti Picus who did much of the work in the main\r\ndevelopment branch.\r\n\r\nThe highlights of this release are:\r\n\r\n-   Python 3.12.0 support.\r\n-   Cython 3.0.0 compatibility.\r\n-   Use of the Meson build system\r\n-   Updated SIMD support\r\n-   f2py fixes, meson and bind(x) support\r\n\r\nThe Python versions supported in this release are 3.9-3.12.\r\n\r\n## New Features\r\n\r\n### Array API v2022.12 support in `numpy.array_api`\r\n\r\n`numpy.array_api` now full supports the\r\n[v2022.12 version](https://data-apis.org/array-api/2022.12)\r\nof the array API standard.  Note that this does not yet include the optional\r\n`fft` extension in the standard.\r\n\r\n([gh-23789](https://github.com/numpy/numpy/pull/23789))\r\n\r\n### Support for the updated Accelerate BLAS/LAPACK library\r\n\r\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64\r\n(64-bit integer) support, in macOS 13.3 has been added. This brings\r\narm64 support, and significant performance improvements of up to 10x for\r\ncommonly used linear algebra operations. When Accelerate is selected at\r\nbuild time, the 13.3+ version will automatically be used if available.\r\n\r\n([gh-24053](https://github.com/numpy/numpy/pull/24053))\r\n\r\n### `meson` backend for `f2py`\r\n\r\n`f2py` in compile mode (i.e. `f2py -c`) now accepts the\r\n`--backend meson` option. This is the default option for Python `3.12`\r\non-wards. Older versions will still default to `--backend distutils`.\r\n\r\nTo support this in realistic use-cases, in compile mode `f2py` takes a\r\n`--dep` flag one or many times which maps to `dependency()` calls in the\r\n`meson` backend, and does nothing in the `distutils` backend.\r\n\r\nThere are no changes for users of `f2py` only as a code generator, i.e.\r\nwithout `-c`.\r\n\r\n([gh-24532](https://github.com/numpy/numpy/pull/24532))\r\n\r\n### `bind(c)` support for `f2py`\r\n\r\nBoth functions and subroutines can be annotated with `bind(c)`. `f2py`\r\nwill handle both the correct type mapping, and preserve the unique label\r\nfor other `C` interfaces.\r\n\r\n**Note:** `bind(c, name = 'routine_name_other_than_fortran_routine')` is\r\nnot honored by the `f2py` bindings by design, since `bind(c)` with the\r\n`name` is meant to guarantee only the same name in `C` and `Fortran`,\r\nnot in `Python` and `Fortran`.\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n## Improvements\r\n\r\n### `iso_c_binding` support for `f2py`\r\n\r\nPreviously, users would have to define their own custom `f2cmap` file to\r\nuse type mappings defined by the Fortran2003 `iso_c_binding` intrinsic\r\nmodule. These type maps are now natively supported by `f2py`\r\n\r\n([gh-24555](https://github.com/numpy/numpy/pull/24555))\r\n\r\n## Build system changes\r\n\r\nIn this release, NumPy has switched to Meson as the build system and\r\nmeson-python as the build backend. Installing NumPy or building a wheel\r\ncan be done with standard tools like `pip` and `pypa/build`. The\r\nfollowing are supported:\r\n\r\n-   Regular installs: `pip install numpy` or (in a cloned repo)\r\n    `pip install .`\r\n-   Building a wheel: `python -m build` (preferred), or `pip wheel .`\r\n-   Editable installs: `pip install -e . --no-build-isolation`\r\n-   Development builds through the custom CLI implemented with\r\n    [spin](https://github.com/scientific-python/spin): `spin build`.\r\n\r\nAll the regular `pip` and `pypa/build` flags (e.g.,\r\n`--no-build-isolation`) should work as expected.\r\n\r\n### NumPy-specific build customization\r\n\r\nMany of the NumPy-specific ways of customizing builds have changed. The\r\n`NPY_*` environment variables which control BLAS/LAPACK, SIMD,\r\nthreading, and other such options are no longer supported, nor is a\r\n`site.cfg` file to select BLAS and LAPACK. Instead, there are\r\ncommand-line flags that can be passed to the build via `pip`/`build`\\'s\r\nconfig-settings interface. These flags are all listed in the\r\n`meson_options.txt` file in the root of the repo. Detailed documented\r\nwill be available before the final 1.26.0 release; for now please see\r\n[the SciPy \\\"building from source\\\" docs](http://scipy.github.io/devdocs/building/index.html)\r\nsince most build customization works in an almost identical way in SciPy as it\r\ndoes in NumPy.\r\n\r\n### Build dependencies\r\n\r\nWhile the runtime dependencies of NumPy have not changed, the build\r\ndependencies have. Because we temporarily vendor Meson and meson-python,\r\nthere are several new dependencies - please see the `[build-system]`\r\nsection of `pyproject.toml` for details.\r\n\r\n### Troubleshooting\r\n\r\nThis build system change is quite large. In case of unexpected issues,\r\nit is still possible to use a `setup.py`-based build as a temporary\r\nworkaround (on Python 3.9-3.11, not 3.12), by copying\r\n`pyproject.toml.setuppy` to `pyproject.toml`. However, please open an\r\nissue with details on the NumPy issue tracker. We aim to phase out\r\n`setup.py` builds as soon as possible, and therefore would like to see\r\nall potential blockers surfaced early on in the 1.26.0 release cycle.\r\n\r\n## Contributors\r\n\r\nA total of 18 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   \\@DWesl\r\n-   Albert Steppi +\r\n-   Bas van Beek\r\n-   Charles Harris\r\n-   Developer-Ecosystem-Engineering\r\n-   Jake Vanderplas\r\n-   Marten van Kerkwijk\r\n-   Matti Picus\r\n-   Melissa Weber Mendon\u00e7a\r\n-   Namami Shanker\r\n-   Nathan Goldbaum\r\n-   Ralf Gommers\r\n-   Rohit Goswami\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Stefan van der Walt\r\n-   Tyler Reddy\r\n-   Warren Weckesser\r\n\r\n## Pull requests merged\r\n\r\nA total of 51 pull requests were merged for this release.\r\n\r\n-   [#24305](https://github.com/numpy/numpy/pull/24305): MAINT: Prepare 1.26.x branch for development\r\n-   [#24308](https://github.com/numpy/numpy/pull/24308): MAINT: Massive update of files from main for numpy 1.26\r\n-   [#24322](https://github.com/numpy/numpy/pull/24322): CI: fix wheel builds on the 1.26.x branch\r\n-   [#24326](https://github.com/numpy/numpy/pull/24326): BLD: update openblas to newer version\r\n-   [#24327](https://github.com/numpy/numpy/pull/24327): TYP: Trim down the `_NestedSequence.__getitem__` signature\r\n-   [#24328](https://github.com/numpy/numpy/pull/24328): BUG: fix choose refcount leak\r\n-   [#24337](https://github.com/numpy/numpy/pull/24337): TST: fix running the test suite in builds without BLAS/LAPACK\r\n-   [#24338](https://github.com/numpy/numpy/pull/24338): BUG: random: Fix generation of nan by dirichlet.\r\n-   [#24340](https://github.com/numpy/numpy/pull/24340): MAINT: Dependabot updates from main\r\n-   [#24342](https://github.com/numpy/numpy/pull/24342): MAINT: Add back `NPY_RUN_MYPY_IN_TESTSUITE=1`\r\n-   [#24353](https://github.com/numpy/numpy/pull/24353): MAINT: Update `extbuild.py` from main.\r\n-   [#24356](https://github.com/numpy/numpy/pull/24356): TST: fix distutils tests for deprecations in recent setuptools\\...\r\n-   [#24375](https://github.com/numpy/numpy/pull/24375): MAINT: Update cibuildwheel to version 2.15.0\r\n-   [#24381](https://github.com/numpy/numpy/pull/24381): MAINT: Fix codespaces setup.sh script\r\n-   [#24403](https://github.com/numpy/numpy/pull/24403): ENH: Vendor meson for multi-target build support\r\n-   [#24404](https://github.com/numpy/numpy/pull/24404): BLD: vendor meson-python to make the Windows builds with SIMD\\...\r\n-   [#24405](https://github.com/numpy/numpy/pull/24405): BLD, SIMD: The meson CPU dispatcher implementation\r\n-   [#24406](https://github.com/numpy/numpy/pull/24406): MAINT: Remove versioneer\r\n-   [#24409](https://github.com/numpy/numpy/pull/24409): REL: Prepare for the NumPy 1.26.0b1 release.\r\n-   [#24453](https://github.com/numpy/numpy/pull/24453): MAINT: Pin upper version of sphinx.\r\n-   [#24455](https://github.com/numpy/numpy/pull/24455): ENH: Add prefix to \\_ALIGN Macro\r\n-   [#24456](https://github.com/numpy/numpy/pull/24456): BUG: cleanup warnings \\[skip azp\\]\\[skip circle\\]\\[skip travis\\]\\[skip\\...\r\n-   [#24460](https://github.com/numpy/numpy/pull/24460): MAINT: Upgrade to spin 0.5\r\n-   [#24495](https://github.com/numpy/numpy/pull/24495): BUG: `asv dev` has been removed, use `asv run`.\r\n-   [#24496](https://github.com/numpy/numpy/pull/24496): BUG: Fix meson build failure due to unchanged inplace auto-generated\\...\r\n-   [#24521](https://github.com/numpy/numpy/pull/24521): BUG: fix issue with git-version script, needs a shebang to run\r\n-   [#24522](https://github.com/numpy/numpy/pull/24522): BUG: Use a default assignment for git_hash \\[skip ci\\]\r\n-   [#24524](https://github.com/numpy/numpy/pull/24524): BUG: fix NPY_cast_info error handling in choose\r\n-   [#24526](https://github.com/numpy/numpy/pull/24526): BUG: Fix common block handling in f2py\r\n-   [#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: Bump mypy to 1.4.1\r\n-   [#24542](https://github.com/numpy/numpy/pull/24542): BUG: Fix assumed length f2py regression\r\n-   [#24544](https://github.com/numpy/numpy/pull/24544): MAINT: Harmonize fortranobject\r\n-   [#24545](https://github.com/numpy/numpy/pull/24545): TYP: add kind argument to numpy.isin type specification\r\n-   [#24561](https://github.com/numpy/numpy/pull/24561): BUG: fix comparisons between masked and unmasked structured arrays\r\n-   [#24590](https://github.com/numpy/numpy/pull/24590): CI: Exclude import libraries from list of DLLs on Cygwin.\r\n-   [#24591](https://github.com/numpy/numpy/pull/24591): BLD: fix `_umath_linalg` dependencies\r\n-   [#24594](https://github.com/numpy/numpy/pull/24594): MAINT: Stop testing on ppc64le.\r\n-   [#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: fix SIMD support on platforms with no features\r\n-   [#24606](https://github.com/numpy/numpy/pull/24606): BUG: Change Cython `binding` directive to \\\"False\\\".\r\n-   [#24613](https://github.com/numpy/numpy/pull/24613): ENH: Adopt new macOS Accelerate BLAS/LAPACK Interfaces, including\\...\r\n-   [#24614](https://github.com/numpy/numpy/pull/24614): DOC: Update building docs to use Meson\r\n-   [#24615](https://github.com/numpy/numpy/pull/24615): TYP: Add the missing `casting` keyword to `np.clip`\r\n-   [#24616](https://github.com/numpy/numpy/pull/24616): TST: convert cython test from setup.py to meson\r\n-   [#24617](https://github.com/numpy/numpy/pull/24617): MAINT: Fixup `fromnumeric.pyi`\r\n-   [#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: Fix `iso_c_binding` type maps and fix `bind(c)`\\...\r\n-   [#24629](https://github.com/numpy/numpy/pull/24629): TYP: Allow `binary_repr` to accept any object implementing\\...\r\n-   [#24630](https://github.com/numpy/numpy/pull/24630): TYP: Explicitly declare `dtype` and `generic` hashable\r\n-   [#24637](https://github.com/numpy/numpy/pull/24637): ENH: Refactor the typing \\\"reveal\\\" tests using [typing.assert_type]{.title-ref}\r\n-   [#24638](https://github.com/numpy/numpy/pull/24638): MAINT: Bump actions/checkout from 3.6.0 to 4.0.0\r\n-   [#24647](https://github.com/numpy/numpy/pull/24647): ENH: `meson` backend for `f2py`\r\n-   [#24648](https://github.com/numpy/numpy/pull/24648): MAINT: Refactor partial load Workaround for Clang\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    9bcab451e9d0eadcc00ca8ce2f5938e7  numpy-1.26.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    4b1c33742eaba91fb2a3fdf531c086f8  numpy-1.26.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    6adb6b6a762f256f5ca6c82b6a302912  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c4dbed88820255134bcae15d02c658ed  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    72dbf4449513dc1ef51b59266199cf37  numpy-1.26.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    c25812360af41a904324503d7ca02cce  numpy-1.26.0rc1-cp310-cp310-win_amd64.whl\r\n    6bbaeaa8c54a084c749ad4ede57bbeb6  numpy-1.26.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    f0585ce50c22914e0f039fd817a847c4  numpy-1.26.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    79e7deab2a43552aa4f4097183e6287d  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1f94542339a4e6327914398b7785876b  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3c3c3ea226bcf0e92796da621c0ac7fe  numpy-1.26.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    5d6bca28d5c43fc839e4d8eff3b3a35c  numpy-1.26.0rc1-cp311-cp311-win_amd64.whl\r\n    94df9fa058c650073de474555cc6f0dc  numpy-1.26.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    2ef744a42b9db31f7ce4a0c7cb8b546d  numpy-1.26.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    cf2b61c8480245995348fc2ddc4f556f  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    18cea65bce62f924c34d3b0148db4669  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5aede55c449bdc62e59230f786faa400  numpy-1.26.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    15c8199396b8adcfc9a6e4fb730d6faf  numpy-1.26.0rc1-cp312-cp312-win_amd64.whl\r\n    c9d97598b2bcaac53dc082106d0bc926  numpy-1.26.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    8359d919806089cf48086c923e1b2e81  numpy-1.26.0rc1-cp39-cp39-macosx_11_0_arm64.whl\r\n    4322ecb6dd6db9dc704f54603622da72  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a275abd27929fa7428c94b6c493798d7  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a374c440c6233a78b0bb1bf11776e48f  numpy-1.26.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    3e540eca6628510c604099a6c0a79fb5  numpy-1.26.0rc1-cp39-cp39-win_amd64.whl\r\n    a7b15d45d9b18bd2f065be1eafa3cfea  numpy-1.26.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    b7e926a0415c30df7010400936922cd7  numpy-1.26.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8430d4acc483c66d76b8263ac90195e6  numpy-1.26.0rc1-pp39-pypy39_pp73-win_amd64.whl\r\n    23bf7c39807a9cce5c8ea0ba293b7dd9  numpy-1.26.0rc1.tar.gz\r\n\r\n### SHA256\r\n\r\n    abe4b4414edd3dc61a2f6df6f0aa7711c654fc59f41a0eeae4c34b9bfc18aa22  numpy-1.26.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    0e294b045e6fa8f071e4c88836b0df2167fc74ff8561138aa5cd69d1ee98b15e  numpy-1.26.0rc1-cp310-cp310-macosx_11_0_arm64.whl\r\n    38324eb42bcd45db0b509d02325cb0e3058b6cf05beaf5bd02c221a3133cc9ff  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    302003be9baeb79f07153426544f87f534eb9fe3b8399ac8ee8420f5cfd7ed5c  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f8a9eb3d3f74978cb155a12a77046dae5b8d76bfcf56f76cc92f0d5976857ef9  numpy-1.26.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    a9b4723216f7970f571d0d71935b32ffe0eacd011befbaa977f34e928ece8c71  numpy-1.26.0rc1-cp310-cp310-win_amd64.whl\r\n    5db29b5d2c73a05ef7ed2a37a1ca8f9391579c402a57f6e0944daf755cf7d437  numpy-1.26.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    180ef984616afd4d746961ac8c874ddd5d547ba8f7dd8a58c30bde398c95d15c  numpy-1.26.0rc1-cp311-cp311-macosx_11_0_arm64.whl\r\n    0e3c8d925204ba0aa887244adec030e71003b828d24731f9feb01526aed76458  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    01851e82e3256a6c0088e43e69279a0c96214bafa1be326c7a87390d91eb7d44  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    26571d9f63f49e7612fcfc4375ad23d6882e951bca335115ce440add1a565556  numpy-1.26.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    f10ef55f19e6634c10b87c5a7c3687461fe950680ebe16e85c03905bcbf6b205  numpy-1.26.0rc1-cp311-cp311-win_amd64.whl\r\n    b28cc269bbdd2b6e005241100a97460fdd574ce495fa0eeda3d290d8fd0c66fa  numpy-1.26.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    965fedf11de8b621a20fe7182b95ef9ee76764bc1fc288e5b2cb6e8440372560  numpy-1.26.0rc1-cp312-cp312-macosx_11_0_arm64.whl\r\n    2ff5f4f14a772e0f86a250d6db86c4121bc1ce7d788f64053e82638e735bb61b  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    290c9be374026e63c6e5f5099a06c2cdfea33ff2935e7f46fcd9a1b38728c80c  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d915b8e07e277a443da4525fd36403ca4f14dcb9cd237ab6a9aff73119b71820  numpy-1.26.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    3042f503964e1e5decacdfd0eeb0ed9eadf9b70ad1a8bb085ee277bd3ddf4362  numpy-1.26.0rc1-cp312-cp312-win_amd64.whl\r\n    3080a9ec21470a9b485e92a09baedb5136468d89b2f2a1896a27fa9e36341af2  numpy-1.26.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    dd42d283561d0fe8911ff0576495a09928a3b53de2c5a6d1959e34a393e8ff65  numpy-1.26.0rc1-cp39-cp39-macosx_11_0_arm64.whl\r\n    d881436a9b325fa357b7ac32aac0be8c74921ab0f09d47139553e5da23383bc6  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1c6967bfadb4723aa025a8a9870ff554f1b03c428740167ac6616c7df0c9d817  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    69580fae06143eb07300d1f1dace92f22dd4d47600e4832bea2b1685d7bc89e9  numpy-1.26.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    5241d904c9b651183c48b5b7f49e76715d96177def6a7a9bb5aa9e9984000786  numpy-1.26.0rc1-cp39-cp39-win_amd64.whl\r\n    6aa0bda5c93d09f8a0253cc902c6dc66de30228c08bd746d4cb4c73d7daee5bc  numpy-1.26.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    b6e353a18acbbd0253115477879fef4253e284891f37d08eeda6bf77556d1534  numpy-1.26.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    53a6d1f073f8cad9c97a6e7f16eac552475db8246ce379c961edeafb3d0e3152  numpy-1.26.0rc1-pp39-pypy39_pp73-win_amd64.whl\r\n    49a8cafece27db51fd9ec78c044546b15b0c9bf95466c57ada9eeae64075c2f8  numpy-1.26.0rc1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/120200277/reactions",
      "total_count": 25,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 21,
      "confused": 0,
      "heart": 0,
      "rocket": 4,
      "eyes": 0
    },
    "mentions_count": 1
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/117087147",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/117087147/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/117087147/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.26.0b1",
    "id": 117087147,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84G-pur",
    "tag_name": "v1.26.0b1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-08-13T21:22:09Z",
    "published_at": "2023-08-14T00:45:17Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/121377717",
        "id": 121377717,
        "node_id": "RA_kwDOAA3dP84HPBO1",
        "name": "1.26.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2315,
        "download_count": 24,
        "created_at": "2023-08-14T00:38:39Z",
        "updated_at": "2023-08-14T00:38:40Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0b1/1.26.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/121377749",
        "id": 121377749,
        "node_id": "RA_kwDOAA3dP84HPBPV",
        "name": "numpy-1.26.0b1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 15632046,
        "download_count": 200,
        "created_at": "2023-08-14T00:38:52Z",
        "updated_at": "2023-08-14T00:39:14Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0b1/numpy-1.26.0b1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/121377638",
        "id": 121377638,
        "node_id": "RA_kwDOAA3dP84HPBNm",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 11955,
        "download_count": 23,
        "created_at": "2023-08-14T00:38:06Z",
        "updated_at": "2023-08-14T00:38:07Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.26.0b1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.26.0b1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.26.0b1",
    "body": "# NumPy 1.26.0 Release Notes\r\n\r\nThe NumPy 1.26.0 release is a continuation of the 1.25.x release cycle\r\nwith the addition of Python 3.12.0 support. Python 3.12 dropped\r\ndistutils, consequently supporting it required finding a replacement for\r\nthe setup.py/distutils based build system NumPy was using. We have\r\nchosen to use the Meson build system instead, and this is the first\r\nNumPy release supporting it. This is also the first release that\r\nsupports Cython 3.0 in addition to retaining 0.29.X compatibility.\r\nSupporting those two upgrades was a large project, over 100 files have\r\nbeen touched in this release. The changelog doesn\\'t capture the full\r\nextent of the work, special thanks to Ralf Gommers, Sayed Adel, St\u00e9fan\r\nvan der Walt, and Matti Picus who did much of the work in the main\r\ndevelopment branch.\r\n\r\nThe highlights of this release are:\r\n\r\n-   Python 3.12.0 support.\r\n-   Cython 3.0.0 compatibility.\r\n-   Use of the Meson build system\r\n-   Updated SIMD support\r\n\r\nThe Python versions supported in this release are 3.9-3.12.\r\n\r\n## Build system changes\r\n\r\nIn this release, NumPy has switched to Meson as the build system and\r\nmeson-python as the build backend. Installing NumPy or building a wheel\r\ncan be done with standard tools like `pip` and `pypa/build`. The\r\nfollowing are supported:\r\n\r\n-   Regular installs: `pip install numpy` or (in a cloned repo)\r\n    `pip install .`\r\n-   Building a wheel: `python -m build` (preferred), or `pip wheel .`\r\n-   Editable installs: `pip install -e . --no-build-isolation`\r\n-   Development builds through the custom CLI implemented with\r\n    [spin](https://github.com/scientific-python/spin): `spin build`.\r\n\r\nAll the regular `pip` and `pypa/build` flags (e.g.,\r\n`--no-build-isolation`) should work as expected.\r\n\r\n### NumPy-specific build customization\r\n\r\nMany of the NumPy-specific ways of customizing builds have changed. The\r\n`NPY_*` environment variables which control BLAS/LAPACK, SIMD,\r\nthreading, and other such options are no longer supported, nor is a\r\n`site.cfg` file to select BLAS and LAPACK. Instead, there are\r\ncommand-line flags that can be passed to the build via `pip`/`build`\\'s\r\nconfig-settings interface. These flags are all listed in the\r\n`meson_options.txt` file in the root of the repo. Detailed documented\r\nwill be available before the final 1.26.0 release; for now please see\r\n[the SciPy \\\"building from source\\\"docs](http://scipy.github.io/devdocs/building/index.html) since most\r\nbuild customization works in an almost identical way in SciPy as it does\r\nin NumPy.\r\n\r\n### Build dependencies\r\n\r\nWhile the runtime dependencies of NumPy have not changed, the build\r\ndependencies have. Because we temporarily vendor Meson and meson-python,\r\nthere are several new dependencies - please see the `[build-system]`\r\nsection of `pyproject.toml` for details.\r\n\r\n### Troubleshooting\r\n\r\nThis build system change is quite large. In case of unexpected issues,\r\nit is still possible to use a `setup.py`-based build as a temporary\r\nworkaround (on Python 3.9-3.11, not 3.12), by copying\r\n`pyproject.toml.setuppy` to `pyproject.toml`. However, please open an\r\nissue with details on the NumPy issue tracker. We aim to phase out\r\n`setup.py` builds as soon as possible, and therefore would like to see\r\nall potential blockers surfaced early on in the 1.26.0 release cycle.\r\n\r\n## Contributors\r\n\r\nA total of 11 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Bas van Beek\r\n-   Charles Harris\r\n-   Matti Picus\r\n-   Melissa Weber Mendon\u00e7a\r\n-   Ralf Gommers\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Stefan van der Walt\r\n-   Tyler Reddy\r\n-   Warren Weckesser\r\n\r\n## Pull requests merged\r\n\r\nA total of 18 pull requests were merged for this release.\r\n\r\n-   [#24305](https://github.com/numpy/numpy/pull/24305): MAINT: Prepare 1.26.x branch for development\r\n-   [#24308](https://github.com/numpy/numpy/pull/24308): MAINT: Massive update of files from main for numpy 1.26\r\n-   [#24322](https://github.com/numpy/numpy/pull/24322): CI: fix wheel builds on the 1.26.x branch\r\n-   [#24326](https://github.com/numpy/numpy/pull/24326): BLD: update openblas to newer version\r\n-   [#24327](https://github.com/numpy/numpy/pull/24327): TYP: Trim down the `_NestedSequence.__getitem__` signature\r\n-   [#24328](https://github.com/numpy/numpy/pull/24328): BUG: fix choose refcount leak\r\n-   [#24337](https://github.com/numpy/numpy/pull/24337): TST: fix running the test suite in builds without BLAS/LAPACK\r\n-   [#24338](https://github.com/numpy/numpy/pull/24338): BUG: random: Fix generation of nan by dirichlet.\r\n-   [#24340](https://github.com/numpy/numpy/pull/24340): MAINT: Dependabot updates from main\r\n-   [#24342](https://github.com/numpy/numpy/pull/24342): MAINT: Add back NPY_RUN_MYPY_IN_TESTSUITE=1\r\n-   [#24353](https://github.com/numpy/numpy/pull/24353): MAINT: Update `extbuild.py` from main.\r\n-   [#24356](https://github.com/numpy/numpy/pull/24356): TST: fix distutils tests for deprecations in recent setuptools\\...\r\n-   [#24375](https://github.com/numpy/numpy/pull/24375): MAINT: Update cibuildwheel to version 2.15.0\r\n-   [#24381](https://github.com/numpy/numpy/pull/24381): MAINT: Fix codespaces setup.sh script\r\n-   [#24403](https://github.com/numpy/numpy/pull/24403): ENH: Vendor meson for multi-target build support\r\n-   [#24404](https://github.com/numpy/numpy/pull/24404): BLD: vendor meson-python to make the Windows builds with SIMD\\...\r\n-   [#24405](https://github.com/numpy/numpy/pull/24405): BLD, SIMD: The meson CPU dispatcher implementation\r\n-   [#24406](https://github.com/numpy/numpy/pull/24406): MAINT: Remove versioneer\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    875d02016f215f8ce2513453393f0089  numpy-1.26.0b1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    7df1856729096fbbbbb82b58c1695810  numpy-1.26.0b1-cp310-cp310-macosx_11_0_arm64.whl\r\n    928037510906572ecadb154b8089853f  numpy-1.26.0b1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    93fb7c8a0e7af169c9bf42d8bfa17c2c  numpy-1.26.0b1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    a865069d224bf3830671de8e1f374344  numpy-1.26.0b1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    c53d1d8cb653fc08bd3f931e4c965430  numpy-1.26.0b1-cp310-cp310-win_amd64.whl\r\n    c7e212fbb7e64231747c6c8aac0f8678  numpy-1.26.0b1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    f2df03cdaee283c1f7486d2f66e497dd  numpy-1.26.0b1-cp311-cp311-macosx_11_0_arm64.whl\r\n    8af359b78166474b7a621a482f3073fd  numpy-1.26.0b1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4eec2761b87ccd43028697410ed8909d  numpy-1.26.0b1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d9f0b03e455e9e99bdbe69e2e729c197  numpy-1.26.0b1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    dd1c5e4492988e2b3641602b295e7de3  numpy-1.26.0b1-cp311-cp311-win_amd64.whl\r\n    88e35ab901c8315ccdb172abc0d2350c  numpy-1.26.0b1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    ad426a4203844eaa8de6b519e94dc2c0  numpy-1.26.0b1-cp312-cp312-macosx_11_0_arm64.whl\r\n    2e0e7a297de88cfe930c205b1ab8fdb0  numpy-1.26.0b1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5d4ea12ab53e506a9887ab8a587f68f6  numpy-1.26.0b1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1b3c3a80d2fb928b753545ded60312f3  numpy-1.26.0b1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    e27356122ee42d84f6965ac802792bc3  numpy-1.26.0b1-cp312-cp312-win_amd64.whl\r\n    1cc0d71476548fa30c27a542e3c3f9bf  numpy-1.26.0b1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    ec4882af449c1754cc7af84a82305aed  numpy-1.26.0b1-cp39-cp39-macosx_11_0_arm64.whl\r\n    142493180019de1ec22c4510bf650366  numpy-1.26.0b1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4a0c76b75fa36c54c0d2a9107c838910  numpy-1.26.0b1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cb4d1c3b95e3a2662f94475b4b525da0  numpy-1.26.0b1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    afa3f60467530e022eb1a584a8c48f84  numpy-1.26.0b1-cp39-cp39-win_amd64.whl\r\n    35c77e2f2b25225ae62354f91c26a693  numpy-1.26.0b1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    1986181def7286ae37ced5df7c0ca312  numpy-1.26.0b1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e013942d0d71cb6a680afa89c9aa5259  numpy-1.26.0b1-pp39-pypy39_pp73-win_amd64.whl\r\n    3268568cee06327fa34175aa3805829d  numpy-1.26.0b1.tar.gz\r\n\r\n### SHA256\r\n\r\n    9a74361204dc604ba53916ed55aef0ca73e7aa3d0b7e47e1c28aece8c2ad4f59  numpy-1.26.0b1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    ab9e86bb7c9d3e009945b24a92318ff5d8c245e0e0aaaa765825c4561c292d53  numpy-1.26.0b1-cp310-cp310-macosx_11_0_arm64.whl\r\n    b0b73599c80b29dfa7f812cb2e8738ce3f058b413e9f2f478e3cc4e038bb8f8e  numpy-1.26.0b1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4a6d4c99396c57e02b0181f01ba42b482f327774057e51fb7fb390a130c95cff  numpy-1.26.0b1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    02af7482f34aeb9658ece615c922942f1a3908c449a9a6cd9f33fa233ce486d4  numpy-1.26.0b1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    5a8f04e957259ef93a1e4a29da0b64d49ee842af456257bbb7253925cfe2f7bd  numpy-1.26.0b1-cp310-cp310-win_amd64.whl\r\n    f71e10402e705aaa5908464e489d38e6583c48e40a4721f83195772178c7da9f  numpy-1.26.0b1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    94d5572fea8dca0fa929da9d17fa49e525ceee1e59b04372dfa5bd8a5f688f5f  numpy-1.26.0b1-cp311-cp311-macosx_11_0_arm64.whl\r\n    1f88e6fe42b0d6418e53332e525b299762dbd9e33055d2e0398e6298da5b0cc9  numpy-1.26.0b1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    c466707e5ce5a44caadb85fd672a5ce0bfc060012df465771e7b10506e1e5dad  numpy-1.26.0b1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    16313a28cf703ae722b3ac139809360ffef81a45e758f196e538be3bcbee85c9  numpy-1.26.0b1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    ea85e8e297af49d30830177ecb0c54d1cbca051e4306161f3ceabfa66560b17c  numpy-1.26.0b1-cp311-cp311-win_amd64.whl\r\n    321a063fabc302931029f831f284cf43c301fdeead1b15df2f8aa87673294d4d  numpy-1.26.0b1-cp312-cp312-macosx_10_9_x86_64.whl\r\n    dc36a9e8df48b72dad668d6f4036ed477d8bc2cb1f7a23b688e8e8057afdfee3  numpy-1.26.0b1-cp312-cp312-macosx_11_0_arm64.whl\r\n    3c6c5804671fa1697e3d0cbc608a65c55794fb6682f4e04e9f6d65d0ddfc47c7  numpy-1.26.0b1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3aa806da215e9c10ba89e9037a69c7a56367e059615679ef1a5cf937eedfbf61  numpy-1.26.0b1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    b66135c02ee55f9113dce3c8c5130b5feaead8767cd2c7ad36547a3d5e264230  numpy-1.26.0b1-cp312-cp312-musllinux_1_1_x86_64.whl\r\n    87f2799f475e9e7aee69254dfe357975b163d409550d4641a0bca4cb4f64b725  numpy-1.26.0b1-cp312-cp312-win_amd64.whl\r\n    2b258f67ca4a8245c74470da66a87684ddb3f06dde98760efc7ca792a44ee254  numpy-1.26.0b1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    a31d9109ffed9fc5566e73346a076fffbc7db00e626579ae4d5dfec933b29bfc  numpy-1.26.0b1-cp39-cp39-macosx_11_0_arm64.whl\r\n    18e29ab806ec5e0b05df900d44b3b257a5901c32fc3ddaeb818c520cd9279b4e  numpy-1.26.0b1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    216b47882877ea5272f279c08bf7e42935728f35c6db2e4843b37db7b29ce016  numpy-1.26.0b1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    eea337d6d5ab2b6eb657b3f18e8b57a280f16fb5f94df484d9c1a8d3450d9ae9  numpy-1.26.0b1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    db698c9008217c54a8005ea58bd5836241d7b519c8bb16a698a1b4ec4ca296a8  numpy-1.26.0b1-cp39-cp39-win_amd64.whl\r\n    f250b3099649137f1021f8f95a9404273bcb7539f0bef6d6cf2c91260285edc4  numpy-1.26.0b1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    22584a41b1be30543dd8c030affc90d8cb7ec19a56fda7f27fc33f64f8b0fbaa  numpy-1.26.0b1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8aefe8ab1228e00146e5ae88290c7fdb8221aef45b357aed7f3dff6ac3b3b25a  numpy-1.26.0b1-pp39-pypy39_pp73-win_amd64.whl\r\n    c67eea90827e1e9aa220a3fc380ce8776428deba8ac9e7c931ce7b69e8dce115  numpy-1.26.0b1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/117087147/reactions",
      "total_count": 28,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 16,
      "confused": 0,
      "heart": 7,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/114510561",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/114510561/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/114510561/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.25.2",
    "id": 114510561,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84G00rh",
    "tag_name": "v1.25.2",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-07-31T01:18:20Z",
    "published_at": "2023-07-31T15:25:08Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/119446017",
        "id": 119446017,
        "node_id": "RA_kwDOAA3dP84HHpoB",
        "name": "1.25.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2455,
        "download_count": 317,
        "created_at": "2023-07-31T15:23:40Z",
        "updated_at": "2023-07-31T15:23:40Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.2/1.25.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/119446095",
        "id": 119446095,
        "node_id": "RA_kwDOAA3dP84HHppP",
        "name": "numpy-1.25.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10805282,
        "download_count": 3173,
        "created_at": "2023-07-31T15:24:33Z",
        "updated_at": "2023-07-31T15:24:48Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.2/numpy-1.25.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/119446067",
        "id": 119446067,
        "node_id": "RA_kwDOAA3dP84HHpoz",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 8184,
        "download_count": 464,
        "created_at": "2023-07-31T15:24:08Z",
        "updated_at": "2023-07-31T15:24:08Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.25.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.25.2",
    "body": "# NumPy 1.25.2 Release Notes\r\n\r\nNumPy 1.25.2 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.25.1 release. This is the last planned release in\r\nthe 1.25.x series, the next release will be 1.26.0, which will use the\r\nmeson build system and support Python 3.12. The Python versions\r\nsupported by this release are 3.9-3.11.\r\n\r\n## Contributors\r\n\r\nA total of 13 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Aaron Meurer\r\n-   Andrew Nelson\r\n-   Charles Harris\r\n-   Kevin Sheppard\r\n-   Matti Picus\r\n-   Nathan Goldbaum\r\n-   Peter Hawkins\r\n-   Ralf Gommers\r\n-   Randy Eckenrode +\r\n-   Sam James +\r\n-   Sebastian Berg\r\n-   Tyler Reddy\r\n-   dependabot\\[bot\\]\r\n\r\n## Pull requests merged\r\n\r\nA total of 19 pull requests were merged for this release.\r\n\r\n-   [#24148](https://github.com/numpy/numpy/pull/24148): MAINT: prepare 1.25.x for further development\r\n-   [#24174](https://github.com/numpy/numpy/pull/24174): ENH: Improve clang-cl compliance\r\n-   [#24179](https://github.com/numpy/numpy/pull/24179): MAINT: Upgrade various build dependencies.\r\n-   [#24182](https://github.com/numpy/numpy/pull/24182): BLD: use `-ftrapping-math` with Clang on macOS\r\n-   [#24183](https://github.com/numpy/numpy/pull/24183): BUG: properly handle negative indexes in ufunc_at fast path\r\n-   [#24184](https://github.com/numpy/numpy/pull/24184): BUG: PyObject_IsTrue and PyObject_Not error handling in setflags\r\n-   [#24185](https://github.com/numpy/numpy/pull/24185): BUG: histogram small range robust\r\n-   [#24186](https://github.com/numpy/numpy/pull/24186): MAINT: Update meson.build files from main branch\r\n-   [#24234](https://github.com/numpy/numpy/pull/24234): MAINT: exclude min, max and round from `np.__all__`\r\n-   [#24241](https://github.com/numpy/numpy/pull/24241): MAINT: Dependabot updates\r\n-   [#24242](https://github.com/numpy/numpy/pull/24242): BUG: Fix the signature for np.array_api.take\r\n-   [#24243](https://github.com/numpy/numpy/pull/24243): BLD: update OpenBLAS to an intermeidate commit\r\n-   [#24244](https://github.com/numpy/numpy/pull/24244): BUG: Fix reference count leak in str(scalar).\r\n-   [#24245](https://github.com/numpy/numpy/pull/24245): BUG: fix invalid function pointer conversion error\r\n-   [#24255](https://github.com/numpy/numpy/pull/24255): BUG: Factor out slow `getenv` call used for memory policy warning\r\n-   [#24292](https://github.com/numpy/numpy/pull/24292): CI: correct URL in cirrus.star\r\n-   [#24293](https://github.com/numpy/numpy/pull/24293): BUG: Fix C types in scalartypes\r\n-   [#24294](https://github.com/numpy/numpy/pull/24294): BUG: do not modify the input to ufunc_at\r\n-   [#24295](https://github.com/numpy/numpy/pull/24295): BUG: Further fixes to indexing loop and added tests\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    33518ccb4da8ee11f1dee4b9fef1e468  numpy-1.25.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    b5cb0c3b33ef6d93ec2888f25b065636  numpy-1.25.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    ae027dd38bd73f09c07220b2f516f148  numpy-1.25.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    88cf69dc3c0d293492c4c7e75dccf3d8  numpy-1.25.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3e4e3ad02375ba71ae2cd05ccd97aba4  numpy-1.25.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    f52bb644682deb26c35ddec77198b65c  numpy-1.25.2-cp310-cp310-win32.whl\r\n    4944cf36652be7560a6bcd0d5d56e8ea  numpy-1.25.2-cp310-cp310-win_amd64.whl\r\n    5a56e639defebb7b871c8c5613960ca3  numpy-1.25.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    3988b96944e7218e629255214f2598bd  numpy-1.25.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    302d65015ddd908a862fb3761a2a0363  numpy-1.25.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e54a2e23272d1c5e5b278bd7e304c948  numpy-1.25.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    961d390e8ccaf11b1b0d6200d2c8b1c0  numpy-1.25.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    e113865b90f97079d344100c41226fbe  numpy-1.25.2-cp311-cp311-win32.whl\r\n    834a147aa1adaec97655018b882232bd  numpy-1.25.2-cp311-cp311-win_amd64.whl\r\n    fb55f93a8033bde854c8a2b994045686  numpy-1.25.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    d96e754217d29bf045e082b695667e62  numpy-1.25.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    beab540edebecbb257e482dd9e498b44  numpy-1.25.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e0d608c9e09cd8feba48567586cfefc0  numpy-1.25.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fe1fc32c8bb005ca04b8f10ebdcff6dd  numpy-1.25.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    41df58a9935c8ed869c92307c95f02eb  numpy-1.25.2-cp39-cp39-win32.whl\r\n    a4371272c64493beb8b04ac46c4c1521  numpy-1.25.2-cp39-cp39-win_amd64.whl\r\n    bbe051cbd5f8661dd054277f0b0f0c3d  numpy-1.25.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    3f68e6b4af6922989dc0133e37db34ee  numpy-1.25.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fc89421b79e8800240999d3a1d06a4d2  numpy-1.25.2-pp39-pypy39_pp73-win_amd64.whl\r\n    cee1996a80032d47bdf1d9d17249c34e  numpy-1.25.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    db3ccc4e37a6873045580d413fe79b68e47a681af8db2e046f1dacfa11f86eb3  numpy-1.25.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    90319e4f002795ccfc9050110bbbaa16c944b1c37c0baeea43c5fb881693ae1f  numpy-1.25.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    dfe4a913e29b418d096e696ddd422d8a5d13ffba4ea91f9f60440a3b759b0187  numpy-1.25.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f08f2e037bba04e707eebf4bc934f1972a315c883a9e0ebfa8a7756eabf9e357  numpy-1.25.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    bec1e7213c7cb00d67093247f8c4db156fd03075f49876957dca4711306d39c9  numpy-1.25.2-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    7dc869c0c75988e1c693d0e2d5b26034644399dd929bc049db55395b1379e044  numpy-1.25.2-cp310-cp310-win32.whl\r\n    834b386f2b8210dca38c71a6e0f4fd6922f7d3fcff935dbe3a570945acb1b545  numpy-1.25.2-cp310-cp310-win_amd64.whl\r\n    c5462d19336db4560041517dbb7759c21d181a67cb01b36ca109b2ae37d32418  numpy-1.25.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    c5652ea24d33585ea39eb6a6a15dac87a1206a692719ff45d53c5282e66d4a8f  numpy-1.25.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    0d60fbae8e0019865fc4784745814cff1c421df5afee233db6d88ab4f14655a2  numpy-1.25.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    60e7f0f7f6d0eee8364b9a6304c2845b9c491ac706048c7e8cf47b83123b8dbf  numpy-1.25.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    bb33d5a1cf360304754913a350edda36d5b8c5331a8237268c48f91253c3a364  numpy-1.25.2-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    5883c06bb92f2e6c8181df7b39971a5fb436288db58b5a1c3967702d4278691d  numpy-1.25.2-cp311-cp311-win32.whl\r\n    5c97325a0ba6f9d041feb9390924614b60b99209a71a69c876f71052521d42a4  numpy-1.25.2-cp311-cp311-win_amd64.whl\r\n    b79e513d7aac42ae918db3ad1341a015488530d0bb2a6abcbdd10a3a829ccfd3  numpy-1.25.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    eb942bfb6f84df5ce05dbf4b46673ffed0d3da59f13635ea9b926af3deb76926  numpy-1.25.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    3e0746410e73384e70d286f93abf2520035250aad8c5714240b0492a7302fdca  numpy-1.25.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d7806500e4f5bdd04095e849265e55de20d8cc4b661b038957354327f6d9b295  numpy-1.25.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8b77775f4b7df768967a7c8b3567e309f617dd5e99aeb886fa14dc1a0791141f  numpy-1.25.2-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    2792d23d62ec51e50ce4d4b7d73de8f67a2fd3ea710dcbc8563a51a03fb07b01  numpy-1.25.2-cp39-cp39-win32.whl\r\n    76b4115d42a7dfc5d485d358728cdd8719be33cc5ec6ec08632a5d6fca2ed380  numpy-1.25.2-cp39-cp39-win_amd64.whl\r\n    1a1329e26f46230bf77b02cc19e900db9b52f398d6722ca853349a782d4cff55  numpy-1.25.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    4c3abc71e8b6edba80a01a52e66d83c5d14433cbcd26a40c329ec7ed09f37901  numpy-1.25.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1b9735c27cea5d995496f46a8b1cd7b408b3f34b6d50459d9ac8fe3a20cc17bf  numpy-1.25.2-pp39-pypy39_pp73-win_amd64.whl\r\n    fd608e19c8d7c55021dffd43bfe5492fab8cc105cc8986f813f8c3c048b38760  numpy-1.25.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/114510561/reactions",
      "total_count": 15,
      "+1": 7,
      "-1": 0,
      "laugh": 1,
      "hooray": 6,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/111510305",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/111510305/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/111510305/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.25.1",
    "id": 111510305,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84GpYMh",
    "tag_name": "v1.25.1",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-07-08T19:24:30Z",
    "published_at": "2023-07-08T22:12:30Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/116145181",
        "id": 116145181,
        "node_id": "RA_kwDOAA3dP84G7Dwd",
        "name": "1.25.1-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 1958,
        "download_count": 146,
        "created_at": "2023-07-08T22:11:17Z",
        "updated_at": "2023-07-08T22:11:17Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.1/1.25.1-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/116145217",
        "id": 116145217,
        "node_id": "RA_kwDOAA3dP84G7DxB",
        "name": "numpy-1.25.1.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10428993,
        "download_count": 3871,
        "created_at": "2023-07-08T22:11:42Z",
        "updated_at": "2023-07-08T22:11:57Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.1/numpy-1.25.1.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/116145061",
        "id": 116145061,
        "node_id": "RA_kwDOAA3dP84G7Dul",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 7535,
        "download_count": 187,
        "created_at": "2023-07-08T22:10:36Z",
        "updated_at": "2023-07-08T22:10:37Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.1/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.25.1",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.25.1",
    "body": "# NumPy 1.25.1 Release Notes\r\n\r\nNumPy 1.25.1 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.25.0 release. The Python versions supported by\r\nthis release are 3.9-3.11.\r\n\r\n## Contributors\r\n\r\nA total of 10 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Andrew Nelson\r\n-   Charles Harris\r\n-   Developer-Ecosystem-Engineering\r\n-   Hood Chatham\r\n-   Nathan Goldbaum\r\n-   Rohit Goswami\r\n-   Sebastian Berg\r\n-   Tim Paine +\r\n-   dependabot\\[bot\\]\r\n-   matoro +\r\n\r\n## Pull requests merged\r\n\r\nA total of 14 pull requests were merged for this release.\r\n\r\n-   [#23968](https://github.com/numpy/numpy/pull/23968): MAINT: prepare 1.25.x for further development\r\n-   [#24036](https://github.com/numpy/numpy/pull/24036): BLD: Port long double identification to C for meson\r\n-   [#24037](https://github.com/numpy/numpy/pull/24037): BUG: Fix reduction `return NULL` to be `goto fail`\r\n-   [#24038](https://github.com/numpy/numpy/pull/24038): BUG: Avoid undefined behavior in array.astype()\r\n-   [#24039](https://github.com/numpy/numpy/pull/24039): BUG: Ensure `__array_ufunc__` works without any kwargs passed\r\n-   [#24117](https://github.com/numpy/numpy/pull/24117): MAINT: Pin urllib3 to avoid anaconda-client bug.\r\n-   [#24118](https://github.com/numpy/numpy/pull/24118): TST: Pin pydantic\\<2 in Pyodide workflow\r\n-   [#24119](https://github.com/numpy/numpy/pull/24119): MAINT: Bump pypa/cibuildwheel from 2.13.0 to 2.13.1\r\n-   [#24120](https://github.com/numpy/numpy/pull/24120): MAINT: Bump actions/checkout from 3.5.2 to 3.5.3\r\n-   [#24122](https://github.com/numpy/numpy/pull/24122): BUG: Multiply or Divides using SIMD without a full vector can\\...\r\n-   [#24127](https://github.com/numpy/numpy/pull/24127): MAINT: testing for IS_MUSL closes #24074\r\n-   [#24128](https://github.com/numpy/numpy/pull/24128): BUG: Only replace dtype temporarily if dimensions changed\r\n-   [#24129](https://github.com/numpy/numpy/pull/24129): MAINT: Bump actions/setup-node from 3.6.0 to 3.7.0\r\n-   [#24134](https://github.com/numpy/numpy/pull/24134): BUG: Fix private procedures in f2py modules\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    d09d98643db31e892fad11b8c2b7af22  numpy-1.25.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    d5b8d3b0424e2af41018f35a087c4500  numpy-1.25.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    1007893b1a8bfd97d445a63d29d33642  numpy-1.25.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6a62d7a6cee310b41dc872aa7f3d7e8b  numpy-1.25.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e81f6264aecfa2269c5d29d10c362cbc  numpy-1.25.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    ab8ecd125ca86eac0b3ada67ab66dad6  numpy-1.25.1-cp310-cp310-win32.whl\r\n    5466bebeaafcc3d6e1b98858d77ff945  numpy-1.25.1-cp310-cp310-win_amd64.whl\r\n    f31b059256ae09b7b83df63f52d8371e  numpy-1.25.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    099f74d654888869704469c321af845d  numpy-1.25.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    20d04dccd2bfca5cfd88780d1dc9a3f8  numpy-1.25.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    61dfd7c00638e83a7af59b86615ee9d2  numpy-1.25.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4eb459c3d9479c4da2fdf20e4c4085d0  numpy-1.25.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    5e84e797866c68ba65fa89a4bf4ba8ce  numpy-1.25.1-cp311-cp311-win32.whl\r\n    87bb1633b2e8029dbfa1e59f7ab22625  numpy-1.25.1-cp311-cp311-win_amd64.whl\r\n    3fcf2eb5970d848a26abdff1b10228e7  numpy-1.25.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    d71e1cbe18fe05944219e5a5be1796bf  numpy-1.25.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    5b457e10834c991bca84aae7eaa49f34  numpy-1.25.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5cbb4c2f2892fafdf6f34fcb37c9e743  numpy-1.25.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    7d9d1ae23cf5420652088bfe8e048d89  numpy-1.25.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    7e5bed491b85f0d7c718d6809f9b3ed2  numpy-1.25.1-cp39-cp39-win32.whl\r\n    838e97b751bebadf47e2196b2c88ffa2  numpy-1.25.1-cp39-cp39-win_amd64.whl\r\n    9ba95d8d6004d9659d7728fe93f67be9  numpy-1.25.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    fbccb20254a2dc85bdec549a03b8eb56  numpy-1.25.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    95e36689e6dd078caf11e7e2a2d5f5f1  numpy-1.25.1-pp39-pypy39_pp73-win_amd64.whl\r\n    768d0ebf15e2242f4c7ca7565bb5dd3e  numpy-1.25.1.tar.gz\r\n\r\n### SHA256\r\n\r\n    77d339465dff3eb33c701430bcb9c325b60354698340229e1dff97745e6b3efa  numpy-1.25.1-cp310-cp310-macosx_10_9_x86_64.whl\r\n    d736b75c3f2cb96843a5c7f8d8ccc414768d34b0a75f466c05f3a739b406f10b  numpy-1.25.1-cp310-cp310-macosx_11_0_arm64.whl\r\n    4a90725800caeaa160732d6b31f3f843ebd45d6b5f3eec9e8cc287e30f2805bf  numpy-1.25.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    6c6c9261d21e617c6dc5eacba35cb68ec36bb72adcff0dee63f8fbc899362588  numpy-1.25.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0def91f8af6ec4bb94c370e38c575855bf1d0be8a8fbfba42ef9c073faf2cf19  numpy-1.25.1-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    fd67b306320dcadea700a8f79b9e671e607f8696e98ec255915c0c6d6b818503  numpy-1.25.1-cp310-cp310-win32.whl\r\n    c1516db588987450b85595586605742879e50dcce923e8973f79529651545b57  numpy-1.25.1-cp310-cp310-win_amd64.whl\r\n    6b82655dd8efeea69dbf85d00fca40013d7f503212bc5259056244961268b66e  numpy-1.25.1-cp311-cp311-macosx_10_9_x86_64.whl\r\n    e8f6049c4878cb16960fbbfb22105e49d13d752d4d8371b55110941fb3b17800  numpy-1.25.1-cp311-cp311-macosx_11_0_arm64.whl\r\n    41a56b70e8139884eccb2f733c2f7378af06c82304959e174f8e7370af112e09  numpy-1.25.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d5154b1a25ec796b1aee12ac1b22f414f94752c5f94832f14d8d6c9ac40bcca6  numpy-1.25.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    38eb6548bb91c421261b4805dc44def9ca1a6eef6444ce35ad1669c0f1a3fc5d  numpy-1.25.1-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    791f409064d0a69dd20579345d852c59822c6aa087f23b07b1b4e28ff5880fcb  numpy-1.25.1-cp311-cp311-win32.whl\r\n    c40571fe966393b212689aa17e32ed905924120737194b5d5c1b20b9ed0fb171  numpy-1.25.1-cp311-cp311-win_amd64.whl\r\n    3d7abcdd85aea3e6cdddb59af2350c7ab1ed764397f8eec97a038ad244d2d105  numpy-1.25.1-cp39-cp39-macosx_10_9_x86_64.whl\r\n    1a180429394f81c7933634ae49b37b472d343cccb5bb0c4a575ac8bbc433722f  numpy-1.25.1-cp39-cp39-macosx_11_0_arm64.whl\r\n    d412c1697c3853c6fc3cb9751b4915859c7afe6a277c2bf00acf287d56c4e625  numpy-1.25.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    20e1266411120a4f16fad8efa8e0454d21d00b8c7cee5b5ccad7565d95eb42dd  numpy-1.25.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f76aebc3358ade9eacf9bc2bb8ae589863a4f911611694103af05346637df1b7  numpy-1.25.1-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    247d3ffdd7775bdf191f848be8d49100495114c82c2bd134e8d5d075fb386a1c  numpy-1.25.1-cp39-cp39-win32.whl\r\n    1d5d3c68e443c90b38fdf8ef40e60e2538a27548b39b12b73132456847f4b631  numpy-1.25.1-cp39-cp39-win_amd64.whl\r\n    35a9527c977b924042170a0887de727cd84ff179e478481404c5dc66b4170009  numpy-1.25.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    0d3fe3dd0506a28493d82dc3cf254be8cd0d26f4008a417385cbf1ae95b54004  numpy-1.25.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    012097b5b0d00a11070e8f2e261128c44157a8689f7dedcf35576e525893f4fe  numpy-1.25.1-pp39-pypy39_pp73-win_amd64.whl\r\n    9a3a9f3a61480cc086117b426a8bd86869c213fc4072e606f01c4e4b66eb92bf  numpy-1.25.1.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/111510305/reactions",
      "total_count": 24,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 5,
      "confused": 0,
      "heart": 0,
      "rocket": 11,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/109913580",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/109913580/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/109913580/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.24.4",
    "id": 109913580,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84GjSXs",
    "tag_name": "v1.24.4",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-06-26T02:33:07Z",
    "published_at": "2023-06-26T13:46:47Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/114401865",
        "id": 114401865,
        "node_id": "RA_kwDOAA3dP84G0aJJ",
        "name": "1.24.4-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 991,
        "download_count": 96,
        "created_at": "2023-06-26T13:44:41Z",
        "updated_at": "2023-06-26T13:44:41Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.4/1.24.4-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/114401945",
        "id": 114401945,
        "node_id": "RA_kwDOAA3dP84G0aKZ",
        "name": "numpy-1.24.4.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10911229,
        "download_count": 2238,
        "created_at": "2023-06-26T13:45:41Z",
        "updated_at": "2023-06-26T13:45:58Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.4/numpy-1.24.4.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/114401982",
        "id": 114401982,
        "node_id": "RA_kwDOAA3dP84G0aK-",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 7203,
        "download_count": 187,
        "created_at": "2023-06-26T13:46:10Z",
        "updated_at": "2023-06-26T13:46:10Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.4/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.24.4",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.24.4",
    "body": "# NumPy 1.24.4 Release Notes\r\n\r\nNumPy 1.24.4 is a maintenance release that fixes a few bugs\r\ndiscovered after the 1.24.3 release. It is the last planned\r\nrelease in the 1.24.x cycle. The Python versions supported by\r\nthis release are 3.8-3.11.\r\n\r\n## Contributors\r\n\r\nA total of 4 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Bas van Beek\r\n-   Charles Harris\r\n-   Sebastian Berg\r\n-   Hongyang Peng +\r\n\r\n## Pull requests merged\r\n\r\nA total of 6 pull requests were merged for this release.\r\n\r\n-   [#23720](https://github.com/numpy/numpy/pull/23720): MAINT, BLD: Pin rtools to version 4.0 for Windows builds.\r\n-   [#23739](https://github.com/numpy/numpy/pull/23739): BUG: fix the method for checking local files for 1.24.x\r\n-   [#23760](https://github.com/numpy/numpy/pull/23760): MAINT: Copy rtools installation from install-rtools.\r\n-   [#23761](https://github.com/numpy/numpy/pull/23761): BUG: Fix masked array ravel order for A (and somewhat K)\r\n-   [#23890](https://github.com/numpy/numpy/pull/23890): TYP,DOC: Annotate and document the `metadata` parameter of\\...\r\n-   [#23994](https://github.com/numpy/numpy/pull/23994): MAINT: Update rtools installation\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    25049e3aee79dde29e7a498d3ad13379  numpy-1.24.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    579b5c357c918feaef4af03af8afb721  numpy-1.24.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    c873a14fa4f0210884db9c05e2904286  numpy-1.24.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    110a13ac016286059f0658b52b3646c0  numpy-1.24.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    fa67218966c0aef4094867cad7703648  numpy-1.24.4-cp310-cp310-win32.whl\r\n    6ee768803d8ebac43ee0a04e628a69f9  numpy-1.24.4-cp310-cp310-win_amd64.whl\r\n    0c918c16b58cb7f6773ea7d76e0bdaff  numpy-1.24.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    20506ae8003faf097c6b3a8915b4140e  numpy-1.24.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    902df9d5963e89d88a1939d94207857f  numpy-1.24.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2543611d802c141c8276e4868b4d9619  numpy-1.24.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    37b23a4e4e148d61dd3a515ac5dbf7ec  numpy-1.24.4-cp311-cp311-win32.whl\r\n    25e9f6bee2b65ff2a87588e717f15165  numpy-1.24.4-cp311-cp311-win_amd64.whl\r\n    f39a0cc3655a482af7d300bcaff5978e  numpy-1.24.4-cp38-cp38-macosx_10_9_x86_64.whl\r\n    9ed27941388fdb392e8969169f3fc600  numpy-1.24.4-cp38-cp38-macosx_11_0_arm64.whl\r\n    dee3f0c7482f1dc8bd1cd27b9b028a2c  numpy-1.24.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2cc0967af29df3caef9fb3520f14e071  numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    8572a3a0973fa78355bcb5f737745b47  numpy-1.24.4-cp38-cp38-win32.whl\r\n    771c63f2ef0d31466bbb12362a532265  numpy-1.24.4-cp38-cp38-win_amd64.whl\r\n    5713d9dc3dff287fb72121fe1960c48d  numpy-1.24.4-cp39-cp39-macosx_10_9_x86_64.whl\r\n    4e6718e3b655219a2a733b4fa242ca32  numpy-1.24.4-cp39-cp39-macosx_11_0_arm64.whl\r\n    31487f9a52ef81f8f88ec7fce8738dad  numpy-1.24.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    ea597b30187e55eb16ee31631e66f60d  numpy-1.24.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    98adbf30c67154056474001c125f6188  numpy-1.24.4-cp39-cp39-win32.whl\r\n    49c444b0e572ef45f1d92c106a36004e  numpy-1.24.4-cp39-cp39-win_amd64.whl\r\n    cdddfdeac437b0f20b4e366f00b5c42e  numpy-1.24.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    3778338c15628caa3abd61e6f7bd46ec  numpy-1.24.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e16bd49d5295dc1b01ed50d76229fb54  numpy-1.24.4-pp38-pypy38_pp73-win_amd64.whl\r\n    3f3995540a17854a29dc79f8eeecd832  numpy-1.24.4.tar.gz\r\n\r\n### SHA256\r\n\r\n    c0bfb52d2169d58c1cdb8cc1f16989101639b34c7d3ce60ed70b19c63eba0b64  numpy-1.24.4-cp310-cp310-macosx_10_9_x86_64.whl\r\n    ed094d4f0c177b1b8e7aa9cba7d6ceed51c0e569a5318ac0ca9a090680a6a1b1  numpy-1.24.4-cp310-cp310-macosx_11_0_arm64.whl\r\n    79fc682a374c4a8ed08b331bef9c5f582585d1048fa6d80bc6c35bc384eee9b4  numpy-1.24.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7ffe43c74893dbf38c2b0a1f5428760a1a9c98285553c89e12d70a96a7f3a4d6  numpy-1.24.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4c21decb6ea94057331e111a5bed9a79d335658c27ce2adb580fb4d54f2ad9bc  numpy-1.24.4-cp310-cp310-win32.whl\r\n    b4bea75e47d9586d31e892a7401f76e909712a0fd510f58f5337bea9572c571e  numpy-1.24.4-cp310-cp310-win_amd64.whl\r\n    f136bab9c2cfd8da131132c2cf6cc27331dd6fae65f95f69dcd4ae3c3639c810  numpy-1.24.4-cp311-cp311-macosx_10_9_x86_64.whl\r\n    e2926dac25b313635e4d6cf4dc4e51c8c0ebfed60b801c799ffc4c32bf3d1254  numpy-1.24.4-cp311-cp311-macosx_11_0_arm64.whl\r\n    222e40d0e2548690405b0b3c7b21d1169117391c2e82c378467ef9ab4c8f0da7  numpy-1.24.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    7215847ce88a85ce39baf9e89070cb860c98fdddacbaa6c0da3ffb31b3350bd5  numpy-1.24.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4979217d7de511a8d57f4b4b5b2b965f707768440c17cb70fbf254c4b225238d  numpy-1.24.4-cp311-cp311-win32.whl\r\n    b7b1fc9864d7d39e28f41d089bfd6353cb5f27ecd9905348c24187a768c79694  numpy-1.24.4-cp311-cp311-win_amd64.whl\r\n    1452241c290f3e2a312c137a9999cdbf63f78864d63c79039bda65ee86943f61  numpy-1.24.4-cp38-cp38-macosx_10_9_x86_64.whl\r\n    04640dab83f7c6c85abf9cd729c5b65f1ebd0ccf9de90b270cd61935eef0197f  numpy-1.24.4-cp38-cp38-macosx_11_0_arm64.whl\r\n    a5425b114831d1e77e4b5d812b69d11d962e104095a5b9c3b641a218abcc050e  numpy-1.24.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    dd80e219fd4c71fc3699fc1dadac5dcf4fd882bfc6f7ec53d30fa197b8ee22dc  numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4602244f345453db537be5314d3983dbf5834a9701b7723ec28923e2889e0bb2  numpy-1.24.4-cp38-cp38-win32.whl\r\n    692f2e0f55794943c5bfff12b3f56f99af76f902fc47487bdfe97856de51a706  numpy-1.24.4-cp38-cp38-win_amd64.whl\r\n    2541312fbf09977f3b3ad449c4e5f4bb55d0dbf79226d7724211acc905049400  numpy-1.24.4-cp39-cp39-macosx_10_9_x86_64.whl\r\n    9667575fb6d13c95f1b36aca12c5ee3356bf001b714fc354eb5465ce1609e62f  numpy-1.24.4-cp39-cp39-macosx_11_0_arm64.whl\r\n    f3a86ed21e4f87050382c7bc96571755193c4c1392490744ac73d660e8f564a9  numpy-1.24.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    d11efb4dbecbdf22508d55e48d9c8384db795e1b7b51ea735289ff96613ff74d  numpy-1.24.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6620c0acd41dbcb368610bb2f4d83145674040025e5536954782467100aa8835  numpy-1.24.4-cp39-cp39-win32.whl\r\n    befe2bf740fd8373cf56149a5c23a0f601e82869598d41f8e188a0e9869926f8  numpy-1.24.4-cp39-cp39-win_amd64.whl\r\n    31f13e25b4e304632a4619d0e0777662c2ffea99fcae2029556b17d8ff958aef  numpy-1.24.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    95f7ac6540e95bc440ad77f56e520da5bf877f87dca58bd095288dce8940532a  numpy-1.24.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e98f220aa76ca2a977fe435f5b04d7b3470c0a2e6312907b37ba6068f26787f2  numpy-1.24.4-pp38-pypy38_pp73-win_amd64.whl\r\n    80f5e3a4e498641401868df4208b74581206afbee7cf7b8329daae82676d9463  numpy-1.24.4.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/109913580/reactions",
      "total_count": 20,
      "+1": 10,
      "-1": 0,
      "laugh": 0,
      "hooray": 6,
      "confused": 0,
      "heart": 0,
      "rocket": 4,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/108972362",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/108972362/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/108972362/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.25.0",
    "id": 108972362,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84GfslK",
    "tag_name": "v1.25.0",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-06-17T01:47:16Z",
    "published_at": "2023-06-17T15:21:07Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/113190086",
        "id": 113190086,
        "node_id": "RA_kwDOAA3dP84GvyTG",
        "name": "1.25.0-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 60335,
        "download_count": 59,
        "created_at": "2023-06-17T15:00:44Z",
        "updated_at": "2023-06-17T15:00:45Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.0/1.25.0-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/113190130",
        "id": 113190130,
        "node_id": "RA_kwDOAA3dP84GvyTy",
        "name": "numpy-1.25.0.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10426700,
        "download_count": 12317,
        "created_at": "2023-06-17T15:01:35Z",
        "updated_at": "2023-06-17T15:01:50Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.0/numpy-1.25.0.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/113190109",
        "id": 113190109,
        "node_id": "RA_kwDOAA3dP84GvyTd",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 31395,
        "download_count": 62,
        "created_at": "2023-06-17T15:01:12Z",
        "updated_at": "2023-06-17T15:01:12Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.25.0/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.25.0",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.25.0",
    "body": "# NumPy 1.25.0 Release Notes\r\n\r\nThe NumPy 1.25.0 release continues the ongoing work to improve the\r\nhandling and promotion of dtypes, increase the execution speed, and\r\nclarify the documentation. There has also been work to prepare for the\r\nfuture NumPy 2.0.0 release, resulting in a large number of new and\r\nexpired deprecation. Highlights are:\r\n\r\n-   Support for MUSL, there are now MUSL wheels.\r\n-   Support the Fujitsu C/C++ compiler.\r\n-   Object arrays are now supported in einsum\r\n-   Support for inplace matrix multiplication (`@=`).\r\n\r\nWe will be releasing a NumPy 1.26 when Python 3.12 comes out. That is\r\nneeded because distutils has been dropped by Python 3.12 and we will be\r\nswitching to using meson for future builds. The next mainline release\r\nwill be NumPy 2.0.0. We plan that the 2.0 series will still support\r\ndownstream projects built against earlier versions of NumPy.\r\n\r\nThe Python versions supported in this release are 3.9-3.11.\r\n\r\n## Deprecations\r\n\r\n-   `np.core.MachAr` is deprecated. It is private API. In names defined\r\n    in `np.core` should generally be considered private.\r\n\r\n    ([gh-22638](https://github.com/numpy/numpy/pull/22638))\r\n\r\n-   `np.finfo(None)` is deprecated.\r\n\r\n    ([gh-23011](https://github.com/numpy/numpy/pull/23011))\r\n\r\n-   `np.round_` is deprecated. Use `np.round` instead.\r\n\r\n    ([gh-23302](https://github.com/numpy/numpy/pull/23302))\r\n\r\n-   `np.product` is deprecated. Use `np.prod` instead.\r\n\r\n    ([gh-23314](https://github.com/numpy/numpy/pull/23314))\r\n\r\n-   `np.cumproduct` is deprecated. Use `np.cumprod` instead.\r\n\r\n    ([gh-23314](https://github.com/numpy/numpy/pull/23314))\r\n\r\n-   `np.sometrue` is deprecated. Use `np.any` instead.\r\n\r\n    ([gh-23314](https://github.com/numpy/numpy/pull/23314))\r\n\r\n-   `np.alltrue` is deprecated. Use `np.all` instead.\r\n\r\n    ([gh-23314](https://github.com/numpy/numpy/pull/23314))\r\n\r\n-   Only ndim-0 arrays are treated as scalars. NumPy used to treat all\r\n    arrays of size 1 (e.g., `np.array([3.14])`) as scalars. In the\r\n    future, this will be limited to arrays of ndim 0 (e.g.,\r\n    `np.array(3.14)`). The following expressions will report a\r\n    deprecation warning:\r\n\r\n    ``` python\r\n    a = np.array([3.14])\r\n    float(a)  # better: a[0] to get the numpy.float or a.item()\r\n\r\n    b = np.array([[3.14]])\r\n    c = numpy.random.rand(10)\r\n    c[0] = b  # better: c[0] = b[0, 0]\r\n    ```\r\n\r\n    ([gh-10615](https://github.com/numpy/numpy/pull/10615))\r\n\r\n-   `numpy.find_common_type` is now deprecated and its use\r\n    should be replaced with either `numpy.result_type` or\r\n    `numpy.promote_types`. Most users leave the second\r\n    `scalar_types` argument to `find_common_type` as `[]` in which case\r\n    `np.result_type` and `np.promote_types` are both faster and more\r\n    robust. When not using `scalar_types` the main difference is that\r\n    the replacement intentionally converts non-native byte-order to\r\n    native byte order. Further, `find_common_type` returns `object`\r\n    dtype rather than failing promotion. This leads to differences when\r\n    the inputs are not all numeric. Importantly, this also happens for\r\n    e.g. timedelta/datetime for which NumPy promotion rules are\r\n    currently sometimes surprising.\r\n\r\n    When the `scalar_types` argument is not `[]` things are more\r\n    complicated. In most cases, using `np.result_type` and passing the\r\n    Python values `0`, `0.0`, or `0j` has the same result as using\r\n    `int`, `float`, or `complex` in `scalar_types`.\r\n\r\n    When `scalar_types` is constructed, `np.result_type` is the correct\r\n    replacement and it may be passed scalar values like\r\n    `np.float32(0.0)`. Passing values other than 0, may lead to\r\n    value-inspecting behavior (which `np.find_common_type` never used\r\n    and NEP 50 may change in the future). The main possible change in\r\n    behavior in this case, is when the array types are signed integers\r\n    and scalar types are unsigned.\r\n\r\n    If you are unsure about how to replace a use of `scalar_types` or\r\n    when non-numeric dtypes are likely, please do not hesitate to open a\r\n    NumPy issue to ask for help.\r\n\r\n    ([gh-22539](https://github.com/numpy/numpy/pull/22539))\r\n\r\n## Expired deprecations\r\n\r\n-   `np.core.machar` and `np.finfo.machar` have been removed.\r\n\r\n    ([gh-22638](https://github.com/numpy/numpy/pull/22638))\r\n\r\n-   `+arr` will now raise an error when the dtype is not numeric (and\r\n    positive is undefined).\r\n\r\n    ([gh-22998](https://github.com/numpy/numpy/pull/22998))\r\n\r\n-   A sequence must now be passed into the stacking family of functions\r\n    (`stack`, `vstack`, `hstack`, `dstack` and `column_stack`).\r\n\r\n    ([gh-23019](https://github.com/numpy/numpy/pull/23019))\r\n\r\n-   `np.clip` now defaults to same-kind casting. Falling back to unsafe\r\n    casting was deprecated in NumPy 1.17.\r\n\r\n    ([gh-23403](https://github.com/numpy/numpy/pull/23403))\r\n\r\n-   `np.clip` will now propagate `np.nan` values passed as `min` or\r\n    `max`. Previously, a scalar NaN was usually ignored. This was\r\n    deprecated in NumPy 1.17.\r\n\r\n    ([gh-23403](https://github.com/numpy/numpy/pull/23403))\r\n\r\n-   The `np.dual` submodule has been removed.\r\n\r\n    ([gh-23480](https://github.com/numpy/numpy/pull/23480))\r\n\r\n-   NumPy now always ignores sequence behavior for an array-like\r\n    (defining one of the array protocols). (Deprecation started NumPy\r\n    1.20)\r\n\r\n    ([gh-23660](https://github.com/numpy/numpy/pull/23660))\r\n\r\n-   The niche `FutureWarning` when casting to a subarray dtype in\r\n    `astype` or the array creation functions such as `asarray` is now\r\n    finalized. The behavior is now always the same as if the subarray\r\n    dtype was wrapped into a single field (which was the workaround,\r\n    previously). (FutureWarning since NumPy 1.20)\r\n\r\n    ([gh-23666](https://github.com/numpy/numpy/pull/23666))\r\n\r\n-   `==` and `!=` warnings have been finalized. The `==` and `!=`\r\n    operators on arrays now always:\r\n\r\n    -   raise errors that occur during comparisons such as when the\r\n        arrays have incompatible shapes\r\n        (`np.array([1, 2]) == np.array([1, 2, 3])`).\r\n\r\n    -   return an array of all `True` or all `False` when values are\r\n        fundamentally not comparable (e.g. have different dtypes). An\r\n        example is `np.array([\"a\"]) == np.array([1])`.\r\n\r\n        This mimics the Python behavior of returning `False` and `True`\r\n        when comparing incompatible types like `\"a\" == 1` and\r\n        `\"a\" != 1`. For a long time these gave `DeprecationWarning` or\r\n        `FutureWarning`.\r\n\r\n    ([gh-22707](https://github.com/numpy/numpy/pull/22707))\r\n\r\n-   Nose support has been removed. NumPy switched to using pytest in\r\n    2018 and nose has been unmaintained for many years. We have kept\r\n    NumPy\\'s nose support to avoid breaking downstream projects who\r\n    might have been using it and not yet switched to pytest or some\r\n    other testing framework. With the arrival of Python 3.12, unpatched\r\n    nose will raise an error. It is time to move on.\r\n\r\n    *Decorators removed*:\r\n\r\n    -   raises\r\n    -   slow\r\n    -   setastest\r\n    -   skipif\r\n    -   knownfailif\r\n    -   deprecated\r\n    -   parametrize\r\n    -   \\_needs_refcount\r\n\r\n    These are not to be confused with pytest versions with similar\r\n    names, e.g., pytest.mark.slow, pytest.mark.skipif,\r\n    pytest.mark.parametrize.\r\n\r\n    *Functions removed*:\r\n\r\n    -   Tester\r\n    -   import_nose\r\n    -   run_module_suite\r\n\r\n    ([gh-23041](https://github.com/numpy/numpy/pull/23041))\r\n\r\n-   The `numpy.testing.utils` shim has been removed. Importing from the\r\n    `numpy.testing.utils` shim has been deprecated since 2019, the shim\r\n    has now been removed. All imports should be made directly from\r\n    `numpy.testing`.\r\n\r\n    ([gh-23060](https://github.com/numpy/numpy/pull/23060))\r\n\r\n-   The environment variable to disable dispatching has been removed.\r\n    Support for the `NUMPY_EXPERIMENTAL_ARRAY_FUNCTION` environment\r\n    variable has been removed. This variable disabled dispatching with\r\n    `__array_function__`.\r\n\r\n    ([gh-23376](https://github.com/numpy/numpy/pull/23376))\r\n\r\n-   Support for `y=` as an alias of `out=` has been removed. The `fix`,\r\n    `isposinf` and `isneginf` functions allowed using `y=` as a\r\n    (deprecated) alias for `out=`. This is no longer supported.\r\n\r\n    ([gh-23376](https://github.com/numpy/numpy/pull/23376))\r\n\r\n## Compatibility notes\r\n\r\n-   The `busday_count` method now correctly handles cases where the\r\n    `begindates` is later in time than the `enddates`. Previously, the\r\n    `enddates` was included, even though the documentation states it is\r\n    always excluded.\r\n\r\n    ([gh-23229](https://github.com/numpy/numpy/pull/23229))\r\n\r\n-   When comparing datetimes and timedelta using `np.equal` or\r\n    `np.not_equal` numpy previously allowed the comparison with\r\n    `casting=\"unsafe\"`. This operation now fails. Forcing the output\r\n    dtype using the `dtype` kwarg can make the operation succeed, but we\r\n    do not recommend it.\r\n\r\n    ([gh-22707](https://github.com/numpy/numpy/pull/22707))\r\n\r\n-   When loading data from a file handle using `np.load`, if the handle\r\n    is at the end of file, as can happen when reading multiple arrays by\r\n    calling `np.load` repeatedly, numpy previously raised `ValueError`\r\n    if `allow_pickle=False`, and `OSError` if `allow_pickle=True`. Now\r\n    it raises `EOFError` instead, in both cases.\r\n\r\n    ([gh-23105](https://github.com/numpy/numpy/pull/23105))\r\n\r\n### `np.pad` with `mode=wrap` pads with strict multiples of original data\r\n\r\nCode based on earlier version of `pad` that uses `mode=\"wrap\"` will\r\nreturn different results when the padding size is larger than initial\r\narray.\r\n\r\n`np.pad` with `mode=wrap` now always fills the space with strict\r\nmultiples of original data even if the padding size is larger than the\r\ninitial array.\r\n\r\n([gh-22575](https://github.com/numpy/numpy/pull/22575))\r\n\r\n### Cython `long_t` and `ulong_t` removed\r\n\r\n`long_t` and `ulong_t` were aliases for `longlong_t` and `ulonglong_t`\r\nand confusing (a remainder from of Python 2). This change may lead to\r\nthe errors:\r\n\r\n    'long_t' is not a type identifier\r\n    'ulong_t' is not a type identifier\r\n\r\nWe recommend use of bit-sized types such as `cnp.int64_t` or the use of\r\n`cnp.intp_t` which is 32 bits on 32 bit systems and 64 bits on 64 bit\r\nsystems (this is most compatible with indexing). If C `long` is desired,\r\nuse plain `long` or `npy_long`. `cnp.int_t` is also `long` (NumPy\\'s\r\ndefault integer). However, `long` is 32 bit on 64 bit windows and we may\r\nwish to adjust this even in NumPy. (Please do not hesitate to contact\r\nNumPy developers if you are curious about this.)\r\n\r\n([gh-22637](https://github.com/numpy/numpy/pull/22637))\r\n\r\n### Changed error message and type for bad `axes` argument to `ufunc`\r\n\r\nThe error message and type when a wrong `axes` value is passed to\r\n`ufunc(..., axes=[...])` has changed. The message is now more\r\nindicative of the problem, and if the value is mismatched an\r\n`AxisError` will be raised. A `TypeError` will still be raised for\r\ninvalidinput types.\r\n\r\n([gh-22675](https://github.com/numpy/numpy/pull/22675))\r\n\r\n### Array-likes that define `__array_ufunc__` can now override ufuncs if used as `where`\r\n\r\nIf the `where` keyword argument of a `numpy.ufunc`{.interpreted-text\r\nrole=\"class\"} is a subclass of `numpy.ndarray`{.interpreted-text\r\nrole=\"class\"} or is a duck type that defines\r\n`numpy.class.__array_ufunc__`{.interpreted-text role=\"func\"} it can\r\noverride the behavior of the ufunc using the same mechanism as the input\r\nand output arguments. Note that for this to work properly, the\r\n`where.__array_ufunc__` implementation will have to unwrap the `where`\r\nargument to pass it into the default implementation of the `ufunc` or,\r\nfor `numpy.ndarray`{.interpreted-text role=\"class\"} subclasses before\r\nusing `super().__array_ufunc__`.\r\n\r\n([gh-23240](https://github.com/numpy/numpy/pull/23240))\r\n\r\n### Compiling against the NumPy C API is now backwards compatible by default\r\n\r\nNumPy now defaults to exposing a backwards compatible subset of the\r\nC-API. This makes the use of `oldest-supported-numpy` unnecessary.\r\nLibraries can override the default minimal version to be compatible with\r\nusing:\r\n\r\n    #define NPY_TARGET_VERSION NPY_1_22_API_VERSION\r\n\r\nbefore including NumPy or by passing the equivalent `-D` option to the\r\ncompiler. The NumPy 1.25 default is `NPY_1_19_API_VERSION`. Because the\r\nNumPy 1.19 C API was identical to the NumPy 1.16 one resulting programs\r\nwill be compatible with NumPy 1.16 (from a C-API perspective). This\r\ndefault will be increased in future non-bugfix releases. You can still\r\ncompile against an older NumPy version and run on a newer one.\r\n\r\nFor more details please see\r\n`for-downstream-package-authors`{.interpreted-text role=\"ref\"}.\r\n\r\n([gh-23528](https://github.com/numpy/numpy/pull/23528))\r\n\r\n## New Features\r\n\r\n### `np.einsum` now accepts arrays with `object` dtype\r\n\r\nThe code path will call python operators on object dtype arrays, much\r\nlike `np.dot` and `np.matmul`.\r\n\r\n([gh-18053](https://github.com/numpy/numpy/pull/18053))\r\n\r\n### Add support for inplace matrix multiplication\r\n\r\nIt is now possible to perform inplace matrix multiplication via the `@=`\r\noperator.\r\n\r\n``` python\r\n>>> import numpy as np\r\n\r\n>>> a = np.arange(6).reshape(3, 2)\r\n>>> print(a)\r\n[[0 1]\r\n [2 3]\r\n [4 5]]\r\n\r\n>>> b = np.ones((2, 2), dtype=int)\r\n>>> a @= b\r\n>>> print(a)\r\n[[1 1]\r\n [5 5]\r\n [9 9]]\r\n```\r\n\r\n([gh-21120](https://github.com/numpy/numpy/pull/21120))\r\n\r\n### Added `NPY_ENABLE_CPU_FEATURES` environment variable\r\n\r\nUsers may now choose to enable only a subset of the built CPU features\r\nat runtime by specifying the `NPY_ENABLE_CPU_FEATURES`\r\nenvironment variable. Note that these specified features must be outside\r\nthe baseline, since those are always assumed. Errors will be raised if\r\nattempting to enable a feature that is either not supported by your CPU,\r\nor that NumPy was not built with.\r\n\r\n([gh-22137](https://github.com/numpy/numpy/pull/22137))\r\n\r\n### NumPy now has an `np.exceptions` namespace\r\n\r\nNumPy now has a dedicated namespace making most exceptions and warnings\r\navailable. All of these remain available in the main namespace, although\r\nsome may be moved slowly in the future. The main reason for this is to\r\nincrease discoverability and add future exceptions.\r\n\r\n([gh-22644](https://github.com/numpy/numpy/pull/22644))\r\n\r\n### `np.linalg` functions return NamedTuples\r\n\r\n`np.linalg` functions that return tuples now return namedtuples. These\r\nfunctions are `eig()`, `eigh()`, `qr()`, `slogdet()`, and `svd()`. The\r\nreturn type is unchanged in instances where these functions return\r\nnon-tuples with certain keyword arguments (like\r\n`svd(compute_uv=False)`).\r\n\r\n([gh-22786](https://github.com/numpy/numpy/pull/22786))\r\n\r\n### String functions in `np.char` are compatible with NEP 42 custom dtypes\r\n\r\nCustom dtypes that represent unicode strings or byte strings can now be\r\npassed to the string functions in `np.char`.\r\n\r\n([gh-22863](https://github.com/numpy/numpy/pull/22863))\r\n\r\n### String dtype instances can be created from the string abstract dtype classes\r\n\r\nIt is now possible to create a string dtype instance with a size without\r\nusing the string name of the dtype. For example,\r\n`type(np.dtype('U'))(8)` will create a dtype that is equivalent to\r\n`np.dtype('U8')`. This feature is most useful when writing generic code\r\ndealing with string dtype classes.\r\n\r\n([gh-22963](https://github.com/numpy/numpy/pull/22963))\r\n\r\n### Fujitsu C/C++ compiler is now supported\r\n\r\nSupport for Fujitsu compiler has been added. To build with Fujitsu\r\ncompiler, run:\r\n\r\n> python setup.py build -c fujitsu\r\n\r\n### SSL2 is now supported\r\n\r\nSupport for SSL2 has been added. SSL2 is a library that provides\r\nOpenBLAS compatible GEMM functions. To enable SSL2, it need to edit\r\nsite.cfg and build with Fujitsu compiler. See site.cfg.example.\r\n\r\n([gh-22982](https://github.com/numpy/numpy/pull/22982))\r\n\r\n## Improvements\r\n\r\n### `NDArrayOperatorsMixin` specifies that it has no `__slots__`\r\n\r\nThe `NDArrayOperatorsMixin` class now specifies that it contains no\r\n`__slots__`, ensuring that subclasses can now make use of this feature\r\nin Python.\r\n\r\n([gh-23113](https://github.com/numpy/numpy/pull/23113))\r\n\r\n### Fix power of complex zero\r\n\r\n`np.power` now returns a different result for `0^{non-zero}` for complex\r\nnumbers. Note that the value is only defined when the real part of the\r\nexponent is larger than zero. Previously, NaN was returned unless the\r\nimaginary part was strictly zero. The return value is either `0+0j` or\r\n`0-0j`.\r\n\r\n([gh-18535](https://github.com/numpy/numpy/pull/18535))\r\n\r\n### New `DTypePromotionError`\r\n\r\nNumPy now has a new `DTypePromotionError` which is used when two dtypes\r\ncannot be promoted to a common one, for example:\r\n\r\n    np.result_type(\"M8[s]\", np.complex128)\r\n\r\nraises this new exception.\r\n\r\n([gh-22707](https://github.com/numpy/numpy/pull/22707))\r\n\r\n### `np.show_config` uses information from Meson\r\n\r\nBuild and system information now contains information from Meson.\r\n`np.show_config` now has a new optional parameter `mode` to\r\nhelp customize the output.\r\n\r\n([gh-22769](https://github.com/numpy/numpy/pull/22769))\r\n\r\n### Fix `np.ma.diff` not preserving the mask when called with arguments prepend/append.\r\n\r\nCalling `np.ma.diff` with arguments prepend and/or append now returns a\r\n`MaskedArray` with the input mask preserved.\r\n\r\nPreviously, a `MaskedArray` without the mask was returned.\r\n\r\n([gh-22776](https://github.com/numpy/numpy/pull/22776))\r\n\r\n### Corrected error handling for NumPy C-API in Cython\r\n\r\nMany NumPy C functions defined for use in Cython were lacking the\r\ncorrect error indicator like `except -1` or `except *`. These have now\r\nbeen added.\r\n\r\n([gh-22997](https://github.com/numpy/numpy/pull/22997))\r\n\r\n### Ability to directly spawn random number generators\r\n\r\n`numpy.random.Generator.spawn` now allows to directly spawn new independent\r\nchild generators via the `numpy.random.SeedSequence.spawn` mechanism.\r\n`numpy.random.BitGenerator.spawn` does the same for the underlying bit\r\ngenerator.\r\n\r\nAdditionally, `numpy.random.BitGenerator.seed_seq` now gives\r\ndirect access to the seed sequence used for initializing the bit\r\ngenerator. This allows for example:\r\n\r\n    seed = 0x2e09b90939db40c400f8f22dae617151\r\n    rng = np.random.default_rng(seed)\r\n    child_rng1, child_rng2 = rng.spawn(2)\r\n\r\n    # safely use rng, child_rng1, and child_rng2\r\n\r\nPreviously, this was hard to do without passing the `SeedSequence`\r\nexplicitly. Please see `numpy.random.SeedSequence` for more\r\ninformation.\r\n\r\n([gh-23195](https://github.com/numpy/numpy/pull/23195))\r\n\r\n### `numpy.logspace` now supports a non-scalar `base` argument\r\n\r\nThe `base` argument of `numpy.logspace` can now be array-like if it is\r\nbroadcastable against the `start` and `stop` arguments.\r\n\r\n([gh-23275](https://github.com/numpy/numpy/pull/23275))\r\n\r\n### `np.ma.dot()` now supports for non-2d arrays\r\n\r\nPreviously `np.ma.dot()` only worked if `a` and `b` were both 2d. Now it\r\nworks for non-2d arrays as well as `np.dot()`.\r\n\r\n([gh-23322](https://github.com/numpy/numpy/pull/23322))\r\n\r\n### Explicitly show keys of .npz file in repr\r\n\r\n`NpzFile` shows keys of loaded .npz file when printed.\r\n\r\n``` python\r\n>>> npzfile = np.load('arr.npz')\r\n>>> npzfile\r\nNpzFile 'arr.npz' with keys arr_0, arr_1, arr_2, arr_3, arr_4...\r\n```\r\n\r\n([gh-23357](https://github.com/numpy/numpy/pull/23357))\r\n\r\n### NumPy now exposes DType classes in `np.dtypes`\r\n\r\nThe new `numpy.dtypes` module now exposes DType classes and will contain\r\nfuture dtype related functionality. Most users should have no need to\r\nuse these classes directly.\r\n\r\n([gh-23358](https://github.com/numpy/numpy/pull/23358))\r\n\r\n### Drop dtype metadata before saving in .npy or .npz files\r\n\r\nCurrently, a `*.npy` file containing a table with a dtype with metadata cannot\r\nbe read back. Now, `np.save` and `np.savez` drop metadata before saving.\r\n\r\n([gh-23371](https://github.com/numpy/numpy/pull/23371))\r\n\r\n### `numpy.lib.recfunctions.structured_to_unstructured` returns views in more cases\r\n\r\n`structured_to_unstructured` now returns a view, if the stride between\r\nthe fields is constant. Prior, padding between the fields or a reversed\r\nfield would lead to a copy. This change only applies to `ndarray`,\r\n`memmap` and `recarray`. For all other array subclasses, the behavior\r\nremains unchanged.\r\n\r\n([gh-23652](https://github.com/numpy/numpy/pull/23652))\r\n\r\n### Signed and unsigned integers always compare correctly\r\n\r\nWhen `uint64` and `int64` are mixed in NumPy, NumPy typically promotes\r\nboth to `float64`. This behavior may be argued about but is confusing\r\nfor comparisons `==`, `<=`, since the results returned can be incorrect\r\nbut the conversion is hidden since the result is a boolean. NumPy will\r\nnow return the correct results for these by avoiding the cast to float.\r\n\r\n([gh-23713](https://github.com/numpy/numpy/pull/23713))\r\n\r\n## Performance improvements and changes\r\n\r\n### Faster `np.argsort` on AVX-512 enabled processors\r\n\r\n32-bit and 64-bit quicksort algorithm for np.argsort gain up to 6x speed\r\nup on processors that support AVX-512 instruction set.\r\n\r\nThanks to [Intel corporation](https://open.intel.com/) for sponsoring\r\nthis work.\r\n\r\n([gh-23707](https://github.com/numpy/numpy/pull/23707))\r\n\r\n### Faster `np.sort` on AVX-512 enabled processors\r\n\r\nQuicksort for 16-bit and 64-bit dtypes gain up to 15x and 9x speed up on\r\nprocessors that support AVX-512 instruction set.\r\n\r\nThanks to [Intel corporation](https://open.intel.com/) for sponsoring\r\nthis work.\r\n\r\n([gh-22315](https://github.com/numpy/numpy/pull/22315))\r\n\r\n### `__array_function__` machinery is now much faster\r\n\r\nThe overhead of the majority of functions in NumPy is now smaller\r\nespecially when keyword arguments are used. This change significantly\r\nspeeds up many simple function calls.\r\n\r\n([gh-23020](https://github.com/numpy/numpy/pull/23020))\r\n\r\n### `ufunc.at` can be much faster\r\n\r\nGeneric `ufunc.at` can be up to 9x faster. The conditions for this\r\nspeedup:\r\n\r\n-   operands are aligned\r\n-   no casting\r\n\r\nIf ufuncs with appropriate indexed loops on 1d arguments with the above\r\nconditions, `ufunc.at` can be up to 60x faster (an additional 7x\r\nspeedup). Appropriate indexed loops have been added to `add`,\r\n`subtract`, `multiply`, `floor_divide`, `maximum`, `minimum`, `fmax`,\r\nand `fmin`.\r\n\r\nThe internal logic is similar to the logic used for regular ufuncs,\r\nwhich also have fast paths.\r\n\r\nThanks to the [D. E. Shaw group](https://deshaw.com/) for sponsoring\r\nthis work.\r\n\r\n([gh-23136](https://github.com/numpy/numpy/pull/23136))\r\n\r\n### Faster membership test on `NpzFile`\r\n\r\nMembership test on `NpzFile` will no longer decompress the archive if it\r\nis successful.\r\n\r\n([gh-23661](https://github.com/numpy/numpy/pull/23661))\r\n\r\n## Changes\r\n\r\n### `np.r_[]` and `np.c_[]` with certain scalar values\r\n\r\nIn rare cases, using mainly `np.r_` with scalars can lead to different\r\nresults. The main potential changes are highlighted by the following:\r\n\r\n    >>> np.r_[np.arange(5, dtype=np.uint8), -1].dtype\r\n    int16  # rather than the default integer (int64 or int32)\r\n    >>> np.r_[np.arange(5, dtype=np.int8), 255]\r\n    array([  0,   1,   2,   3,   4, 255], dtype=int16)\r\n\r\nWhere the second example returned:\r\n\r\n    array([ 0,  1,  2,  3,  4, -1], dtype=int8)\r\n\r\nThe first one is due to a signed integer scalar with an unsigned integer\r\narray, while the second is due to `255` not fitting into `int8` and\r\nNumPy currently inspecting values to make this work. (Note that the\r\nsecond example is expected to change in the future due to\r\n`NEP 50 <NEP50>`{.interpreted-text role=\"ref\"}; it will then raise an\r\nerror.)\r\n\r\n([gh-22539](https://github.com/numpy/numpy/pull/22539))\r\n\r\n### Most NumPy functions are wrapped into a C-callable\r\n\r\nTo speed up the `__array_function__` dispatching, most NumPy functions\r\nare now wrapped into C-callables and are not proper Python functions or\r\nC methods. They still look and feel the same as before (like a Python\r\nfunction), and this should only improve performance and user experience\r\n(cleaner tracebacks). However, please inform the NumPy developers if\r\nthis change confuses your program for some reason.\r\n\r\n([gh-23020](https://github.com/numpy/numpy/pull/23020))\r\n\r\n### C++ standard library usage\r\n\r\nNumPy builds now depend on the C++ standard library, because the\r\n`numpy.core._multiarray_umath` extension is linked with the C++ linker.\r\n\r\n([gh-23601](https://github.com/numpy/numpy/pull/23601))\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    4657f046d9d9d62e4baeae9b2cc1b4ea  numpy-1.25.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    f57f98fee3da2d98f752f755a880a508  numpy-1.25.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    72b0ad52f96a41a7a82f511cb35c7ef1  numpy-1.25.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a61227341b8903fa66ab0e0fdaa15430  numpy-1.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    bfccabfbd866c59545ce11ecdac60701  numpy-1.25.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    22402904f194376b8d2de01481f04b03  numpy-1.25.0-cp310-cp310-win32.whl\r\n    e983b193f7d63568eac85d8bda8be62e  numpy-1.25.0-cp310-cp310-win_amd64.whl\r\n    5f6477db172f59a4fd7f591e1007e632  numpy-1.25.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    6a85cca47af69e3d45b4efab9490af4d  numpy-1.25.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    ad1c0b4b406c9a2f1b42792502bc456b  numpy-1.25.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    39e241f265611a9c1e89499054ead1c9  numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e36b37acf1acfbc185face67c67bfe09  numpy-1.25.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    67862d7849b4f0f943760142f1628aed  numpy-1.25.0-cp311-cp311-win32.whl\r\n    6e8ed7865792246cac2213bad404f4da  numpy-1.25.0-cp311-cp311-win_amd64.whl\r\n    25e843425697364f50dd7288ff9d2ce1  numpy-1.25.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    58641e53bcb1e13dfed1f5af1aff94bc  numpy-1.25.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    ce15327793c39beecee8401356bc6c9b  numpy-1.25.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    34b734a2c7698d59954c29fe7c0536f3  numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6652d9df23c84e54466b10f4a2a290be  numpy-1.25.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    c228105e3c4c8887823d99e35eea9d2b  numpy-1.25.0-cp39-cp39-win32.whl\r\n    1322210ae6a874293d13c4bb3abf24ee  numpy-1.25.0-cp39-cp39-win_amd64.whl\r\n    dc36096628e65077c2a44c493606c668  numpy-1.25.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    942b4276f8d563efb111921d5995834c  numpy-1.25.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0fa0734a8ff952dd643e7b9826168099  numpy-1.25.0-pp39-pypy39_pp73-win_amd64.whl\r\n    b236497153bc19b4a560ac485e4c2754  numpy-1.25.0.tar.gz\r\n\r\n### SHA256\r\n\r\n    8aa130c3042052d656751df5e81f6d61edff3e289b5994edcf77f54118a8d9f4  numpy-1.25.0-cp310-cp310-macosx_10_9_x86_64.whl\r\n    9e3f2b96e3b63c978bc29daaa3700c028fe3f049ea3031b58aa33fe2a5809d24  numpy-1.25.0-cp310-cp310-macosx_11_0_arm64.whl\r\n    d6b267f349a99d3908b56645eebf340cb58f01bd1e773b4eea1a905b3f0e4208  numpy-1.25.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4aedd08f15d3045a4e9c648f1e04daca2ab1044256959f1f95aafeeb3d794c16  numpy-1.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6d183b5c58513f74225c376643234c369468e02947b47942eacbb23c1671f25d  numpy-1.25.0-cp310-cp310-musllinux_1_1_x86_64.whl\r\n    d76a84998c51b8b68b40448ddd02bd1081bb33abcdc28beee6cd284fe11036c6  numpy-1.25.0-cp310-cp310-win32.whl\r\n    c0dc071017bc00abb7d7201bac06fa80333c6314477b3d10b52b58fa6a6e38f6  numpy-1.25.0-cp310-cp310-win_amd64.whl\r\n    4c69fe5f05eea336b7a740e114dec995e2f927003c30702d896892403df6dbf0  numpy-1.25.0-cp311-cp311-macosx_10_9_x86_64.whl\r\n    9c7211d7920b97aeca7b3773a6783492b5b93baba39e7c36054f6e749fc7490c  numpy-1.25.0-cp311-cp311-macosx_11_0_arm64.whl\r\n    ecc68f11404930e9c7ecfc937aa423e1e50158317bf67ca91736a9864eae0232  numpy-1.25.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e559c6afbca484072a98a51b6fa466aae785cfe89b69e8b856c3191bc8872a82  numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6c284907e37f5e04d2412950960894b143a648dea3f79290757eb878b91acbd1  numpy-1.25.0-cp311-cp311-musllinux_1_1_x86_64.whl\r\n    95367ccd88c07af21b379be1725b5322362bb83679d36691f124a16357390153  numpy-1.25.0-cp311-cp311-win32.whl\r\n    b76aa836a952059d70a2788a2d98cb2a533ccd46222558b6970348939e55fc24  numpy-1.25.0-cp311-cp311-win_amd64.whl\r\n    b792164e539d99d93e4e5e09ae10f8cbe5466de7d759fc155e075237e0c274e4  numpy-1.25.0-cp39-cp39-macosx_10_9_x86_64.whl\r\n    7cd981ccc0afe49b9883f14761bb57c964df71124dcd155b0cba2b591f0d64b9  numpy-1.25.0-cp39-cp39-macosx_11_0_arm64.whl\r\n    5aa48bebfb41f93043a796128854b84407d4df730d3fb6e5dc36402f5cd594c0  numpy-1.25.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    5177310ac2e63d6603f659fadc1e7bab33dd5a8db4e0596df34214eeab0fee3b  numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0ac6edfb35d2a99aaf102b509c8e9319c499ebd4978df4971b94419a116d0790  numpy-1.25.0-cp39-cp39-musllinux_1_1_x86_64.whl\r\n    7412125b4f18aeddca2ecd7219ea2d2708f697943e6f624be41aa5f8a9852cc4  numpy-1.25.0-cp39-cp39-win32.whl\r\n    26815c6c8498dc49d81faa76d61078c4f9f0859ce7817919021b9eba72b425e3  numpy-1.25.0-cp39-cp39-win_amd64.whl\r\n    5b1b90860bf7d8a8c313b372d4f27343a54f415b20fb69dd601b7efe1029c91e  numpy-1.25.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\r\n    85cdae87d8c136fd4da4dad1e48064d700f63e923d5af6c8c782ac0df8044542  numpy-1.25.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    cc3fda2b36482891db1060f00f881c77f9423eead4c3579629940a3e12095fe8  numpy-1.25.0-pp39-pypy39_pp73-win_amd64.whl\r\n    f1accae9a28dc3cda46a91de86acf69de0d1b5f4edd44a9b0c3ceb8036dfff19  numpy-1.25.0.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/108972362/reactions",
      "total_count": 54,
      "+1": 13,
      "-1": 0,
      "laugh": 0,
      "hooray": 20,
      "confused": 0,
      "heart": 6,
      "rocket": 14,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/100534104",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/100534104/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/100534104/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.24.3",
    "id": 100534104,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84F_gdY",
    "tag_name": "v1.24.3",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-04-22T19:08:49Z",
    "published_at": "2023-04-22T21:58:39Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/104853275",
        "id": 104853275,
        "node_id": "RA_kwDOAA3dP84GP-8b",
        "name": "1.24.3-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2413,
        "download_count": 460,
        "created_at": "2023-04-22T21:58:14Z",
        "updated_at": "2023-04-22T21:58:14Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.3/1.24.3-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/104853139",
        "id": 104853139,
        "node_id": "RA_kwDOAA3dP84GP-6T",
        "name": "numpy-1.24.3.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10909904,
        "download_count": 18395,
        "created_at": "2023-04-22T21:55:27Z",
        "updated_at": "2023-04-22T21:55:43Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.3/numpy-1.24.3.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/104853321",
        "id": 104853321,
        "node_id": "RA_kwDOAA3dP84GP-9J",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 8634,
        "download_count": 651,
        "created_at": "2023-04-22T21:58:31Z",
        "updated_at": "2023-04-22T21:58:32Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.3/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.24.3",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.24.3",
    "body": "# NumPy 1.24.3 Release Notes\r\n\r\nNumPy 1.24.3 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.24.2 release. The Python versions supported by\r\nthis release are 3.8-3.11.\r\n\r\n## Contributors\r\n\r\nA total of 12 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Aleksei Nikiforov +\r\n-   Alexander Heger\r\n-   Bas van Beek\r\n-   Bob Eldering\r\n-   Brock Mendel\r\n-   Charles Harris\r\n-   Kyle Sunden\r\n-   Peter Hawkins\r\n-   Rohit Goswami\r\n-   Sebastian Berg\r\n-   Warren Weckesser\r\n-   dependabot\\[bot\\]\r\n\r\n## Pull requests merged\r\n\r\nA total of 17 pull requests were merged for this release.\r\n\r\n-   [#23206](https://github.com/numpy/numpy/pull/23206): BUG: fix for f2py string scalars (#23194)\r\n-   [#23207](https://github.com/numpy/numpy/pull/23207): BUG: datetime64/timedelta64 comparisons return NotImplemented\r\n-   [#23208](https://github.com/numpy/numpy/pull/23208): MAINT: Pin matplotlib to version 3.6.3 for refguide checks\r\n-   [#23221](https://github.com/numpy/numpy/pull/23221): DOC: Fix matplotlib error in documentation\r\n-   [#23226](https://github.com/numpy/numpy/pull/23226): CI: Ensure submodules are initialized in gitpod.\r\n-   [#23341](https://github.com/numpy/numpy/pull/23341): TYP: Replace duplicate reduce in ufunc type signature with reduceat.\r\n-   [#23342](https://github.com/numpy/numpy/pull/23342): TYP: Remove duplicate CLIP/WRAP/RAISE in `__init__.pyi`.\r\n-   [#23343](https://github.com/numpy/numpy/pull/23343): TYP: Mark `d` argument to fftfreq and rfftfreq as optional\\...\r\n-   [#23344](https://github.com/numpy/numpy/pull/23344): TYP: Add type annotations for comparison operators to MaskedArray.\r\n-   [#23345](https://github.com/numpy/numpy/pull/23345): TYP: Remove some stray type-check-only imports of `msort`\r\n-   [#23370](https://github.com/numpy/numpy/pull/23370): BUG: Ensure like is only stripped for `like=` dispatched functions\r\n-   [#23543](https://github.com/numpy/numpy/pull/23543): BUG: fix loading and storing big arrays on s390x\r\n-   [#23544](https://github.com/numpy/numpy/pull/23544): MAINT: Bump larsoner/circleci-artifacts-redirector-action\r\n-   [#23634](https://github.com/numpy/numpy/pull/23634): BUG: Ignore invalid and overflow warnings in masked setitem\r\n-   [#23635](https://github.com/numpy/numpy/pull/23635): BUG: Fix masked array raveling when `order=\"A\"` or `order=\"K\"`\r\n-   [#23636](https://github.com/numpy/numpy/pull/23636): MAINT: Update conftest for newer hypothesis versions\r\n-   [#23637](https://github.com/numpy/numpy/pull/23637): BUG: Fix bug in parsing F77 style string arrays.\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    93a3ce07e3773842c54d831f18e3eb8d  numpy-1.24.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    39691ff3d1612438dfcd3266c9765aab  numpy-1.24.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    a99234799a239e7e9c6fa15c212996df  numpy-1.24.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    3673aa638746851dd19d5199e1eb3a91  numpy-1.24.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    3c72962360bcd0938a6bddee6cdca766  numpy-1.24.3-cp310-cp310-win32.whl\r\n    a3329efa646012fa4ee06ce5e08eadaf  numpy-1.24.3-cp310-cp310-win_amd64.whl\r\n    5323fb0323d1ec10ee3c35a2fa79cbcd  numpy-1.24.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    cfa001dcd07cdf6414ced433e88959d4  numpy-1.24.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    d75bbfb06ed00d04232dce0e865eb42c  numpy-1.24.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    fe18b810bcf284572467ce585dbc533b  numpy-1.24.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e97699a4ef96a81e0916bdf15440abe0  numpy-1.24.3-cp311-cp311-win32.whl\r\n    e6de5b7d77dc43ed47f516eb10bbe8b6  numpy-1.24.3-cp311-cp311-win_amd64.whl\r\n    dd04ebf441a8913f4900b56e7a33a75e  numpy-1.24.3-cp38-cp38-macosx_10_9_x86_64.whl\r\n    e47ac5521b0bfc3effb040072d8a7902  numpy-1.24.3-cp38-cp38-macosx_11_0_arm64.whl\r\n    7b7dae3309e7ca8a8859633a5d337431  numpy-1.24.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    8cc87b88163ed84e70c48fd0f5f8f20e  numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    350934bae971d0ebe231a59b640069db  numpy-1.24.3-cp38-cp38-win32.whl\r\n    c4708ef009bb5d427ea94a4fc4a10e12  numpy-1.24.3-cp38-cp38-win_amd64.whl\r\n    44b08a293a4e12d62c27b8f15ba5664e  numpy-1.24.3-cp39-cp39-macosx_10_9_x86_64.whl\r\n    3ae7ac30f86c720e42b2324a0ae1adf5  numpy-1.24.3-cp39-cp39-macosx_11_0_arm64.whl\r\n    065464a8d918c670c7863d1e72e3e6dd  numpy-1.24.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    1f163b9ea417c253e84480aa8d99dee6  numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c86e648389e333e062bea11c749b9a32  numpy-1.24.3-cp39-cp39-win32.whl\r\n    bfe332e577c604d6d62a57381e6aa0a6  numpy-1.24.3-cp39-cp39-win_amd64.whl\r\n    374695eeef5aca32a5b7f2f518dd3ba1  numpy-1.24.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    6abd9dba54405182e6e7bb32dbe377bb  numpy-1.24.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    0848bd41c08dd5ebbc5a7f0788678e0e  numpy-1.24.3-pp38-pypy38_pp73-win_amd64.whl\r\n    89e5e2e78407032290ae6acf6dcaea46  numpy-1.24.3.tar.gz\r\n\r\n### SHA256\r\n\r\n    3c1104d3c036fb81ab923f507536daedc718d0ad5a8707c6061cdfd6d184e570  numpy-1.24.3-cp310-cp310-macosx_10_9_x86_64.whl\r\n    202de8f38fc4a45a3eea4b63e2f376e5f2dc64ef0fa692838e31a808520efaf7  numpy-1.24.3-cp310-cp310-macosx_11_0_arm64.whl\r\n    8535303847b89aa6b0f00aa1dc62867b5a32923e4d1681a35b5eef2d9591a463  numpy-1.24.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2d926b52ba1367f9acb76b0df6ed21f0b16a1ad87c6720a1121674e5cf63e2b6  numpy-1.24.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    f21c442fdd2805e91799fbe044a7b999b8571bb0ab0f7850d0cb9641a687092b  numpy-1.24.3-cp310-cp310-win32.whl\r\n    ab5f23af8c16022663a652d3b25dcdc272ac3f83c3af4c02eb8b824e6b3ab9d7  numpy-1.24.3-cp310-cp310-win_amd64.whl\r\n    9a7721ec204d3a237225db3e194c25268faf92e19338a35f3a224469cb6039a3  numpy-1.24.3-cp311-cp311-macosx_10_9_x86_64.whl\r\n    d6cc757de514c00b24ae8cf5c876af2a7c3df189028d68c0cb4eaa9cd5afc2bf  numpy-1.24.3-cp311-cp311-macosx_11_0_arm64.whl\r\n    76e3f4e85fc5d4fd311f6e9b794d0c00e7002ec122be271f2019d63376f1d385  numpy-1.24.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a1d3c026f57ceaad42f8231305d4653d5f05dc6332a730ae5c0bea3513de0950  numpy-1.24.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c91c4afd8abc3908e00a44b2672718905b8611503f7ff87390cc0ac3423fb096  numpy-1.24.3-cp311-cp311-win32.whl\r\n    5342cf6aad47943286afa6f1609cad9b4266a05e7f2ec408e2cf7aea7ff69d80  numpy-1.24.3-cp311-cp311-win_amd64.whl\r\n    7776ea65423ca6a15255ba1872d82d207bd1e09f6d0894ee4a64678dd2204078  numpy-1.24.3-cp38-cp38-macosx_10_9_x86_64.whl\r\n    ae8d0be48d1b6ed82588934aaaa179875e7dc4f3d84da18d7eae6eb3f06c242c  numpy-1.24.3-cp38-cp38-macosx_11_0_arm64.whl\r\n    ecde0f8adef7dfdec993fd54b0f78183051b6580f606111a6d789cd14c61ea0c  numpy-1.24.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    4749e053a29364d3452c034827102ee100986903263e89884922ef01a0a6fd2f  numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    d933fabd8f6a319e8530d0de4fcc2e6a61917e0b0c271fded460032db42a0fe4  numpy-1.24.3-cp38-cp38-win32.whl\r\n    56e48aec79ae238f6e4395886b5eaed058abb7231fb3361ddd7bfdf4eed54289  numpy-1.24.3-cp38-cp38-win_amd64.whl\r\n    4719d5aefb5189f50887773699eaf94e7d1e02bf36c1a9d353d9f46703758ca4  numpy-1.24.3-cp39-cp39-macosx_10_9_x86_64.whl\r\n    0ec87a7084caa559c36e0a2309e4ecb1baa03b687201d0a847c8b0ed476a7187  numpy-1.24.3-cp39-cp39-macosx_11_0_arm64.whl\r\n    ea8282b9bcfe2b5e7d491d0bf7f3e2da29700cec05b49e64d6246923329f2b02  numpy-1.24.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    210461d87fb02a84ef243cac5e814aad2b7f4be953b32cb53327bb49fd77fbb4  numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    784c6da1a07818491b0ffd63c6bbe5a33deaa0e25a20e1b3ea20cf0e43f8046c  numpy-1.24.3-cp39-cp39-win32.whl\r\n    d5036197ecae68d7f491fcdb4df90082b0d4960ca6599ba2659957aafced7c17  numpy-1.24.3-cp39-cp39-win_amd64.whl\r\n    352ee00c7f8387b44d19f4cada524586f07379c0d49270f87233983bc5087ca0  numpy-1.24.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    1a7d6acc2e7524c9955e5c903160aa4ea083736fde7e91276b0e5d98e6332812  numpy-1.24.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    35400e6a8d102fd07c71ed7dcadd9eb62ee9a6e84ec159bd48c28235bbb0f8e4  numpy-1.24.3-pp38-pypy38_pp73-win_amd64.whl\r\n    ab344f1bf21f140adab8e47fdbc7c35a477dc01408791f8ba00d018dd0bc5155  numpy-1.24.3.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/100534104/reactions",
      "total_count": 24,
      "+1": 6,
      "-1": 0,
      "laugh": 3,
      "hooray": 6,
      "confused": 0,
      "heart": 9,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/numpy/numpy/releases/91397335",
    "assets_url": "https://api.github.com/repos/numpy/numpy/releases/91397335/assets",
    "upload_url": "https://uploads.github.com/repos/numpy/numpy/releases/91397335/assets{?name,label}",
    "html_url": "https://github.com/numpy/numpy/releases/tag/v1.24.2",
    "id": 91397335,
    "author": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "node_id": "RE_kwDOAA3dP84FcpzX",
    "tag_name": "v1.24.2",
    "target_commitish": "main",
    "name": "",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-02-05T17:12:30Z",
    "published_at": "2023-02-05T20:16:57Z",
    "assets": [
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/94417521",
        "id": 94417521,
        "node_id": "RA_kwDOAA3dP84FoLJx",
        "name": "1.24.2-changelog.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 2418,
        "download_count": 648,
        "created_at": "2023-02-05T20:15:33Z",
        "updated_at": "2023-02-05T20:15:33Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.2/1.24.2-changelog.rst"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/94417557",
        "id": 94417557,
        "node_id": "RA_kwDOAA3dP84FoLKV",
        "name": "numpy-1.24.2.tar.gz",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "application/gzip",
        "state": "uploaded",
        "size": 10906862,
        "download_count": 23325,
        "created_at": "2023-02-05T20:16:15Z",
        "updated_at": "2023-02-05T20:16:31Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.2/numpy-1.24.2.tar.gz"
      },
      {
        "url": "https://api.github.com/repos/numpy/numpy/releases/assets/94417530",
        "id": 94417530,
        "node_id": "RA_kwDOAA3dP84FoLJ6",
        "name": "README.rst",
        "label": null,
        "uploader": {
          "login": "charris",
          "id": 77272,
          "node_id": "MDQ6VXNlcjc3Mjcy",
          "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/charris",
          "html_url": "https://github.com/charris",
          "followers_url": "https://api.github.com/users/charris/followers",
          "following_url": "https://api.github.com/users/charris/following{/other_user}",
          "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
          "organizations_url": "https://api.github.com/users/charris/orgs",
          "repos_url": "https://api.github.com/users/charris/repos",
          "events_url": "https://api.github.com/users/charris/events{/privacy}",
          "received_events_url": "https://api.github.com/users/charris/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "content_type": "text/x-rst",
        "state": "uploaded",
        "size": 8629,
        "download_count": 906,
        "created_at": "2023-02-05T20:15:54Z",
        "updated_at": "2023-02-05T20:15:54Z",
        "browser_download_url": "https://github.com/numpy/numpy/releases/download/v1.24.2/README.rst"
      }
    ],
    "tarball_url": "https://api.github.com/repos/numpy/numpy/tarball/v1.24.2",
    "zipball_url": "https://api.github.com/repos/numpy/numpy/zipball/v1.24.2",
    "body": "# NumPy 1.24.2 Release Notes\r\n\r\nNumPy 1.24.2 is a maintenance release that fixes bugs and regressions\r\ndiscovered after the 1.24.1 release. The Python versions supported by\r\nthis release are 3.8-3.11.\r\n\r\n## Contributors\r\n\r\nA total of 14 people contributed to this release. People with a \\\"+\\\" by\r\ntheir names contributed a patch for the first time.\r\n\r\n-   Bas van Beek\r\n-   Charles Harris\r\n-   Khem Raj +\r\n-   Mark Harfouche\r\n-   Matti Picus\r\n-   Panagiotis Zestanakis +\r\n-   Peter Hawkins\r\n-   Pradipta Ghosh\r\n-   Ross Barnowski\r\n-   Sayed Adel\r\n-   Sebastian Berg\r\n-   Syam Gadde +\r\n-   dmbelov +\r\n-   pkubaj +\r\n\r\n## Pull requests merged\r\n\r\nA total of 17 pull requests were merged for this release.\r\n\r\n-   [#22965](https://github.com/numpy/numpy/pull/22965): MAINT: Update python 3.11-dev to 3.11.\r\n-   [#22966](https://github.com/numpy/numpy/pull/22966): DOC: Remove dangling deprecation warning\r\n-   [#22967](https://github.com/numpy/numpy/pull/22967): ENH: Detect CPU features on FreeBSD/powerpc64\\*\r\n-   [#22968](https://github.com/numpy/numpy/pull/22968): BUG: np.loadtxt cannot load text file with quoted fields separated\\...\r\n-   [#22969](https://github.com/numpy/numpy/pull/22969): TST: Add fixture to avoid issue with randomizing test order.\r\n-   [#22970](https://github.com/numpy/numpy/pull/22970): BUG: Fix fill violating read-only flag. (#22959)\r\n-   [#22971](https://github.com/numpy/numpy/pull/22971): MAINT: Add additional information to missing scalar AttributeError\r\n-   [#22972](https://github.com/numpy/numpy/pull/22972): MAINT: Move export for scipy arm64 helper into main module\r\n-   [#22976](https://github.com/numpy/numpy/pull/22976): BUG, SIMD: Fix spurious invalid exception for sin/cos on arm64/clang\r\n-   [#22989](https://github.com/numpy/numpy/pull/22989): BUG: Ensure correct loop order in sin, cos, and arctan2\r\n-   [#23030](https://github.com/numpy/numpy/pull/23030): DOC: Add version added information for the strict parameter in\\...\r\n-   [#23031](https://github.com/numpy/numpy/pull/23031): BUG: use `_Alignof` rather than `offsetof()` on most compilers\r\n-   [#23147](https://github.com/numpy/numpy/pull/23147): BUG: Fix for npyv\\_\\_trunc_s32_f32 (VXE)\r\n-   [#23148](https://github.com/numpy/numpy/pull/23148): BUG: Fix integer / float scalar promotion\r\n-   [#23149](https://github.com/numpy/numpy/pull/23149): BUG: Add missing \\<type_traits> header.\r\n-   [#23150](https://github.com/numpy/numpy/pull/23150): TYP, MAINT: Add a missing explicit `Any` parameter to the `npt.ArrayLike`\\...\r\n-   [#23161](https://github.com/numpy/numpy/pull/23161): BLD: remove redundant definition of npy_nextafter \\[wheel build\\]\r\n\r\n## Checksums\r\n\r\n### MD5\r\n\r\n    73fe0b507f56c0baf43171a76ad2003f  numpy-1.24.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    2dbbe6f8a14e14978d24de9fcc8b49fe  numpy-1.24.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    9ddadbf9cac2742318d8b292cb9ca579  numpy-1.24.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    969f4f33baaff53dbbbaf1a146c43534  numpy-1.24.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    6df575dff02feac835d22debb15d190e  numpy-1.24.2-cp310-cp310-win32.whl\r\n    2f939228a8c33265f2a8a1fce349d6f1  numpy-1.24.2-cp310-cp310-win_amd64.whl\r\n    c093e61421be01ffff435387839949f1  numpy-1.24.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    03d71e3d9a086b56837c461fd7c9188b  numpy-1.24.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    c0dc33697d156e2b9a029095efeb1b10  numpy-1.24.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    13b57957a1f40e13f8826d14b031a6fe  numpy-1.24.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    5afd966db0b59655618c1859d98d87f6  numpy-1.24.2-cp311-cp311-win32.whl\r\n    e0b850f9c20871cd65ecb35235688f4d  numpy-1.24.2-cp311-cp311-win_amd64.whl\r\n    9a30452135ab0387b8ea9007e94e9f81  numpy-1.24.2-cp38-cp38-macosx_10_9_x86_64.whl\r\n    bdd6eede4524a230574b37e1f631f2c0  numpy-1.24.2-cp38-cp38-macosx_11_0_arm64.whl\r\n    4f930a9030d77d45a1cb6f374c91fb53  numpy-1.24.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    e77155c010f9dd63ea2815579a28c503  numpy-1.24.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    1a45f4373945eaeabeaa4020ce04e8fd  numpy-1.24.2-cp38-cp38-win32.whl\r\n    66e93d70fad16b4ccb4531e31aad36e3  numpy-1.24.2-cp38-cp38-win_amd64.whl\r\n    93a4984da83c6811367d3daf709ed25c  numpy-1.24.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    e0281b96c490ba00f1382eb3984b4e51  numpy-1.24.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    ce97d81e4ae6e10241d471492391b1be  numpy-1.24.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    0c0ea440190705f98abeaa856e7da690  numpy-1.24.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    c25f7fbb185f1b8f7761bc22082d9939  numpy-1.24.2-cp39-cp39-win32.whl\r\n    7705c6b0bcf22b5e64cf248144b2f554  numpy-1.24.2-cp39-cp39-win_amd64.whl\r\n    07b6361e36e0093b580dc05799b1f03d  numpy-1.24.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    4c1466ae486b39d1a35aacb46256ec1e  numpy-1.24.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    4fea9d95e0489d06c3a24a87697d2fc0  numpy-1.24.2-pp38-pypy38_pp73-win_amd64.whl\r\n    c4212a8da1ecf17ece37e2afd0319806  numpy-1.24.2.tar.gz\r\n\r\n### SHA256\r\n\r\n    eef70b4fc1e872ebddc38cddacc87c19a3709c0e3e5d20bf3954c147b1dd941d  numpy-1.24.2-cp310-cp310-macosx_10_9_x86_64.whl\r\n    e8d2859428712785e8a8b7d2b3ef0a1d1565892367b32f915c4a4df44d0e64f5  numpy-1.24.2-cp310-cp310-macosx_11_0_arm64.whl\r\n    6524630f71631be2dabe0c541e7675db82651eb998496bbe16bc4f77f0772253  numpy-1.24.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    a51725a815a6188c662fb66fb32077709a9ca38053f0274640293a14fdd22978  numpy-1.24.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    2620e8592136e073bd12ee4536149380695fbe9ebeae845b81237f986479ffc9  numpy-1.24.2-cp310-cp310-win32.whl\r\n    97cf27e51fa078078c649a51d7ade3c92d9e709ba2bfb97493007103c741f1d0  numpy-1.24.2-cp310-cp310-win_amd64.whl\r\n    7de8fdde0003f4294655aa5d5f0a89c26b9f22c0a58790c38fae1ed392d44a5a  numpy-1.24.2-cp311-cp311-macosx_10_9_x86_64.whl\r\n    4173bde9fa2a005c2c6e2ea8ac1618e2ed2c1c6ec8a7657237854d42094123a0  numpy-1.24.2-cp311-cp311-macosx_11_0_arm64.whl\r\n    4cecaed30dc14123020f77b03601559fff3e6cd0c048f8b5289f4eeabb0eb281  numpy-1.24.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    9a23f8440561a633204a67fb44617ce2a299beecf3295f0d13c495518908e910  numpy-1.24.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e428c4fbfa085f947b536706a2fc349245d7baa8334f0c5723c56a10595f9b95  numpy-1.24.2-cp311-cp311-win32.whl\r\n    557d42778a6869c2162deb40ad82612645e21d79e11c1dc62c6e82a2220ffb04  numpy-1.24.2-cp311-cp311-win_amd64.whl\r\n    d0a2db9d20117bf523dde15858398e7c0858aadca7c0f088ac0d6edd360e9ad2  numpy-1.24.2-cp38-cp38-macosx_10_9_x86_64.whl\r\n    c72a6b2f4af1adfe193f7beb91ddf708ff867a3f977ef2ec53c0ffb8283ab9f5  numpy-1.24.2-cp38-cp38-macosx_11_0_arm64.whl\r\n    c29e6bd0ec49a44d7690ecb623a8eac5ab8a923bce0bea6293953992edf3a76a  numpy-1.24.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    2eabd64ddb96a1239791da78fa5f4e1693ae2dadc82a76bc76a14cbb2b966e96  numpy-1.24.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    e3ab5d32784e843fc0dd3ab6dcafc67ef806e6b6828dc6af2f689be0eb4d781d  numpy-1.24.2-cp38-cp38-win32.whl\r\n    76807b4063f0002c8532cfeac47a3068a69561e9c8715efdad3c642eb27c0756  numpy-1.24.2-cp38-cp38-win_amd64.whl\r\n    4199e7cfc307a778f72d293372736223e39ec9ac096ff0a2e64853b866a8e18a  numpy-1.24.2-cp39-cp39-macosx_10_9_x86_64.whl\r\n    adbdce121896fd3a17a77ab0b0b5eedf05a9834a18699db6829a64e1dfccca7f  numpy-1.24.2-cp39-cp39-macosx_11_0_arm64.whl\r\n    889b2cc88b837d86eda1b17008ebeb679d82875022200c6e8e4ce6cf549b7acb  numpy-1.24.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\r\n    f64bb98ac59b3ea3bf74b02f13836eb2e24e48e0ab0145bbda646295769bd780  numpy-1.24.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    63e45511ee4d9d976637d11e6c9864eae50e12dc9598f531c035265991910468  numpy-1.24.2-cp39-cp39-win32.whl\r\n    a77d3e1163a7770164404607b7ba3967fb49b24782a6ef85d9b5f54126cc39e5  numpy-1.24.2-cp39-cp39-win_amd64.whl\r\n    92011118955724465fb6853def593cf397b4a1367495e0b59a7e69d40c4eb71d  numpy-1.24.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\r\n    f9006288bcf4895917d02583cf3411f98631275bc67cce355a7f39f8c14338fa  numpy-1.24.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n    150947adbdfeceec4e5926d956a06865c1c690f2fd902efede4ca6fe2e657c3f  numpy-1.24.2-pp38-pypy38_pp73-win_amd64.whl\r\n    003a9f530e880cb2cd177cba1af7220b9aa42def9c4afc2a2fc3ee6be7eb2b22  numpy-1.24.2.tar.gz\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/numpy/numpy/releases/91397335/reactions",
      "total_count": 21,
      "+1": 13,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 2,
      "rocket": 4,
      "eyes": 1
    }
  }
]